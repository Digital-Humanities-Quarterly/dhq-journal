default namespace = "http://www.tei-c.org/ns/1.0"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.digitalhumanities.org/ns/dhq"
namespace ns2 = "http://web.resource.org/cc/"
namespace rdf = "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
namespace rng = "http://relaxng.org/ns/structure/1.0"
namespace sch = "http://purl.oclc.org/dsdl/schematron"
namespace xlink = "http://www.w3.org/1999/xlink"

# Schema generated from ODD source 2014-05-15T16:53:45Z. 
# Edition: 2.5.0. Last updated on
#	26th July 2013.
# Edition Location: http://www.tei-c.org/Vault/P5/2.5.0/
#

#
dhq_macro.paraContent =
  (text
   | dhq_model.phrase
   | dhq_model.inter
   | dhq_model.global
   | dhq_lg)*
dhq_macro.limitedContent =
  (text | dhq_model.limitedPhrase | dhq_model.inter)*
dhq_macro.phraseSeq = (text | dhq_model.phrase | dhq_model.global)*
dhq_macro.phraseSeq.limited =
  (text | dhq_model.limitedPhrase | dhq_model.global)*
dhq_macro.specialPara =
  (text
   | dhq_model.phrase
   | dhq_model.inter
   | dhq_model.divPart
   | dhq_model.global)*
dhq_data.numeric =
  xsd:double
  | xsd:token { pattern = "(\-?[\d]+/\-?[\d]+)" }
  | xsd:decimal
dhq_data.temporal.w3c =
  xsd:date
  | xsd:gYear
  | xsd:gMonth
  | xsd:gDay
  | xsd:gYearMonth
  | xsd:gMonthDay
  | xsd:time
  | xsd:dateTime
dhq_data.truthValue = xsd:boolean
dhq_data.language = xsd:language | ""
dhq_data.outputMeasurement =
  xsd:token {
    pattern =
      "[\-+]?\d+(\.\d+)?(%|cm|mm|in|pt|pc|px|em|ex|gd|rem|vw|vh|vm)"
  }
dhq_data.pattern = xsd:token
dhq_data.pointer = xsd:anyURI
dhq_data.versionNumber =
  xsd:token { pattern = "[\d]+[a-z]*[\d]*(\.[\d]+[a-z]*[\d]*){0,3}" }
dhq_data.replacement = text
dhq_data.word = xsd:token { pattern = "(\p{L}|\p{N}|\p{P}|\p{S})+" }
dhq_data.text = xsd:string
dhq_data.name = xsd:Name
dhq_data.enumerated = dhq_data.name
dhq_att.ascribed.attributes = dhq_att.ascribed.attribute.who
dhq_att.ascribed.attribute.who =
  
  ## indicates the person, or group of people, to whom the element content is ascribed.
  attribute who {
    list { dhq_data.pointer+ }
  }?
dhq_att.canonical.attributes =
  dhq_att.canonical.attribute.key, dhq_att.canonical.attribute.ref
dhq_att.canonical.attribute.key =
  
  ## provides an externally-defined means of identifying the entity (or entities) being named, using a coded value of some kind.
  attribute key { dhq_data.text }?
dhq_att.canonical.attribute.ref =
  
  ## (reference) provides an explicit means of locating a full definition for the entity being named by means of one or more URIs.
  attribute ref {
    list { dhq_data.pointer+ }
  }?
dhq_att.breaking.attributes = dhq_att.breaking.attribute.break
dhq_att.breaking.attribute.break =
  
  ## indicates whether or not the element bearing this attribute should be considered to mark the end of an orthographic token in the same way as whitespace.
  attribute break { dhq_data.enumerated }?
dhq_att.fragmentable.attributes = dhq_att.fragmentable.attribute.part
dhq_att.fragmentable.attribute.part =
  
  ## specifies whether or not its parent element is fragmented in some way, typically by some other overlapping structure: for example a speech which is divided between two or more verse stanzas, a paragraph which is split across a page division, a verse line which is divided between two speakers.
  [ a:defaultValue = "N" ]
  attribute part {
    
    ## (yes) the element is fragmented in some (unspecified) respect
    "Y"
    | 
      ## (no) either the element is not fragmented, or no claim is made as to its completeness.
      "N"
    | 
      ## (initial) this is the initial part of a fragmented element
      "I"
    | 
      ## (medial) this is a medial part of a fragmented element
      "M"
    | 
      ## (final) this is the final part of a fragmented element
      "F"
  }?
dhq_att.docStatus.attributes = dhq_att.docStatus.attribute.status
dhq_att.docStatus.attribute.status =
  
  ## describes the status of a document either currently or, when associated with a dated element, at the time indicated.
  ## Sample values include: 1] approved; 2] candidate; 3] cleared; 4] deprecated; 5] draft; 6] embargoed; 7] expired; 8] frozen; 9] galley; 10] proposed; 11] published; 12] recommendation; 13] submitted; 14] unfinished; 15] withdrawn
  [ a:defaultValue = "draft" ] attribute status { dhq_data.enumerated }?
dhq_att.responsibility.attributes =
  dhq_att.responsibility.attribute.resp
dhq_att.responsibility.attribute.resp =
  
  ## (responsible party) indicates the agency responsible for the intervention or interpretation, for example an editor or transcriber.
  attribute resp {
    list { dhq_data.pointer+ }
  }?
dhq_att.media.attributes =
  dhq_att.media.attribute.width,
  dhq_att.media.attribute.height,
  dhq_att.media.attribute.scale
dhq_att.media.attribute.width =
  
  ## Where the media are displayed, indicates the display width 
  attribute width { dhq_data.outputMeasurement }?
dhq_att.media.attribute.height =
  
  ## Where the media are displayed, indicates the display height
  attribute height { dhq_data.outputMeasurement }?
dhq_att.media.attribute.scale =
  
  ## Where the media are displayed, indicates a scale factor to be applied when generating the desired display size
  attribute scale { dhq_data.numeric }?
dhq_att.resourced.attributes = dhq_att.resourced.attribute.url
dhq_att.resourced.attribute.url =
  
  ## (uniform resource locator) specifies the URL from which the media concerned may be obtained.
  attribute url { dhq_data.pointer }
dhq_att.sortable.attributes = dhq_att.sortable.attribute.sortKey
dhq_att.sortable.attribute.sortKey =
  
  ## supplies the sort key for this element in an index, list or group which contains it.
  attribute sortKey { dhq_data.word }?
dhq_att.edition.attribute.edRef =
  
  ## (edition reference) provides a pointer to the source edition in which the associated feature (for example, a page, column, or line break) occurs at this point in the text.
  attribute edRef {
    list { dhq_data.pointer+ }
  }?
dhq_att.styleDef.attributes =
  dhq_att.styleDef.attribute.scheme,
  dhq_att.styleDef.attribute.schemeVersion
dhq_att.styleDef.attribute.scheme =
  
  ## identifies the language used to describe the rendition.
  attribute scheme {
    
    ## Cascading Stylesheet Language
    "css"
    | 
      ## Extensible Stylesheet Language Formatting Objects
      "xslfo"
    | 
      ## Informal free text description
      "free"
    | 
      ## A user-defined rendition description language
      "other"
  }?
dhq_att.styleDef.attribute.schemeVersion =
  
  ## supplies a version number for the style language provided in scheme.
  attribute schemeVersion { dhq_data.versionNumber }?
sch:pattern [
  id = "schemeVersion-constraint-schemeVersionRequiresScheme"
  "\x{a}" ~
  "      "
  sch:rule [
    context = "tei:*[@schemeVersion]"
    "\x{a}" ~
    "            "
    sch:assert [
      test = "@scheme and not(@scheme = 'free')"
      "\x{a}" ~
      "              @schemeVersion can only be used if @scheme is specified.\x{a}" ~
      "            "
    ]
    "\x{a}" ~
    "          "
  ]
  "\x{a}" ~
  "   "
]
dhq_model.nameLike.agent = dhq_name
dhq_model.nameLike.agent_alternation = dhq_name
dhq_model.nameLike.agent_sequence = dhq_name
dhq_model.nameLike.agent_sequenceOptional = dhq_name?
dhq_model.nameLike.agent_sequenceOptionalRepeatable = dhq_name*
dhq_model.nameLike.agent_sequenceRepeatable = dhq_name+
dhq_model.segLike = dhq_seg
dhq_model.hiLike = dhq_hi
dhq_model.hiLike_alternation = dhq_hi
dhq_model.hiLike_sequence = dhq_hi
dhq_model.hiLike_sequenceOptional = dhq_hi?
dhq_model.hiLike_sequenceOptionalRepeatable = dhq_hi*
dhq_model.hiLike_sequenceRepeatable = dhq_hi+
dhq_model.emphLike =
  dhq_foreign
  | dhq_emph
  | dhq_soCalled
  | dhq_term
  | dhq_title
  | dhq_code
dhq_model.emphLike_alternation =
  dhq_foreign
  | dhq_emph
  | dhq_soCalled
  | dhq_term
  | dhq_title
  | dhq_code
dhq_model.emphLike_sequence =
  dhq_foreign, dhq_emph, dhq_soCalled, dhq_term, dhq_title, dhq_code
dhq_model.emphLike_sequenceOptional =
  dhq_foreign?,
  dhq_emph?,
  dhq_soCalled?,
  dhq_term?,
  dhq_title?,
  dhq_code?
dhq_model.emphLike_sequenceOptionalRepeatable =
  dhq_foreign*,
  dhq_emph*,
  dhq_soCalled*,
  dhq_term*,
  dhq_title*,
  dhq_code*
dhq_model.emphLike_sequenceRepeatable =
  dhq_foreign+,
  dhq_emph+,
  dhq_soCalled+,
  dhq_term+,
  dhq_title+,
  dhq_code+
dhq_model.highlighted = dhq_model.hiLike | dhq_model.emphLike
dhq_model.dateLike = dhq_date
dhq_model.dateLike_alternation = dhq_date
dhq_model.dateLike_sequence = dhq_date
dhq_model.dateLike_sequenceOptional = dhq_date?
dhq_model.dateLike_sequenceOptionalRepeatable = dhq_date*
dhq_model.dateLike_sequenceRepeatable = dhq_date+
dhq_model.egLike = dhq_eg
dhq_model.egLike_alternation = dhq_eg
dhq_model.egLike_sequence = dhq_eg
dhq_model.egLike_sequenceOptional = dhq_eg?
dhq_model.egLike_sequenceOptionalRepeatable = dhq_eg*
dhq_model.egLike_sequenceRepeatable = dhq_eg+
dhq_model.graphicLike = dhq_media | dhq_graphic | dhq_formula
dhq_model.ptrLike = dhq_ptr | dhq_ref
dhq_model.milestoneLike = dhq_gb | dhq_lb | dhq_anchor
dhq_model.phrase.xml = dhq_att | dhq_gi | dhq_val
dhq_model.biblLike = dhq_bibl | dhq_listBibl
dhq_model.biblLike_alternation = dhq_bibl | dhq_listBibl
dhq_model.biblLike_sequence = dhq_bibl, dhq_listBibl
dhq_model.biblLike_sequenceOptional = dhq_bibl?, dhq_listBibl?
dhq_model.biblLike_sequenceOptionalRepeatable = dhq_bibl*, dhq_listBibl*
dhq_model.biblLike_sequenceRepeatable = dhq_bibl+, dhq_listBibl+
dhq_model.headLike = dhq_head
dhq_model.headLike_alternation = dhq_head
dhq_model.headLike_sequence = dhq_head
dhq_model.headLike_sequenceOptional = dhq_head?
dhq_model.headLike_sequenceOptionalRepeatable = dhq_head*
dhq_model.headLike_sequenceRepeatable = dhq_head+
dhq_model.labelLike = dhq_label
dhq_model.listLike = dhq_list | dhq_table
dhq_model.listLike_alternation = dhq_list | dhq_table
dhq_model.listLike_sequence = dhq_list, dhq_table
dhq_model.listLike_sequenceOptional = dhq_list?, dhq_table?
dhq_model.listLike_sequenceOptionalRepeatable = dhq_list*, dhq_table*
dhq_model.listLike_sequenceRepeatable = dhq_list+, dhq_table+
dhq_model.noteLike = dhq_note | dhq_caption
dhq_model.lLike = dhq_l
dhq_model.lLike_alternation = dhq_l
dhq_model.lLike_sequence = dhq_l
dhq_model.lLike_sequenceOptional = dhq_l?
dhq_model.lLike_sequenceOptionalRepeatable = dhq_l*
dhq_model.lLike_sequenceRepeatable = dhq_l+
dhq_model.pLike = dhq_p | dhq_ab
dhq_model.pLike_alternation = dhq_p | dhq_ab
dhq_model.pLike_sequence = dhq_p, dhq_ab
dhq_model.pLike_sequenceOptional = dhq_p?, dhq_ab?
dhq_model.pLike_sequenceOptionalRepeatable = dhq_p*, dhq_ab*
dhq_model.pLike_sequenceRepeatable = dhq_p+, dhq_ab+
dhq_model.stageLike = dhq_stage
dhq_model.stageLike_alternation = dhq_stage
dhq_model.stageLike_sequence = dhq_stage
dhq_model.stageLike_sequenceOptional = dhq_stage?
dhq_model.stageLike_sequenceOptionalRepeatable = dhq_stage*
dhq_model.stageLike_sequenceRepeatable = dhq_stage+
dhq_model.divPart = dhq_model.lLike | dhq_model.pLike | dhq_lg | dhq_sp
dhq_model.publicationStmtPart =
  dhq_address
  | dhq_date
  | dhq_publisher
  | dhq_pubPlace
  | dhq_idno
  | dhq_availability
  | dhq_articleType
  | dhq_revisionNote
dhq_model.descLike = notAllowed
dhq_model.glossLike = notAllowed
dhq_model.quoteLike = dhq_quote | dhq_cit
dhq_model.quoteLike_alternation = dhq_quote | dhq_cit
dhq_model.quoteLike_sequence = dhq_quote, dhq_cit
dhq_model.quoteLike_sequenceOptional = dhq_quote?, dhq_cit?
dhq_model.quoteLike_sequenceOptionalRepeatable = dhq_quote*, dhq_cit*
dhq_model.quoteLike_sequenceRepeatable = dhq_quote+, dhq_cit+
dhq_model.qLike = dhq_model.quoteLike | dhq_said | dhq_floatingText
dhq_model.qLike_alternation =
  dhq_model.quoteLike_alternation | dhq_said | dhq_floatingText
dhq_model.qLike_sequence =
  dhq_model.quoteLike_sequence, dhq_said, dhq_floatingText
dhq_model.qLike_sequenceOptional =
  dhq_model.quoteLike_sequenceOptional?, dhq_said?, dhq_floatingText?
dhq_model.qLike_sequenceOptionalRepeatable =
  dhq_model.quoteLike_sequenceOptionalRepeatable*,
  dhq_said*,
  dhq_floatingText*
dhq_model.qLike_sequenceRepeatable =
  dhq_model.quoteLike_sequenceRepeatable+, dhq_said+, dhq_floatingText+
dhq_model.respLike =
  dhq_author | dhq_editor | dhq_meeting | dhq_sponsor | dhq_authorInfo
dhq_model.divWrapper = dhq_dateline | dhq_epigraph | dhq_salute
dhq_model.divTopPart = dhq_model.headLike | dhq_dedication
dhq_model.divTop = dhq_model.divWrapper | dhq_model.divTopPart
dhq_model.divBottomPart = dhq_trailer | dhq_signed | dhq_postscript
dhq_model.divBottom = dhq_model.divWrapper | dhq_model.divBottomPart
dhq_model.imprintPart = dhq_publisher | dhq_biblScope | dhq_pubPlace
dhq_model.nameLike = dhq_model.nameLike.agent | dhq_idno
dhq_model.nameLike_alternation =
  dhq_model.nameLike.agent_alternation | dhq_idno
dhq_model.nameLike_sequence =
  dhq_model.nameLike.agent_sequence, dhq_idno
dhq_model.nameLike_sequenceOptional =
  dhq_model.nameLike.agent_sequenceOptional?, dhq_idno?
dhq_model.nameLike_sequenceOptionalRepeatable =
  dhq_model.nameLike.agent_sequenceOptionalRepeatable*, dhq_idno*
dhq_model.nameLike_sequenceRepeatable =
  dhq_model.nameLike.agent_sequenceRepeatable+, dhq_idno+
dhq_model.global = dhq_notatedMusic | dhq_figure
dhq_model.biblPart =
  dhq_model.respLike
  | dhq_model.imprintPart
  | dhq_series
  | dhq_citedRange
  | dhq_bibl
  | dhq_textLang
dhq_model.addrPart = dhq_model.nameLike
dhq_model.pPart.data = dhq_model.dateLike | dhq_model.nameLike
dhq_model.inter =
  dhq_model.egLike
  | dhq_model.biblLike
  | dhq_model.listLike
  | dhq_model.stageLike
  | dhq_model.qLike
  | dhq_example
dhq_model.common = dhq_model.divPart | dhq_model.inter | dhq_note
dhq_model.phrase =
  dhq_model.segLike
  | dhq_model.highlighted
  | dhq_model.graphicLike
  | dhq_model.ptrLike
  | dhq_model.milestoneLike
  | dhq_model.phrase.xml
  | dhq_model.labelLike
  | dhq_model.noteLike
  | dhq_model.pPart.data
  | dhq_q
dhq_model.limitedPhrase =
  dhq_model.hiLike
  | dhq_model.emphLike
  | dhq_model.ptrLike
  | dhq_model.phrase.xml
  | dhq_model.pPart.data
dhq_model.divLike = dhq_div | dhq_abstract | dhq_teaser
dhq_model.teiHeaderPart = dhq_encodingDesc | dhq_profileDesc
dhq_model.encodingDescPart =
  dhq_styleDefDecl | dhq_listPrefixDef | dhq_classDecl
dhq_model.profileDescPart =
  dhq_creation | dhq_langUsage | dhq_textClass | dhq_calendarDesc
dhq_att.source.attributes = dhq_att.source.attribute.source
dhq_att.source.attribute.source =
  
  ## (pointer to a bibliographical source reference) provides a pointer to the bibliographical source from which a quotation or citation is drawn.
  attribute source {
    list { dhq_data.pointer+ }
  }?
dhq_p =
  
  ## (paragraph) marks paragraphs in prose. [3.1.  7.2.5. ]
  element p {
    dhq_macro.paraContent, dhq_att.fragmentable.attributes, empty
  }
dhq_foreign =
  
  ## (foreign) identifies a word or phrase as belonging to some language other than that of the surrounding text.  [3.3.2.1. ]
  element foreign {
    dhq_macro.phraseSeq,
    
    ## Identifies the language of the element's content
    attribute xml:lang { dhq_data.language }?,
    empty
  }
dhq_emph =
  
  ## (emphasized) marks words or phrases which are stressed or emphasized for linguistic or rhetorical effect. [3.3.2.2.  3.3.2. ]
  element emph { dhq_macro.paraContent }
dhq_hi =
  
  ## (highlighted) marks a word or phrase as graphically distinct from the surrounding text, for reasons concerning which no claim is made.  [3.3.2.2.  3.3.2. ]
  element hi {
    dhq_macro.paraContent,
    
    ## Describes the presentation of the highlighted material.
    attribute rend {
      
      ## The designated content is intended to be rendered in bold type.
      "bold"
      | 
        ## The designated content is intended to be rendered in italic type.
        "italic"
      | 
        ## The designated content is intended to be rendered in monospace type.
        "monospace"
      | 
        ## The designated content is intended to be rendered within quotation marks. The nesting of single and double quotation marks will be handled by the stylesheet.
        "quotes"
      | 
        ## The designated content is intended to be rendered in small capital letters.
        "smcaps"
      | 
        ## The designated content is intended to be rendered as a subscript.
        "subscript"
      | 
        ## The designated content is intended to be rendered as a superscript.
        "superscript"
      | 
        ## The designated content is intended to be rendered with an underline.
        "underlined"
    }?,
    empty
  }
dhq_said =
  
  ## (speech or thought) indicates passages thought or spoken aloud, whether explicitly indicated in the source or not, whether directly or indirectly reported, whether by real people or fictional characters. [3.3.3. ]
  element said {
    dhq_macro.specialPara, dhq_att.ascribed.attributes, empty
  }
dhq_quote =
  
  ## (quotation) contains a phrase or passage attributed by the narrator or author to some agency external to the text. [3.3.3.  4.3.1. ]
  element quote {
    dhq_macro.specialPara,
    dhq_att.source.attributes,
    
    ## Describes the presentation of the quoted material, whether inline or set as a block.
    attribute rend {
      
      ## Designates an inline quotation (i.e. one that is flowed into the surrounding text rather than set off from it), typically containing text and inline elements.
      "inline"
      | 
        ## Designates a block quotation, typically containing one or more paragraphs or other chunky things.
        "block"
    },
    
    ##
    attribute xml:lang { dhq_data.language }?,
    empty
  }
dhq_q =
  
  ## (quoted) contains material which is distinguished from the surrounding text using quotation marks or a similar method, for any one of a variety of reasons including, but not limited to: direct speech or thought, technical terms or jargon, authorial distance, quotations from elsewhere, and passages that are mentioned but not used. [3.3.3. ]
  element q { dhq_macro.specialPara }
dhq_cit =
  
  ## (cited quotation) contains a quotation from some other document, together with a bibliographic reference to its source. In a dictionary it may contain an example text with at least one occurrence of the word form, used in the sense being described, or a translation of the headword, or an example.  [3.3.3.  4.3.1.  9.3.5.1. ]
  element cit {
    dhq_quote,
    (dhq_citRef | (dhq_ptr | dhq_ref | dhq_bibl))
  }
dhq_soCalled =
  
  ## contains a word or phrase for which the author or narrator indicates a disclaiming of responsibility, for example by the use of scare quotes or italics. [3.3.3. ]
  element soCalled { dhq_macro.phraseSeq }
dhq_term =
  
  ## contains a single-word, multi-word, or symbolic designation which is regarded as a technical term. [3.3.4. ]
  element term {
    dhq_macro.phraseSeq,
    dhq_att.canonical.attributes,
    
    ##
    attribute xml:lang { dhq_data.language }?,
    empty
  }
dhq_name =
  
  ## (name, proper noun) contains a proper noun or noun phrase. [3.5.1. ]
  element name {
    dhq_macro.phraseSeq,
    
    ## Specifies the role of the person named in relation to the bibliographic object.
    ## Suggested values include: 1] translator; 2] editor; 3] illustrator; 4] annotator; 5] programmer
    attribute role {
      
      ##
      "translator"
      | 
        ##
        "editor"
      | 
        ##
        "illustrator"
      | 
        ##
        "annotator"
      | 
        ##
        "programmer"
      | xsd:Name
    }?,
    empty
  }
dhq_email =
  
  ## (electronic mail address) contains an e-mail address identifying a location to which e-mail messages can be delivered.  [3.5.2. ]
  element email { dhq_macro.phraseSeq }
dhq_address =
  
  ## contains a postal address, for example of a publisher, an organization, or an individual. [3.5.2.  2.2.4.  3.11.2.4. ]
  element address {
    dhq_model.global*, (dhq_model.addrPart, dhq_model.global*)+
  }
dhq_date =
  
  ## contains a date in any format.contains a date in any format. [3.5.4.  2.2.4.  2.5.  3.11.2.4.  15.2.3.  13.3.6. 3.5.4.  2.2.4.  2.5.  3.11.2.4.  15.2.3.  13.3.6. ]
  element date {
    (text | dhq_model.phrase | dhq_model.global)*,
    (text | dhq_model.phrase | dhq_model.global)*,
    
    ## Provides a date in regularized format.
    attribute when { dhq_data.temporal.w3c }?,
    empty
  }
dhq_ptr =
  
  ## (pointer) defines a pointer to another location. [3.6.  16.1. ]
  element ptr {
    empty
    >> sch:pattern [
         id = "ptr-constraint-ptrAtts"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ptr"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "attributes @target and @cRef may be supplied on "
             sch:name [ ]
             "."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## Provides a pointer to a bibliographic citation.
    attribute target { dhq_data.pointer }?,
    
    ## The value will typically be either a numeric page reference or page range, or else a section number (which may be numeric or alphabetic, or may conceivably use some other ordering system)
    attribute loc { dhq_data.text }?,
    empty
  }
dhq_ref =
  
  ## (reference) defines a reference to another location, possibly modified by additional text or comment. [3.6.  16.1. ]
  element ref {
    dhq_macro.paraContent
    >> sch:pattern [
         id = "ref-constraint-refAtts"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:ref"
           "\x{a}" ~
           "               "
           sch:report [
             test = "@target and @cRef"
             "Only one of the\x{a}" ~
             "	attributes @target' and @cRef' may be supplied on "
             sch:name [ ]
             "\x{a}" ~
             "               "
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ],
    
    ## Provides a pointer to a bibliographic citation.
    attribute target { dhq_data.pointer }?,
    
    ## The value will typically be either a numeric page reference or page range, or else a section number (which may be numeric or alphabetic, or may conceivably use some other ordering system)
    attribute loc { dhq_data.text }?,
    
    ## Provides a classification of the reference
    attribute type {
      
      ## Indicates that the reference in question does not have a linked target.
      "offline"
    }?,
    empty
  }
dhq_list =
  
  ## (list) contains any sequence of items organized as a list. [3.7. ]
  element list {
    dhq_model.divTop*,
    dhq_item+,
    dhq_att.sortable.attributes,
    
    ## Classifies the element.
    attribute type {
      
      ## A numbered list
      "ordered"
      | 
        ## A bulleted list
        "unordered"
      | 
        ## A list with no numbering or bullets
        "simple"
      | 
        ## A gloss list, assumes the presence of a label preceding the item.
        "gloss"
      | 
        ## An annotated bibliography, assumes the presence of a bibl within label.
        "annotated_bibliography"
    }?,
    empty
  }
dhq_item =
  
  ## contains one component of a list. [3.7.  2.5. ]
  element item {
    dhq_macro.specialPara, dhq_att.sortable.attributes, empty
  }
dhq_label =
  
  ## contains any label or heading used to identify part of a text, typically but not exclusively in a list or glossary. [3.7. ]
  element label { dhq_macro.phraseSeq }
dhq_head =
  
  ## (heading) contains any type of heading, for example the title of a section, or the heading of a list, glossary, manuscript description, etc. [4.2.1. ]
  element head {
    (text
     | dhq_model.hiLike
     | dhq_model.dateLike
     | dhq_model.nameLike
     | dhq_model.emphLike
     | dhq_model.phrase.xml
     | dhq_model.ptrLike
     | dhq_quote
     | dhq_said
     | dhq_q
     | dhq_note)*
  }
dhq_note =
  
  ## contains a note or annotation. [3.8.1.  2.2.6.  3.11.2.8.  9.3.5.4. ]
  element note {
    dhq_macro.specialPara,
    
    ## Provides a unique identifier for the note
    attribute xml:id { xsd:ID }?,
    empty
  }
dhq_media =
  
  ## indicates the location of any form of external media such as an audio or video clip etc. [3.9. ]
  element media {
    dhq_model.descLike*,
    dhq_att.media.attributes,
    dhq_att.resourced.attributes,
    empty
  }
dhq_graphic =
  
  ## indicates the location of an inline graphic, illustration, or figure. [3.9. ]
  element graphic {
    dhq_model.descLike*,
    dhq_att.resourced.attributes,
    
    ## Classifies the type of graphic object.
    attribute type {
      
      ## A link to a video file
      "video"
    }?,
    empty
  }
dhq_gb =
  
  ## (gathering begins) marks the point in a transcribed codex at which a new gathering or quire begins. [3.10.3. ]
  element gb { empty, dhq_att.breaking.attributes, empty }
dhq_lb =
  
  ## (line break) marks the start of a new (typographic) line in some edition or version of a text. [3.10.3.  7.2.5. ]
  element lb {
    empty,
    dhq_att.edition.attribute.edRef,
    dhq_att.breaking.attributes,
    empty
  }
dhq_series =
  
  ## (series information) contains information about the series in which a book or other bibliographic item has appeared. [3.11.2.1. ]
  element series {
    (text
     | dhq_title
     | dhq_model.ptrLike
     | dhq_editor
     | dhq_biblScope
     | dhq_idno
     | dhq_textLang
     | dhq_model.global)*
  }
dhq_author =
  
  ## in a bibliographic reference, contains the name(s) of an author, personal or corporate, of a work; for example in the same form as that provided by a recognized bibliographic name authority.  [3.11.2.2.  2.2.1. ]
  element author { dhq_macro.phraseSeq }
dhq_editor =
  
  ## contains a secondary statement of responsibility for a bibliographic item, for example the name of an individual, institution or organization, (or of several such) acting as editor, compiler, translator, etc.  [3.11.2.2. ]
  element editor { dhq_macro.phraseSeq }
dhq_title =
  
  ## contains a title for any kind of work. [3.11.2.2.  2.2.1.  2.2.5. ]
  element title {
    dhq_macro.paraContent,
    dhq_att.canonical.attributes,
    
    ## The type attribute is to be used in the header to designate and distinguish the article and issue titles.
    attribute type {
      
      ##
      "article"
      | 
        ##
        "issue"
    }?,
    
    ## Describes the presentation of a title in the main body of the text and in the bibliography.
    attribute rend {
      
      ##
      "italic"
      | 
        ##
        "none"
      | 
        ##
        "quotes"
    }?,
    empty
  }
dhq_meeting =
  
  ## contains the formalized descriptive title for a meeting or conference, for use in a bibliographic description for an item derived from such a meeting, or as a heading or preamble to publications emanating from it. [3.11.2.2. ]
  element meeting { dhq_macro.limitedContent }
dhq_publisher =
  
  ## provides the name of the organization responsible for the publication or distribution of a bibliographic item. [3.11.2.4.  2.2.4. ]
  element publisher { dhq_macro.phraseSeq }
dhq_biblScope =
  
  ## (scope of bibliographic reference) defines the scope of a bibliographic reference, for example as a list of page numbers, or a named subdivision of a larger work. [3.11.2.4. ]
  element biblScope {
    dhq_macro.phraseSeq,
    
    ## identifies the unit of information conveyed by the element, e.g. columns, pages, volume.
    ## Suggested values include: 1] volume; 2] issue; 3] page; 4] line; 5] chapter; 6] part; 7] column
    attribute unit {
      
      ## the element contains a volume number.
      "volume"
      | 
        ## the element contains an issue number, or volume and issue numbers.
        "issue"
      | 
        ## the element contains a page number or page range.
        "page"
      | 
        ## the element contains a line number or line range.
        "line"
      | 
        ## the element contains a chapter indication (number and/or title)
        "chapter"
      | 
        ## the element identifies a part of a book or collection.
        "part"
      | 
        ## the element identifies a column.
        "column"
      | xsd:Name
    }?,
    empty
  }
dhq_citedRange =
  
  ## (cited range) defines the range of cited content, often represented by pages or other units [3.11.2.4. ]
  element citedRange {
    dhq_macro.phraseSeq,
    
    ## identifies the type of information conveyed by the element, e.g. columns, pages, volume.
    ## Suggested values include: 1] volume; 2] issue; 3] page; 4] line; 5] chapter; 6] part; 7] column
    attribute unit {
      
      ## the element contains a volume number.
      "volume"
      | 
        ## the element contains an issue number, or volume and issue numbers.
        "issue"
      | 
        ## the element contains a page number or page range.
        "page"
      | 
        ## the element contains a line number or line range.
        "line"
      | 
        ## the element contains a chapter indication (number and/or title)
        "chapter"
      | 
        ## the element identifies a part of a book or collection.
        "part"
      | 
        ## the element identifies a column.
        "column"
      | xsd:Name
    }?,
    
    ## specifies the starting point of the range of units indicated by the unit attribute.
    attribute from { dhq_data.word }?,
    
    ## specifies the end-point of the range of units indicated by the unit attribute.
    attribute to { dhq_data.word }?,
    empty
  }
dhq_pubPlace =
  
  ## (publication place) contains the name of the place where a bibliographic item was published. [3.11.2.4. ]
  element pubPlace { dhq_macro.phraseSeq }
dhq_bibl =
  
  ## (bibliographic citation) contains a loosely-structured bibliographic citation of which the sub-components may or may not be explicitly tagged.  [3.11.1.  2.2.7.  15.3.2. ]
  element bibl {
    (text
     | dhq_model.highlighted
     | dhq_model.pPart.data
     | dhq_model.segLike
     | dhq_model.ptrLike
     | dhq_model.biblPart
     | dhq_model.global)*,
    dhq_att.canonical.attributes,
    dhq_att.sortable.attributes,
    dhq_att.docStatus.attributes,
    
    ## provides a reference to a centralized bibliography
    attribute biblioID { dhq_data.text }?,
    
    ## Provides a label for use in generated bibliographies.
    attribute label { dhq_data.text }?,
    
    ## Provides a unique identifier for the bibliographic item
    attribute xml:id { xsd:ID }?,
    empty
  }
dhq_listBibl =
  
  ## (citation list) contains a list of bibliographic citations of any kind.  [3.11.1.  2.2.7.  15.3.2. ]
  element listBibl {
    (dhq_model.headLike*,
     (dhq_model.biblLike | dhq_model.milestoneLike)+),
    dhq_att.sortable.attributes,
    empty
  }
dhq_l =
  
  ## (verse line) contains a single, possibly incomplete, line of verse. [3.12.1.  3.12.  7.2.5. ]
  element l { dhq_macro.paraContent }
dhq_lg =
  
  ## (line group) contains one or more verse lines functioning as a formal unit, e.g. a stanza, refrain, verse paragraph, etc. [3.12.1.  3.12.  7.2.5. ]
  element lg {
    ((dhq_model.divTop | dhq_model.global)*,
     (dhq_model.lLike
      | dhq_model.stageLike
      | dhq_model.labelLike
      | dhq_lg),
     (dhq_model.lLike
      | dhq_model.stageLike
      | dhq_model.labelLike
      | dhq_model.global
      | dhq_lg)*,
     (dhq_model.divBottom, dhq_model.global*)*)
    >> sch:pattern [
         id = "lg-constraint-atleast1oflggapl"
         "\x{a}" ~
         "            "
         sch:rule [
           context = "tei:lg"
           "\x{a}" ~
           "               "
           sch:assert [
             test =
               "count(descendant::tei:lg|descendant::tei:l|descendant::tei:gap) > 0"
             "An lg element\x{a}" ~
             "        must contain at least one child l, lg or gap element."
           ]
           "\x{a}" ~
           "            "
         ]
         "\x{a}" ~
         "         "
       ]
  }
dhq_sp =
  
  ## (speech) contains an individual speech in a performance text, or a passage presented as such in a prose or verse text. [3.12.2.  3.12.  7.2.2. ]
  element sp {
    (dhq_model.global*,
     (dhq_speaker, dhq_model.global*)?,
     ((dhq_lg
       | dhq_model.lLike
       | dhq_model.pLike
       | dhq_model.listLike
       | dhq_model.stageLike
       | dhq_model.qLike),
      dhq_model.global*)+),
    dhq_att.ascribed.attributes,
    empty
  }
dhq_speaker =
  
  ## contains a specialized form of heading or label, giving the name of one or more speakers in a dramatic text or fragment. [3.12.2. ]
  element speaker { dhq_macro.phraseSeq }
dhq_stage =
  
  ## (stage direction) contains any kind of stage direction within a dramatic text or fragment. [3.12.2.  3.12.  7.2.4. ]
  element stage {
    dhq_macro.specialPara, dhq_att.ascribed.attributes, empty
  }
dhq_textLang =
  
  ## (text language) describes the languages and writing systems identified within the bibliographic work being described, rather than its description.  [3.11.2.4.  10.6.6. ]
  element textLang {
    dhq_macro.phraseSeq,
    
    ## (main language) supplies a code which identifies the chief language used in the bibliographic work.
    attribute mainLang { dhq_data.language }?,
    
    ## (other languages) one or more codes identifying any other languages used in the bibliographic work.
    attribute otherLangs {
      list { dhq_data.language* }
    }?,
    empty
  }
dhq_teiHeader =
  
  ## (TEI header) supplies the descriptive and declarative information making up an electronic title page prefixed to every TEI-conformant text. [2.1.1.  15.1. ]
  element teiHeader {
    (dhq_fileDesc, dhq_model.teiHeaderPart*, dhq_revisionDesc?),
    
    ## specifies the kind of document to which the header is attached, for example whether it is a corpus or individual text.
    ## Sample values include: 1] text; 2] corpus
    [ a:defaultValue = "text" ] attribute type { dhq_data.enumerated }?,
    empty
  }
dhq_fileDesc =
  
  ## (file description) contains a full bibliographic description of an electronic file. [2.2.  2.1.1. ]
  element fileDesc {
    (dhq_titleStmt, dhq_publicationStmt), dhq_sourceDesc+
  }
dhq_titleStmt =
  
  ## (title statement) groups information about the title of a work and those responsible for its content. [2.2.1.  2.2. ]
  element titleStmt { dhq_title+, dhq_model.respLike* }
dhq_sponsor =
  
  ## specifies the name of a sponsoring organization or institution. [2.2.1. ]
  element sponsor { dhq_macro.phraseSeq.limited }
dhq_publicationStmt =
  
  ## (publication statement) groups information concerning the publication or distribution of an electronic or other text.  [2.2.4.  2.2. ]
  element publicationStmt {
    dhq_model.pLike+ | dhq_model.publicationStmtPart+
  }
dhq_idno =
  
  ## (identifier) supplies any form of identifier used to identify some object, such as a bibliographic item, a person, a title, an organization, etc. in a standardized way. [2.2.4.  2.2.5.  3.11.2.4. ]
  element idno {
    (text | dhq_idno)*,
    dhq_att.sortable.attributes,
    
    ## categorizes the identifier, for example as an ISBN, Social Security number, etc. 
    attribute type { dhq_data.enumerated }?,
    empty
  }
dhq_availability =
  
  ## supplies information about the availability of a text, for example any restrictions on its use or distribution, its copyright status, any licence applying to it, etc. [2.2.4. ]
  element availability {
    dhq_License,
    
    ## supplies a code identifying the current availability of the text. 
    [ a:defaultValue = "unknown" ]
    attribute status {
      
      ## the text is freely available. 
      "free"
      | 
        ## the status of the text is unknown. 
        "unknown"
      | 
        ## the text is not freely available. 
        "restricted"
    }?,
    empty
  }
dhq_licence =
  
  ## contains information about a licence or other legal agreement applicable to the text. [2.2.4. ]
  element licence { dhq_macro.specialPara }
dhq_sourceDesc =
  
  ## (source description) describes the source from which an electronic text was derived or generated, typically a bibliographic description in the case of a digitized text, or a phrase such as "born digital" for a text which has no previous existence. [2.2.7. ]
  element sourceDesc {
    dhq_model.pLike+ | (dhq_model.biblLike | dhq_model.listLike)+
  }
dhq_encodingDesc =
  
  ## (encoding description) documents the relationship between an electronic text and the source or sources from which it was derived. [2.3.  2.1.1. ]
  element encodingDesc {
    (dhq_model.encodingDescPart | dhq_model.pLike)+
  }
dhq_styleDefDecl =
  
  ## (style definition language declaration) specifies the name of the formal language in which style or renditional information is supplied elsewhere in the document. The specific version of the scheme may also be supplied. [2.3.5. ]
  element styleDefDecl {
    dhq_model.pLike*, dhq_att.styleDef.attributes, empty
  }
dhq_att.patternReplacement.attributes =
  dhq_att.patternReplacement.attribute.matchPattern,
  dhq_att.patternReplacement.attribute.replacementPattern
dhq_att.patternReplacement.attribute.matchPattern =
  
  ## specifies a regular expression against which the values of other attributes can be matched.
  attribute matchPattern { dhq_data.pattern }
dhq_att.patternReplacement.attribute.replacementPattern =
  
  ## specifies a replacement pattern which, once subpattern substitution has been performed, provides a URI.
  attribute replacementPattern { dhq_data.replacement }
dhq_prefixDef =
  
  ## (prefixing scheme used in data.pointer values) defines a prefixing scheme used in data.pointer values, showing how abbreviated URIs using the scheme may be expanded into full URIs. [16.2.3. ]
  element prefixDef {
    dhq_model.pLike*,
    dhq_att.patternReplacement.attributes,
    
    ## supplies the identifier which functions as the prefix for an abbreviated pointing scheme such as a private URI scheme. The prefix constitutes the text preceding the first colon.
    attribute ident { dhq_data.name },
    empty
  }
dhq_listPrefixDef =
  
  ## (list of prefix definitions) contains a list of definitions of prefixing schemes used in data.pointer values, showing how abbreviated URIs using each scheme may be expanded into full URIs. [16.2.3. ]
  element listPrefixDef { (dhq_prefixDef | dhq_listPrefixDef)+ }
dhq_classDecl =
  
  ## (classification declarations) contains one or more taxonomies defining any classificatory codes used elsewhere in the text. [2.3.7.  2.3. ]
  element classDecl { dhq_taxonomy+ }
dhq_taxonomy =
  
  ## defines a typology either implicitly, by means of a bibliographic citation, or explicitly by a structured taxonomy. [2.3.7. ]
  element taxonomy {
    ((dhq_model.glossLike | dhq_model.descLike)* | dhq_model.biblLike),
    
    ## Provides a unique identifier for the taxonomy
    attribute xml:id { xsd:ID }?,
    empty
  }
dhq_profileDesc =
  
  ## (text-profile description) provides a detailed description of non-bibliographic aspects of a text, specifically the languages and sublanguages used, the situation in which it was produced, the participants and their setting. [2.4.  2.1.1. ]
  element profileDesc { dhq_model.profileDescPart* }
dhq_creation =
  
  ## contains information about the creation of a text. [2.4.1.  2.4. ]
  element creation {
    (text | dhq_model.limitedPhrase | dhq_listChange)*
  }
dhq_langUsage =
  
  ## (language usage) describes the languages, sublanguages, registers, dialects, etc. represented within a text. [2.4.2.  2.4.  15.3.2. ]
  element langUsage { dhq_language+ }
dhq_language =
  
  ## characterizes a single language or sublanguage used within a text. [2.4.2. ]
  element language {
    dhq_macro.phraseSeq.limited,
    
    ## (identifier) Supplies a language code constructed as defined in BCP 47 which is used to identify the language documented by this element, and which is referenced by the global xml:lang attribute.
    attribute ident { dhq_data.language },
    
    ## specifies the approximate percentage (by volume) of the text which uses this language. 
    attribute usage {
      xsd:nonNegativeInteger { maxInclusive = "100" }
    }?,
    empty
  }
dhq_textClass =
  
  ## (text classification) groups information which describes the nature or topic of a text in terms of a standard classification scheme, thesaurus, etc. [2.4.3. ]
  element textClass { (dhq_keywords)* }
dhq_keywords =
  
  ## contains a list of keywords or phrases identifying the topic or nature of a text. [2.4.3. ]
  element keywords {
    (dhq_term+ | dhq_list),
    
    ## identifies the controlled vocabulary within which the set of keywords concerned is defined. 
    attribute scheme { dhq_data.pointer }?,
    empty
  }
dhq_calendarDesc =
  
  ## (calendar description) contains a description of the calendar system used in any dating expression found in the text. [2.4.  2.4.4. ]
  element calendarDesc { dhq_calendar+ }
dhq_calendar =
  
  ## describes a calendar or dating system used in a dating formula in the text. [2.4.4. ]
  element calendar { dhq_model.pLike+ }
dhq_revisionDesc =
  
  ## (revision description) summarizes the revision history for a file. [2.5.  2.1.1. ]
  element revisionDesc {
    (dhq_list | dhq_listChange | dhq_change+),
    dhq_att.docStatus.attributes,
    empty
  }
dhq_change =
  
  ## documents a change or set of changes made during the production of a source document, or during the revision of an electronic file. [2.5.  2.4.1. ]
  element change {
    dhq_macro.specialPara,
    dhq_att.ascribed.attributes,
    dhq_att.docStatus.attributes,
    
    ## Provides a date in regularized format.
    attribute when { dhq_data.temporal.w3c }?,
    
    ## points to one or more elements that belong to this change.
    attribute target {
      list { dhq_data.pointer+ }
    }?,
    empty
  }
dhq_listChange =
  
  ## groups a number of change descriptions associated with either the creation of a source text or the revision of an encoded text.  [2.5.  11.7. ]
  element listChange {
    (dhq_listChange | dhq_change)+,
    dhq_att.sortable.attributes,
    
    ## indicates whether the ordering of its child change elements is to be considered significant or not
    [ a:defaultValue = "true" ]
    attribute ordered { dhq_data.truthValue }?,
    empty
  }
dhq_TEI =
  
  ## (TEI document) contains a single TEI-conformant document, comprising a TEI header and a text, either in isolation or as part of a teiCorpus element. [4.  15.1. ]
  element TEI {
    (dhq_teiHeader, (dhq_text? | dhq_text))
    >> sch:ns [ prefix = "tei" uri = "http://www.tei-c.org/ns/1.0" ]
    >> sch:ns [
         prefix = "rng"
         uri = "http://relaxng.org/ns/structure/1.0"
       ]
  }
dhq_text =
  
  ## contains a single text of any kind, whether unitary or composite, for example a poem or drama, a collection of essays, a novel, a dictionary, or a corpus sample. [4.  15.1. ]
  element text {
    (dhq_model.global*,
     (dhq_front, dhq_model.global*)?,
     (dhq_body),
     dhq_model.global*,
     (dhq_back, dhq_model.global*)?),
    
    ## Identifies the language of the element's content
    attribute xml:lang { dhq_data.language }?,
    empty
  }
dhq_body =
  
  ## (text body) contains the whole body of a single unitary text, excluding any front or back matter. [4. ]
  element body {
    dhq_model.global*,
    (dhq_model.divTop, (dhq_model.global | dhq_model.divTop)*)?,
    (empty, (dhq_model.global)*)?,
    ((dhq_model.divLike, (dhq_model.global)*)+
     | (empty, (dhq_model.global)*)+
     | ((dhq_model.common, dhq_model.global*)+,
        ((dhq_model.divLike, (dhq_model.global)*)+
         | (empty, (dhq_model.global)*)+)?)),
    (dhq_model.divBottom, dhq_model.global*)*
  }
dhq_floatingText =
  
  ## contains a single text of any kind, whether unitary or composite, which interrupts the text containing it at any point and after which the surrounding text resumes. [4.3.2. ]
  element floatingText {
    (dhq_model.global*,
     (dhq_front, dhq_model.global*)?,
     (dhq_body),
     dhq_model.global*,
     (dhq_back, dhq_model.global*)?),
    
    ## Identifies the language of the element's content
    attribute xml:lang { dhq_data.language }?,
    empty
  }
dhq_div =
  
  ## (text division) contains a subdivision of the front, body, or back of a text. [4.1. ]
  element div {
    ((dhq_model.divTop | dhq_model.global)*,
     (((dhq_model.divLike, dhq_model.global*)+
       | ((dhq_model.common, dhq_model.global*)+,
          (dhq_model.divLike, dhq_model.global*)*)),
      (dhq_model.divBottom, dhq_model.global*)*)?),
    
    ## Provides a unique identifier for the division.
    attribute xml:id { xsd:ID }?,
    
    ##
    attribute xml:lang { dhq_data.language }?,
    empty
  }
dhq_trailer =
  
  ## contains a closing title or footer appearing at the end of a division of a text.  [4.2.4.  4.2. ]
  element trailer { dhq_macro.phraseSeq }
dhq_dateline =
  
  ## contains a brief description of the place, date, time, etc. of production of a letter, newspaper story, or other work, prefixed or suffixed to it as a kind of heading or trailer.  [4.2.2. ]
  element dateline { dhq_macro.phraseSeq }
dhq_epigraph =
  
  ## contains a quotation, anonymous or attributed, appearing at the start or end of a section or on a title page.  [4.2.3.  4.2.  4.6. ]
  element epigraph {
    (dhq_model.common | dhq_model.global)*,
    
    ## Describes the presentation of the quoted material, whether inline or set as a block.
    attribute rend {
      
      ## Designates a block quotation, typically containing one or more paragraphs or other chunky things, with the block and text centered. 
      "center"
    }?,
    empty
  }
dhq_salute =
  
  ## (salutation) contains a salutation or greeting prefixed to a foreword, dedicatory epistle, or other division of a text, or the salutation in the closing of a letter, preface, etc. [4.2.2. ]
  element salute { dhq_macro.phraseSeq }
dhq_signed =
  
  ## (signature) contains the closing salutation, etc., appended to a foreword, dedicatory epistle, or other division of a text.  [4.2.2. ]
  element signed { dhq_macro.paraContent }
dhq_postscript =
  
  ## contains a postscript, e.g. to a letter. [4.2. ]
  element postscript {
    (dhq_model.global | dhq_model.divTopPart)*,
    dhq_model.common,
    (dhq_model.global | dhq_model.common)*,
    (dhq_model.divBottomPart, dhq_model.global*)*
  }
dhq_front =
  
  ## The front matter consists of an abstract followed by a teaser.
  element front { dhq_abstract, dhq_teaser }
dhq_back =
  
  ##
  element back { dhq_listBibl? }
dhq_table =
  
  ## contains text displayed in tabular form, in rows and columns. [14.1.1. ]
  element table {
    dhq_head?,
    dhq_row+,
    dhq_caption?,
    
    ## Provides a unique identifier for the table
    attribute xml:id { xsd:ID }?,
    
    ##
    attribute rend {
      
      ##
      "unbordered"
    }?,
    empty
  }
dhq_row =
  
  ## contains one row of a table.  [14.1.1. ]
  element row {
    dhq_cell+,
    
    ## Describes the role of the table row
    attribute role {
      
      ## Indicates that the cell serves as a label (otherwise is assumed to be data)
      "label"
      | 
        ## Indicates that the cell contains data (default value)
        "data"
    }?,
    empty
  }
dhq_cell =
  
  ## contains one cell of a table.  [14.1.1. ]
  element cell {
    dhq_macro.specialPara,
    
    ## Describes the role of the table cell
    attribute role {
      
      ## Indicates that the cell serves as a label (otherwise is assumed to be data)
      "label"
      | 
        ## Indicates that the cell contains data (default value)
        "data"
    }?,
    empty
  }
dhq_formula =
  
  ## contains a mathematical or other formula. [14.2. ]
  element formula { (text | dhq_note | dhq_model.graphicLike)* }
dhq_notatedMusic =
  
  ## encodes the presence of music notation in a text [14.3. ]
  element notatedMusic {
    (dhq_model.labelLike | dhq_model.ptrLike | dhq_graphic)*
  }
dhq_figure =
  
  ## groups elements representing or containing graphic information such as an illustration, formula, or figure. [14.4. ]
  element figure {
    dhq_head?,
    (dhq_figDesc | dhq_model.graphicLike | dhq_figure)*,
    dhq_caption?,
    
    ## Provides a unique identifier for the figure
    attribute xml:id { xsd:ID }?,
    empty
  }
dhq_figDesc =
  
  ## (description of figure) contains a brief prose description of the appearance or content of a graphic figure, for use when documenting an image without displaying it. [14.4. ]
  element figDesc { dhq_macro.limitedContent }
dhq_att =
  
  ## (attribute) contains the name of an attribute appearing within running text. [22. ]
  element att {
    dhq_data.name,
    
    ## supplies an identifier for the scheme in which this name is defined.
    ## Sample values include: 1] TEI(text encoding initiative) ; 2] DBK(docbook) ; 3] XX(unknown) 
    [ a:defaultValue = "TEI" ]
    attribute scheme { dhq_data.enumerated }?,
    empty
  }
dhq_code =
  
  ## contains literal code from some formal language such as a programming language. [22.1.1. ]
  element code {
    text,
    
    ## (formal language) a name identifying the formal language in which the code is expressed
    attribute lang { dhq_data.word }?,
    empty
  }
dhq_eg =
  
  ## (example) contains any kind of illustrative example.  [22.4.4.  22.4.5. ]
  element eg { (dhq_hi | text)* }
dhq_gi =
  
  ## (element name) contains the name (generic identifier) of an element. [22.  22.4.4. ]
  element gi {
    dhq_data.name,
    
    ## supplies the name of the scheme in which this name is defined.
    ## Sample values include: 1] TEI; 2] DBK(docbook) ; 3] XX(unknown) ; 4] Schematron; 5] HTML
    [ a:defaultValue = "TEI" ]
    attribute scheme { dhq_data.enumerated }?,
    empty
  }
dhq_val =
  
  ## (value) contains a single attribute value. [22.  22.4.5. ]
  element val { text }
dhq_ab =
  
  ## (anonymous block) contains any arbitrary component-level unit of text, acting as an anonymous container for phrase or inter level elements analogous to, but without the semantic baggage of, a paragraph. [16.3. ]
  element ab {
    dhq_macro.paraContent,
    
    ##
    attribute type { dhq_data.name }?,
    empty
  }
dhq_anchor =
  
  ## (anchor point) attaches an identifier to a point within a text, whether or not it corresponds with a textual element. [8.4.2.  16.4. ]
  element anchor {
    empty,
    
    ##
    attribute xml:id { xsd:ID }?,
    empty
  }
dhq_seg =
  
  ## (arbitrary segment) represents any segmentation of text below the chunk level. [16.3.  6.2.  7.2.5. ]
  element seg {
    dhq_macro.paraContent,
    dhq_att.responsibility.attributes,
    
    ##
    attribute type { dhq_data.name }?,
    empty
  }
dhq_citRef =
  
  ## (citation reference) A wrapper element for the citation information associated with cit
  element ns1:citRef { (dhq_ptr | dhq_ref | dhq_bibl | text)+ }
dhq_example =
  
  ## An example is similar to a figure, but presents textual information (e.g. code or a sample text) instead of a graphic.
  element ns1:example {
    dhq_head?,
    dhq_model.common*,
    dhq_caption?,
    
    ## Provides a unique identifier for the example item
    attribute xml:id { xsd:ID }?,
    
    ## Identifies the language of the element's content
    attribute xml:lang { dhq_data.language }?,
    empty
  }
dhq_articleType =
  
  ## Designates the type of article
  element ns1:articleType {
    "article" | "review" | "editorial" | "opinion" | "frontmatter"
  }
dhq_abstract =
  
  ## The abstract for the article. Contains one or more paragraphs.
  element ns1:abstract { dhq_p+ }
dhq_teaser =
  
  ## The teaser for the article. Contains one or more paragraphs
  element ns1:teaser { dhq_p }
dhq_author_name =
  
  ## Contains the name of an author of the article.
  element ns1:author_name { (text | dhq_family)+ }
dhq_family =
  
  ## Identifies the family name of the author.
  element ns1:family { text }
dhq_affiliation =
  
  ## Describes the author's affiliation.
  element ns1:affiliation { text }
dhq_bio =
  
  ## Contains a brief biography of the author. Contains one or more paragraphs.
  element ns1:bio { dhq_p+ }
dhq_authorInfo =
  
  ## In DHQPublish, the authorInfo element contains contact and biographical details of the author.
  element ns1:authorInfo {
    dhq_author_name, dhq_affiliation?, dhq_email?, dhq_bio?
  }
dhq_caption =
  
  ## A caption for a figure or table. May contain either paragraphs or mixed content.
  element ns1:caption {
    (text
     | dhq_model.phrase
     | dhq_model.inter
     | dhq_model.divPart
     | dhq_model.global)*
  }
dhq_revisionNote =
  
  ## A revisionNote contains information about a post-publication revision to the article.
  element ns1:revisionNote {
    dhq_macro.limitedContent,
    
    ##
    attribute previous { dhq_data.pointer }?,
    
    ##
    attribute when { dhq_data.temporal.w3c }?,
    empty
  }
dhq_dedication =
  
  ## A dedication contains a brief phrase of dedication; it appears at the top of the article as a child of body, immediately following the heading
  element ns1:dedication { text }
dhq_License =
  
  ##
  element ns2:License {
    empty,
    
    ##
    attribute rdf:about { dhq_data.pointer }?,
    empty
  }
start = dhq_TEI
