<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="../../common/schema/DHQauthor-TEI.rng" type="xml"?><?oxygen SCHSchema="../../common/schema/dhqTEI-ready.sch"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:dhq="http://www.digitalhumanities.org/ns/dhq"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:cc="http://web.resource.org/cc/">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>Reading Potential: The Oulipo and the Meaning of Algorithms</title>
            <author>Mark Wolff</author>
            <dhq:authorInfo>
               <dhq:author_name>Mark <dhq:family>Wolff</dhq:family>
               </dhq:author_name>
               <dhq:affiliation>Hartwick College</dhq:affiliation>
               <email>wolffm0@hartwick.edu</email>
               <dhq:bio>
                  <p>Mark Wolff is an Assistant Professor of French at Hartwick College in Oneonta,
                     New York. His research interests include the 19th-century French novel, canon
                     formation, the Oulipo, and humanities computing.</p>
               </dhq:bio>
            </dhq:authorInfo>
         </titleStmt>
         <publicationStmt>
            <publisher>Alliance of Digital Humanities Organizations</publisher>
            <publisher>Association of Computers and the Humanities</publisher>
            <idno type="DHQarticle-id">000005</idno>
            <idno type="volume">001</idno>
            <idno type="issue">1</idno>
            <dhq:articleType>article</dhq:articleType>
            <date when="2007-04-03">3 April 2007</date>
            <availability>
               <cc:License xmlns="http://digitalhumanities.org/DHQ/namespace"
                  rdf:about="https://creativecommons.org/licenses/by-nd/2.5/"/>
            </availability>
         </publicationStmt>
         <sourceDesc>
            <p>Authored for DHQ; migrated from original DHQauthor format</p>
         </sourceDesc>
      </fileDesc>
      <encodingDesc>
         <classDecl>
            <taxonomy xml:id="dhq_keywords">
               <bibl>DHQ classification scheme; full list available in the <ref
                     target="http://www.digitalhumanities.org/dhq/taxonomy.xml">DHQ keyword
                     taxonomy</ref>
               </bibl>
            </taxonomy>
            <taxonomy xml:id="authorial_keywords">
               <bibl>Keywords supplied by author; no controlled vocabulary</bibl>
            </taxonomy>
         </classDecl>
      </encodingDesc>
      <profileDesc>
         <langUsage>
            <language ident="en"/>
            <language ident="fr"/>
         </langUsage>
      </profileDesc>
      <revisionDesc>
         <change when="2007-01-16" who="Julia Flanders">Revised encoding and copyedited
            document.</change>
         <change when="2007-03-25" who="Julia Flanders">Gave all italic titles explicit rend value;
            fixed spacing and punctuation errors; added cit encoding.</change>
         <change when="2007-03-25" who="Julia Flanders">Final fixes based on author review.</change>
         <change when="2008-06-16" who="Ashwini">Updated revisionDesc format, added publicationStmt,
            added blank teaser, changed xref to ref, changed file attribute of graphic element to
            url attribute for validation with new schema, added "#" to target attribute of ptr and
            internal ref</change>
         <change when="2009-03-05" who="CRB">Added bio from bios.xml</change>
         <change when="2013-06-20" who="Tassie Gniady">Changed "dhq:caption" to "head."</change>
      </revisionDesc>
   </teiHeader>
   <text xml:lang="en">
      <front>
         <dhq:abstract>
            <p>Recent efforts to reconceptualize text analysis with computers in order to broaden
               the appeal of humanities computing have invoked the example of the Oulipo. Although
               there are similarities between the activities of the Oulipo and the new approach to
               computer-assisted literary analysis, the development of tools for the express purpose
               of encouraging scholars to play with texts does not follow the model of Oulipian
               research into potentialities. For the Oulipo, potential text analysis is less a
               question of interpreting literature than of supplying algorithms for the good use one
               can make of reading. Producing exemplary interpretations with algorithms is a
               secondary consideration. Oulipian constraints are better understood as toys with no
               intended purpose rather than as tools we use with some objective in mind. The
               procedures for making sense of texts provide for their own interpretation: they are
               not only instruments for discovering meaning but also reflections on making
               meaning.</p>
         </dhq:abstract>
         <dhq:teaser>
            <p>Examines the Oulipian approach to computer-assisted literary analysis.</p>
         </dhq:teaser>
      </front>
      <body>
         <p>Researchers in the humanities who focus their efforts on the use of computer technology
            to engage texts have wrestled with the relevance of their work. Within the field of
            humanities computing, scholars have used information technology to analyze single texts
            as well as large corpora in search of patterns that would be difficult to detect without
            the use of machines. Despite the ability of computers to organize and process massive
            amounts of textual data, the broader community of literary scholars has not readily
            accepted the potential of digital technology in humanities research. In 1993, Mark Olsen
            argued that scholars using computers to analyze texts tended to focus on quantifying a
            literary effect instead of exploring how texts are meaningful in broader historical and
            cultural contexts <ptr target="#olsen1993"/>. Recent efforts to reconceptualize text
            analysis with computers have emphasized hypothesis testing and the search for elusive
            patterns that may provide insight into interpreting texts. In order to broaden the
            appeal of this new direction in humanities computing, advocates have invoked the example
            of the Oulipo, a group of writers in France that invent <q>potential</q> ways to create
            literature using rigorous formal constraints. The idea that computers can lend
            themselves to formal methods of subjective textual study (thereby assuaging concerns
            that computers will make reading literature a soulless process of crunching numbers) is
            expressed forcefully by Jerome McGann in his book <title rend="italic">Radiant
               Textuality</title>. For McGann, the Oulipo set an example of what can be done with
            combinatorial methods to realize Alfred Jarry's program of pataphysics as a <cit>
               <quote rend="inline" source="#mcgann2001a">science of exceptions</quote>
               <ptr loc="222" target="#mcgann2001a"/>
            </cit>. Rejecting the practice of using computers as tools for objective, empirical
            research, Stephen Ramsay envisions an algorithmic criticism that transforms texts <cit>
               <quote rend="inline" source="#ramsay2003">for the purpose of releasing what the
                  Oulipians would call their <q>potentialities</q>
               </quote>
               <ptr target="#ramsay2003" loc="172"/>
            </cit>. Stéfan Sinclair has developed HyperPo as a web-based tool for helping scholars
            read and play with texts using procedures inspired by the Oulipo <ptr
               target="#sinclair2003b"/>. The idea of playing with texts using computers is pursued
            further by Geoffrey Rockwell who calls for the creation of web-based playpens where
            scholars can experiment with tools and discover new ways to formulate and test
            hypotheses about what texts mean <ptr target="#rockwell2003"/>.</p>
         <p>Although there are similarities between the activities of the Oulipo and the new
            approach to computer-assisted literary analysis, the development of tools for the
            express purpose of encouraging scholars to play with texts does not follow the model of
            Oulipian research into potentialities. For the Oulipo, the invention of procedures for
            playing with texts is its own end, an intellectual activity that invites application but
            does not require adoption by others as an indication of success. According to Raymond
            Queneau, one of the founding members of the Oulipo, <cit>
               <quote rend="inline" source="#motte1986">The word <q>potential</q> concerns the very
                  nature of literature; that is, fundamentally it's less a question of literature
                  strictly speaking than of supplying forms for the good use one can make of
                  literature. We call potential literature the search for new forms and structures
                  that may be used by writers in any way they see fit</quote>
               <ptr target="#motte1986" loc="38"/>
            </cit>. Queneau makes it clear that what the Oulipo does relates to but does not
            constitute literary creation. Writing is a derivative activity: the Oulipo pursue what
            we might call speculative or theoretical literature and leave the application of the
            constraints to practitioners who may (or may not) find their procedures useful.
            According to François Le Lionnais, another founding member, a method for writing
            literature need not produce an actual text: <cit>
               <quote rend="inline" source="#bens1980">method is sufficient in and of itself. There
                  are methods without textual examples. An example is an additional pleasure for the
                  author and the reader</quote>
               <ptr loc="88" target="#bens1980"/>
            </cit>. </p>
         <p>The Oulipo did not articulate a clear statement explaining potential methods for reading
            literature, but we can extrapolate a definition from how they described their efforts to
            invent methods for writing literature. <emph>Potential text analysis is less a question
               of interpreting literature than of supplying algorithms for the good use one can make
               of reading. Producing exemplary interpretations with algorithms is a secondary
               consideration.</emph> It follows that the interpretation of texts using a computer
            should not be in and of itself the objective of potential text analysis. The objective
            should be the invention of algorithms that scholars may (or may not) use, according to
            their own interests. The potentiality of computers as tools for text analysis implies
            that scholars engaged in the derivative activity of interpreting literature may not find
            such methods useful.</p>
         <p>By inventing procedures for generating texts, the Oulipo separated the formal aspects of
            writing from its content so that procedures for making texts could be carried out
            independently of those who invent the procedures. As the Oulipo declared in a
            presentation of its work to the Collège de 'Pataphysique, this is a new era in the
            history of literature: <cit>
               <quote rend="inline" source="#motte1986">Thus, the time of <emph>created
                     creations</emph>, which was that of the literary works we know, should cede to
                  the era of <emph>creating creations</emph>, capable of developing from themselves
                  and beyond themselves, in a manner at once predictable and inexhaustibly
                  unforeseen</quote>
               <ptr target="#motte1986" loc="48–49"/>
            </cit>. The transition from <emph>created creations</emph> to <emph>creating
               creations</emph> divides the traditional author function into what Christelle
            Reggiani identifies as the biphasic Oulipian functions of the inventor and the poet <ptr
               loc="110" target="#reggiani1999"/>. The first phase involves an inventor who devises
            constraints that will guide the production of a text. The inventor does not worry about
            what the constraints will produce: he seeks consistency and robustness in formal
            procedures. During the second phase, a poet applies the constraints in a particular
            instance and produces a text. Clearly the role of the inventor is privileged over the
            poet. Whereas the poet can only follow the rules of literary form and assemble a finite
            number of texts, the inventor explores potential forms which can generate innumerable
            texts.</p>
         <p>When the Oulipo formed in 1960, one of the first things they discussed was using
            computers to read and write literature. They communicated regularly with Dmitri
            Starynkevitch, a computer programmer who helped develop the IBM SEA CAB 500 computer.
            The relatively small size and low cost of the SEA CAB 500 along with its high-level
            programming language PAF (Programmation Automatique des Formules) provided the Oulipo
            with a precursor to the personal computer <ptr target="#starynkevitch1990"/>.
            Starynkevitch used the machine to create an imaginary telephone directory composed of
            realistic names and numbers generated by his computer: <dhq:example>
               <head>Computer-generated names and addresses from Starynkevitch's telephone
                  directory</head>
               <list type="simple">
                  <item>Tab Philippe, 14, rue de La Machine normande</item>
                  <item>Dubit Anatole, 20, av. du Moine Romain</item>
                  <item>Pouguinf Jules, 45, rue de la Maison</item>
                  <item>Herebier Adolphe, 38, rue des Maisons Jolies</item>
                  <item>Lir Yves, 64, rue Saint-Pierre</item>
                  <item>Lorbont Edouard, 21, av. du Buisson Gai</item>
                  <item>Sech André, 18, rue des Montagnes riveraines</item>
                  <item>Dreber Gilbert, 5, rue Jules Marcel</item>
                  <item>Micier Michel, 54, rue Saint Augustin</item>
                  <item>Debate Robert, 25, rue des Montagnes</item>
                  <item>Locrobelier Adolphe, 18, av. des Gares étroites</item>
                  <item>Rexer Augustin, 1, rue de la Tour blonde</item>
                  <item>Quimier Anatole, 20, rue du Buisson galant</item>
               </list>
            </dhq:example> The algorithms Starynkevitch used were based mainly on random number
            generators. Given names and street names were selected from a predetermined list.
            Surnames were composed from sets of letter sequences that alternated between open and
            closed syllables <ptr target="#bens1980" loc="162–163"/>. The Oulipo was impressed with
            the mock phone book but Queneau did not believe the computer application had <quote
               rend="inline" source="#bens1980">potential</quote>. Le Lionnais found the phone
            book interesting because it was not particularly interesting: it was neither bizarre nor
            funny, and it looked like a real phone book. What worried the Oulipo was the aleatory
            nature of computer-assisted artistic creation: they sought to avoid chance and
            automatisms over which the computer user had no control <ptr loc="157–8"
               target="#bens1980"/>. </p>
         <p>In 1981 the Oulipo published <title rend="italic">Atlas de littérature potential</title>
            where they described some of the computer applications they had devised for reading
            literature. Their early experiments included machine-assisted readings of Queneau's
               <title rend="italic">Cent mille milliards de poèmes</title>. In this deceptively
            small book, Queneau had composed ten sonnets in such a way that the reader could select
            the first line of any sonnet, the second line of any sonnet, etc., and generate one of
               10<hi rend="superscript">14</hi> possible sonnets. The book itself contains the
            mechanism for generating poems: each line is printed on a strip of paper, and the reader
            can select strips from the original sonnets to generate a potential sonnet <ptr
               target="#queneau1961"/>. Dimitri Starynkevitch had programmed his SEA CAB 500 machine
            to compose sonnets from Queneau's <title rend="italic">Cent mille milliards de
               poèmes</title>. In 1975 the Atelier de Recherches et Techniques Avancées, or ARTA,
            wrote a computer program that produced instantiations of the <title rend="italic">Cent
               mille milliards de poèmes</title> as a function of a user's name and the time it took
            him or her to type it. It is not difficult to simulate ARTA's computer program to
            produce poems from Queneau's original text by counting the number of seconds it takes a
            user to type his or her name and using that information to calculate a <q>magic
               number</q>: <figure xml:id="fig1">
               <head>A simulation of ARTA's program for generating poems from Queneau's <title
                     rend="italic">Cent Mille Milliards de Poèmes</title>. In English (translation
                  by Beverly Charles Rowe at <ref
                     target="http://www.bevrowe.info/poems/queneaurandom.htm"
                     >http://www.bevrowe.info/Poems/QueneauRandom.htm</ref>; the reader can select
                  specific lines from the original 10 sonnets to reproduce any of the
                  100,000,000,000,000 potential poems) it reads as follows: <quote rend="block"
                     source="#queneau1961">
                     <floatingText>
                        <body>
                           <lg>
                              <l>The pampas king betrays his devotees</l>
                              <l>and decks the bulls that roam the paramo</l>
                              <l>the native driver's waiting in the breeze</l>
                              <l>the re in in [sic] all his songs came out as doh</l>
                           </lg>
                           <lg>
                              <l>You'll view so plain a plain with trembling knees</l>
                              <l>as castles blaze and palaces burn low</l>
                              <l>for death casts piles of shit on pedigrees</l>
                              <l>it's scary both for hick and aristo</l>
                           </lg>
                           <lg>
                              <l>The impassioned poet isn't polyglot</l>
                              <l>one language in his brain that's all he's got</l>
                              <l>shame gives the colonel's brow a greasy sheen</l>
                           </lg>
                           <lg>
                              <l>All's sold the prawns the lobsters our whole stock</l>
                              <l>say sorry that no whales came back to dock</l>
                              <l>unless the bell is silent and serene</l>
                           </lg>
                        </body>
                     </floatingText>
                  </quote>
               </head>
               <graphic url="resources/images/image1.png"/>
               <figDesc>Screenshot of command-line program running in a terminal</figDesc>
            </figure> Each digit in the magic number corresponds to a verse from one of the original
            ten sonnets. The program's algorithm provides a certain degree of interaction between
            the user and the machine, and the results of running the program are theoretically
            reproducible if a user types the same name in the same amount of time. The algorithm
            therefore has potential, but only insofar that it accelerates the production of poems.
            It may be easier and more entertaining to generate poems automatically without relying
            on user input, and there are several web sites on the Internet that do this. One could
            even use a random number function: <figure xml:id="fig2">
               <head>A program for generating poems from Queneau's <title rend="italic">Cent Mille
                     Milliards de Poèmes</title> using a random number function. In English
                  (translation by Beverly Charles Rowe, <ref
                     target="http://www.bevrowe.info/poems/queneaurandom.htm"
                     >http://www.bevrowe.info/Poems/QueneauRandom.htm</ref>) it reads as follows:
                  <quote rend="block" source="#queneau1961">
                     <floatingText>
                        <body>
                           <lg>
                              <l>The Parthenon horse looks nervous on the frieze</l>
                              <l>being twinned is better far than single-o</l>
                              <l>the chosen fruit is hued a bright cerise</l>
                              <l>all during Lent one fruit's the ratio</l>
                           </lg>
                           <lg>
                              <l>The Papuan sucks his friend's apophyses</l>
                              <l>as castles blaze and palaces burn low</l>
                              <l>the flanks protected by chevaux de frise</l>
                              <l>it's scary both for hick and aristo</l>
                           </lg>
                           <lg>
                              <l>The clever students may have lost the plot</l>
                              <l>to cease from scratching parchment he cannot</l>
                              <l>the motorway laps up leaked gasoline</l>
                           </lg>
                           <lg>
                              <l>Those transalpine relations interlock?</l>
                              <l>you cannot number off each ploch and pock</l>
                              <l>true twinship blames whatever's in the gene</l>
                           </lg>
                        </body>
                     </floatingText>
                  </quote>
               </head>
               <graphic url="resources/images/image2.png"/>
               <figDesc>Screenshot of command-line program running in a terminal</figDesc>
            </figure> Such a program has no potential in the Oulipian sense because random numbers
            produce aleatory effects. The original algorithm preserves an active role for the user,
            even if that role requires the minimal engagement of typing one's name in order to
            sustain the creative process.</p>
         <p>Paul Braffort and Jacques Roubaud, two Oulipians with backgrounds in mathematics and
            computer science, formed the Atelier de Littérature Assistée par la Mathématique et les
            Ordinateurs (ALAMO) in 1980 to explore computer-assisted writing. Following the model of
            Queneau's <title rend="italic">Cent mille milliards de poèmes</title>, the ALAMO wrote
            computer programs to produce texts according to the rules of various genres, such as
            poems and aphorisms. Braffort explained that combinatorial methods for generating texts
            with computers fall into two categories. The first category, applicational methods,
            involves templates for arranging words according to their grammatical function. One
            particularly amusing application generates what the ALAMO calls <q>Rimbaudelaires</q>, poems based on the structure of
            Rimbaud's poem <title rend="quotes">Le Dormeur du Val</title> and composed of vocabulary
            from Baudelaire's works: <figure xml:id="fig3">
               <head>Sample Rimbaudelaire poem from the ALAMO's web site (<ref
                     target="http://alamo.mshparisnord.net/rialt/index.html"
                     >http://alamo.mshparisnord.net/rialt/index.html</ref>). Here is a translation
                  (mine): <quote rend="block"
                     source="http://alamo.mshparisnord.net/rialt/index.html">
                     <floatingText>
                        <body>
                           <head>The Spectacle of Happiness</head>
                           <lg>
                              <l>There is a countryside king where a shadow flower rolls</l>
                              <l>Simply hanging in the shadows pâtés</l>
                              <l>Of love; where the regret of dark memory</l>
                              <l>Drinks: it is a former happiness that shines sideways.</l>
                           </lg>
                           <lg>
                              <l>A noble demon, hatred dark and size black,</l>
                              <l>His tongue bathing in the ginger-white ravine,</l>
                              <l>Rains; he leans in the shade, under the lustrous fabric,</l>
                              <l>Noble in his cold dale where the chest speaks falsely.</l>
                           </lg>
                           <lg>
                              <l>The heavens in desires, it rains. This frail bird</l>
                              <l>Would slide a wary shark, he flees the hail:</l>
                              <l>Medallion, love him tenderly: he is great.</l>
                           </lg>
                           <lg>
                              <l>The sweet liquors do not make his nostril stomp;</l>
                              <l>It rains in the bell, the sea on his chest,</l>
                              <l>Wary. He has noble skies in the slow gladiolus.</l>
                           </lg>
                        </body>
                     </floatingText>
                  </quote>
               </head>
               <graphic url="resources/images/image3.png"/>
               <figDesc>Screenshot of web page</figDesc>
            </figure> Another example is Marcel Bénabou's method for generating aphorisms <ptr
               target="#benabou1980"/>. Braffort developed a program that operationalized Bénabou's
            algorithm by abstracting the structures common to adages and substituting new terms into
            the structures: <figure xml:id="fig4">
               <head>Sample aphorisms from the ALAMO's web site (<ref
                     target="http://alamo.mshparisnord.net/rialt/index.html"
                     >http://alamo.mshparisnord.net/rialt/index.html</ref>). Here is a translation
                  (mine): <quote rend="block"
                     source="undocumented">
                     <floatingText>
                        <body>
                           <lg>
                              <l>There is no rhythm where there is no form.</l>
                              <l>Myth is the final sanctuary of the mind.</l>
                              <l>One must not let go of the earth for confusion.</l>
                              <l>There is no space where there is no laughter.</l>
                              <l>One cannot serve two masters at once: obstacle and despair.</l>
                              <l>One must avoid reducing war to slavery.</l>
                              <l>Despair without form is only memory of glory.</l>
                              <l>If you want sensuality, prepare for laughter.</l>
                              <l>If happiness leads to time, it's because happiness is only
                                 ignorance.</l>
                              <l>Grace is the distance man places between sin and feeling.</l>
                              <l>Freedom is the gift of youth, oblivion the gift of age.</l>
                              <l>Oblivion gives truth the taste of pleasure and sensuality takes it
                                 away.</l>
                              <l>It is easier to tolerate pleasure than sin.</l>
                              <l>What good is war before slavery?</l>
                           </lg>
                        </body>
                     </floatingText>
                  </quote>
               </head>
               <graphic url="resources/images/image4.png"/>
               <figDesc>Screenshot of web page</figDesc>
            </figure> The potential of these computer programs resides in the way fragments of words
            and verses are recombined according to a set of well-defined rules. Poetic forms can
            thus be understood as algorithms for creating meaning with language.<note>Jerome McGann
               observes that <quote rend="inline" source="#mcgann2001a">In this view of the
                  matter, texts and documents are not primarily understood as containers or even
                  vehicles of meaning. Rather, they are sets of instantiated rules and algorithms
                  for generating and controlling themselves and for constructing further sets of
                  transmissional possibilities</quote>
               <ptr target="#mcgann2001a" loc="2"/>.</note> The ALAMO devised ways to formalize
            poetics in order for a computer to generate structured texts which may or may not make
            sense. The actual poems produced by the programs are derivatives of the way computers
            can be harnessed to explore language. Reading these computer-generated texts can be
            amusing because of unexpected or incongruous combinations of words that oddly make
            sense. Despite their uncanny effects, however, texts produced through applicational
            methods still bear the mark of the inventor who not only determines the templates into
            which syntagma are inserted but also the stock of words and phrases from which the
            computer program draws.</p>
         <p>The second category, implicational methods, involves further abstraction of structures.
            Instead of creating templates for arranging words according to predetermined syntactic
            and semantic categories, the inventor devises rules for making templates. According to
            Braffort, <cit>
               <quote rend="inline" source="#braffort1984">implicational methods take a further step
                  [in the direction of invention]. The very logic of the text is controlled by the
                  program: a global syntagma comes into play and becomes manifest as a supervisor of
                  local syntagmas</quote>
               <ptr loc="18" target="#braffort1984"/>
            </cit>. The logic of implicational methods relies on recursion in programs that generate
            texts, allowing for systematic processing of linguistic elements below the level of the
               <q>master</q> program. With recursion, computer programs can continuously refine
            their output in ways the inventor would not be able to easily predict. Implicational
            methods provide computers with a small measure of independence. Braffort and the other
            members of the ALAMO developed a number of formal systems for expressing the
            relationships between linguistic elements in literary texts. One of these systems, FASTL
            (Formalismes pour l'Analyse et la Synthèse de Textes Littéraires), used recursion and
            iteration to encompass all forms of written communication. It is no accident that, with
            Braffort a computer scientist and Roubaud a mathematician, FASTL resembles abstract
            systems of representation used in the sciences: <cit>
               <quote rend="inline" source="#oulipo1981">USFAL [<q>Un Système Formel pour
                     l'Algorithmique Linguistique</q>, a precursor to FASTL] will be for theoretical
                  literature what mathematical disciplines such as the theory of differential
                  equations can be for physics, economics, etc.</quote>
               <ptr target="#oulipo1981" loc="128"/>
            </cit>. An important feature of FASTL is its scalability in representing textual
            elements. Text objects are organized within a hierarchy that extends from the characters
            on a page or screen to entire libraries or corpora. Expressions for representing
            relationships between objects at one level of the hierarchy should be applicable to
            relationships of objects at another level within the hierarchy. Algorithms for analyzing
            texts can potentially operate recursively: <cit>
               <quote rend="block" source="#oulipo1981"> For the mind of a mathematician, we will
                  say that the algorithm is a <emph>function</emph> that, when applied to [a given
                  text] considered as its <emph>argument</emph> provides a <emph>result</emph>. This
                  result is itself a text, but a text with a complex organization that is highly
                  structured with fragments of symbolic texts and readings [...] </quote>
               <ref target="#oulipo1981">Oulipo 1981, 133, author's emphasis.</ref>
            </cit> Given the scalability of FASTL and the possibility of recursion, abstract
            representations of texts within FASTL could potentially undergo further processing and
            abstraction. The complexity of texts as hierarchically structured objects, however,
            makes devising an algorithm that operates from the level of the word to that of the
            sentence, paragraph and chapter extremely difficult. Nevertheless, the ALAMO's research
            into computer-assisted text analysis envisioned the possibility of computational
               <foreign>mise en abîme</foreign> where the results of analysis can repeatedly feed as
            textual arguments into algorithmic functions in a theoretically never-ending process.
            The Oulipo anticipated the potentiality of recursion early in its history: in a report
            submitted to the Collège de Pataphysique (an institution dedicated to the pursuit of the
               <q>the science of exceptions</q>), the group proclaimed that computers would make
            possible the <cit>
               <quote rend="block" source="#motte1986"> abstracting [of] commonplaces from the
                  structures of commonplaces — and then a <q>squared</q> topology of these places, and
                  so forth until one attains, in a rigorous analysis of this
                     <foreign>regressus</foreign> itself, the absolute, the Absolute <q>whose armature,</q> according to Jarry, <q>is made of clichés.</q>
               </quote>
               <ptr target="#motte1986" loc="50"/>
            </cit> The efforts of the ALAMO to develop computer applications that generate texts
            through recursion have met limited success, however <ptr target="#braffort2006"/>.</p>
         <p>As Braffort himself recognized, implicational methods for writing texts with machines
            are related to research in artificial intelligence. The Oulipo does not seek to replace
            the human writer who is at the center of the Oulipian enterprise. The group's approach
            to automating potential literature follows the Cartesian method of dividing a
            complicated question (how does writing occur?) into smaller questions that are easier to
            solve. Recursion is one technique that could allow humans to pursue new forms of writing
            by handing off some of the work to machines. But where is the limit to recursion? In
            1963 Jacques Duchateau argued that what interests the the Oulipo most in machines is
            their capacity for organizing information: <cit>
               <quote rend="block" source="#bens1980">organized means that data will be processed,
                  that all the possibilities of the data will be examined systematically according
                  to a model that will be furnished eventually by man or another machine, the model
                  of which will also be furnished by a third machine, the model of which, etc. </quote>
               <ref target="#bens1980">in Bens 1980, 251</ref>
            </cit> Duchateau attempts to allay fears of an unintended determinism resulting from the
            aleatory effects of rigorous textual constraints, but his notion of organization does
            not make any distinction between humans and machines as information processing units.
            His definition of organization is recursive: it holds that a machine processes
            information according to a model based on another machine, which in turn processes
            information according to the model of another machine, etc. We might be tempted to think
            that for the Oulipo, humans are the first machines after which all other machines are
            modeled, but Duchateau's definition places humans and machines on the same ontological
            footing. Ultimately there is no central processing unit which controls all the
            subprocesses. The Oulipian inventor may create blueprints for literature, but he
            distances himself from the work of applying rules and crafting texts. Despite his
            privileged isolation from the particularities of writing, the inventor is just another
            process that communicates with other processes.</p>
         <p>If, as Duchateau explains it, the process of writing literature with machines consists
            of organizing information in new ways to analyze and synthesize texts, traditional
            authorship will eventually give way to a set of increasingly anonymous and autonomous
            processes. During one of its reunions in the early 1960s the Oulipo anticipated the risk
            of automatism in the structures they were defining. The group attempted to make room for
            individual freedom but they were unable to reconcile freedom with automatism. Jacques
            Bens recognized that every structure automatized writing to a certain extent, and Claude
            Berge added that potential literature generated new automatisms <ptr target="#bens1980"
               loc="144"/>. Le Lionnais insisted that a sufficiently complex system of constraints
            offered writers a number of options from which they could choose. The Oulipians wanted
            to avoid the unconscious automatisms of the Surrealists, but the conscious use of
            structures in their writing produced what they could not avoid describing as <q>automatic</q>. Le Lionnais admitted that <cit>
               <quote rend="inline" source="#bens1980">it is true that the birth of machines has
                  modified the current sense of the word <q>automatic</q>
               </quote>
               <ptr loc="185" target="#bens1980"/>
            </cit>. The Oulipo recognized that the problem of using computers to create texts
            stemmed from the writer's inability to remain aware of how the machine applied
            constraints. In the 1970s the Oulipo introduced the notion of the clinamen, which helped
            to resolve this dilemma. Based on a conception of the movement of atoms in Lucretius'
               <title rend="italic">On the Nature of Things</title>, the clinamen is the primordial
            anti-constraint: it makes creation possible by introducing chance and spontaneity in an
            ordered universe <ptr target="#motte1986"/>. The Oulipo recovered a sense of the
            unexpected in the constraints they used but they wanted to define and control how chance
            would play in their writing. An algorithm is productive as a tool for engaging texts as
            long as the user can follow how the algorithm works and anticipate the effects of
            chance. If the computational system becomes too complex or too unpredictable, the act of
            interpretation will depend on opaque sequences of data processing of which the user must
            remain unconscious.</p>
         <p>The Oulipians developed at least two algorithms for reading texts. The first is Harry
            Mathews's Algorithm, which consists of combinatoric operations over a set of
            structurally similar but thematically heterogeneous texts. These operations generalize
            the structure of the <title rend="italic">Cent mille milliards de poèmes</title> and
            allow for the production of new texts. For instance, given four texts each consisting of
            nine elements <table>
               <head>Before applying Mathews's Algorithm</head>
               <row>
                  <cell>1.</cell>
                  <cell>a<hi rend="subscript">1</hi>
                  </cell>
                  <cell>b<hi rend="subscript">1</hi>
                  </cell>
                  <cell>c<hi rend="subscript">1</hi>
                  </cell>
                  <cell>d<hi rend="subscript">1</hi>
                  </cell>
                  <cell>e<hi rend="subscript">1</hi>
                  </cell>
                  <cell>f<hi rend="subscript">1</hi>
                  </cell>
                  <cell>g<hi rend="subscript">1</hi>
                  </cell>
                  <cell>h<hi rend="subscript">1</hi>
                  </cell>
                  <cell>i<hi rend="subscript">1</hi>
                  </cell>
               </row>
               <row>
                  <cell>2.</cell>
                  <cell>a<hi rend="subscript">2</hi>
                  </cell>
                  <cell>b<hi rend="subscript">2</hi>
                  </cell>
                  <cell>c<hi rend="subscript">2</hi>
                  </cell>
                  <cell>d<hi rend="subscript">2</hi>
                  </cell>
                  <cell>e<hi rend="subscript">2</hi>
                  </cell>
                  <cell>f<hi rend="subscript">2</hi>
                  </cell>
                  <cell>g<hi rend="subscript">2</hi>
                  </cell>
                  <cell>h<hi rend="subscript">2</hi>
                  </cell>
                  <cell>i<hi rend="subscript">2</hi>
                  </cell>
               </row>
               <row>
                  <cell>3.</cell>
                  <cell>a<hi rend="subscript">3</hi>
                  </cell>
                  <cell>b<hi rend="subscript">3</hi>
                  </cell>
                  <cell>c<hi rend="subscript">3</hi>
                  </cell>
                  <cell>d<hi rend="subscript">3</hi>
                  </cell>
                  <cell>e<hi rend="subscript">3</hi>
                  </cell>
                  <cell>f<hi rend="subscript">3</hi>
                  </cell>
                  <cell>g<hi rend="subscript">3</hi>
                  </cell>
                  <cell>h<hi rend="subscript">3</hi>
                  </cell>
                  <cell>i<hi rend="subscript">3</hi>
                  </cell>
               </row>
               <row>
                  <cell>4.</cell>
                  <cell>a<hi rend="subscript">4</hi>
                  </cell>
                  <cell>b<hi rend="subscript">4</hi>
                  </cell>
                  <cell>c<hi rend="subscript">4</hi>
                  </cell>
                  <cell>d<hi rend="subscript">4</hi>
                  </cell>
                  <cell>e<hi rend="subscript">4</hi>
                  </cell>
                  <cell>f<hi rend="subscript">4</hi>
                  </cell>
                  <cell>g<hi rend="subscript">4</hi>
                  </cell>
                  <cell>h<hi rend="subscript">4</hi>
                  </cell>
                  <cell>i<hi rend="subscript">4</hi>
                  </cell>
               </row>
            </table> we can use Mathews's Algorithm to produce four new combinations: <table>
               <head>After applying Mathews's Algorithm</head>
               <row>
                  <cell>1.</cell>
                  <cell>a<hi rend="subscript">1</hi>
                  </cell>
                  <cell>b<hi rend="subscript">2</hi>
                  </cell>
                  <cell>c<hi rend="subscript">3</hi>
                  </cell>
                  <cell>d<hi rend="subscript">4</hi>
                  </cell>
                  <cell>e<hi rend="subscript">1</hi>
                  </cell>
                  <cell>f<hi rend="subscript">2</hi>
                  </cell>
                  <cell>g<hi rend="subscript">3</hi>
                  </cell>
                  <cell>h<hi rend="subscript">4</hi>
                  </cell>
                  <cell>i<hi rend="subscript">1</hi>
                  </cell>
               </row>
               <row>
                  <cell>2.</cell>
                  <cell>a<hi rend="subscript">4</hi>
                  </cell>
                  <cell>b<hi rend="subscript">1</hi>
                  </cell>
                  <cell>c<hi rend="subscript">2</hi>
                  </cell>
                  <cell>d<hi rend="subscript">3</hi>
                  </cell>
                  <cell>e<hi rend="subscript">4</hi>
                  </cell>
                  <cell>f<hi rend="subscript">1</hi>
                  </cell>
                  <cell>g<hi rend="subscript">2</hi>
                  </cell>
                  <cell>h<hi rend="subscript">3</hi>
                  </cell>
                  <cell>i<hi rend="subscript">4</hi>
                  </cell>
               </row>
               <row>
                  <cell>3.</cell>
                  <cell>a<hi rend="subscript">3</hi>
                  </cell>
                  <cell>b<hi rend="subscript">4</hi>
                  </cell>
                  <cell>c<hi rend="subscript">1</hi>
                  </cell>
                  <cell>d<hi rend="subscript">2</hi>
                  </cell>
                  <cell>e<hi rend="subscript">3</hi>
                  </cell>
                  <cell>f<hi rend="subscript">4</hi>
                  </cell>
                  <cell>g<hi rend="subscript">1</hi>
                  </cell>
                  <cell>h<hi rend="subscript">2</hi>
                  </cell>
                  <cell>i<hi rend="subscript">3</hi>
                  </cell>
               </row>
               <row>
                  <cell>4.</cell>
                  <cell>a<hi rend="subscript">2</hi>
                  </cell>
                  <cell>b<hi rend="subscript">3</hi>
                  </cell>
                  <cell>c<hi rend="subscript">4</hi>
                  </cell>
                  <cell>d<hi rend="subscript">1</hi>
                  </cell>
                  <cell>e<hi rend="subscript">2</hi>
                  </cell>
                  <cell>f<hi rend="subscript">3</hi>
                  </cell>
                  <cell>g<hi rend="subscript">4</hi>
                  </cell>
                  <cell>h<hi rend="subscript">1</hi>
                  </cell>
                  <cell>i<hi rend="subscript">2</hi>
                  </cell>
               </row>
            </table>
         </p>
         <p>In his <title rend="italic">Exercices de style</title>, Queneau relates the same banal
            incident on the Paris bus system ninety-nine times, each instance demonstrating a
            particular textual style. By identifying a nine-part structure common to four of the
            exercises, one can apply Mathews's Algorithm to generate four new versions of the
            incident (see <ref target="http://bumppo.hartwick.edu/oulipo/exercices.html"
               >http://bumppo.hartwick.edu/Oulipo/Exercices.html</ref>). According to Mathews, the
            the aim of the algorithm <cit>
               <quote rend="inline" source="#motte1986">is not to liberate potentiality but to
                  coerce it</quote>
               <ptr target="#motte1986" loc="139"/>
            </cit>. A <q>new</q> reading of a text (or a reading of a <q>new</q> text) through the
            algorithm is not the objective. The use of the algorithm is meaningful in that the
            apparent unity of texts can be dismantled and give way to a multiplicity of meanings.
            Mathews invented a system of constraints that illustrates what poststructuralists have
            maintained for decades.<note>Readers can use Mathews's Algorithm with their own texts;
               see <ref target="http://bumppo.hartwick.edu/oulipo/mathews.php"
                  >http://bumppo.hartwick.edu/Oulipo/Mathews.php</ref>.</note>
         </p>
         <p>The second example is Raymond Queneau's matrix analysis of language, published in <title
               rend="italic">Etudes de linguistique appliquée</title> and discussed at length during
            one of the Oulipo's early gatherings. Using principles of linear algebra, Queneau
            devised a mathematics of the French language that describes the construction of word
            groups. He began by dividing all elements of speech into two categories: signifiers,
            which include nouns, adjectives, and verbs (except <foreign>avoir</foreign> and
               <foreign>être</foreign>); and formatives, which include everything else
               (<foreign>avoir</foreign>, <foreign>être</foreign>, pronouns, articles, conjunctions,
            prepositions, adverbs, interjections, etc.). Given a word group such as a sentence, one
            can construct two matrices where the first matrix contains all formatives and the second
            all signifiers. <figure xml:id="fig5">
               <head>Queneau's language matrices: A single sentence represented as a product of two
                  matrices. <emph>(The × cat) + (has × eaten) + (the × mouse).</emph>
               </head>
               <graphic url="resources/images/image5.png"/>
               <figDesc>Image of mathematical notation</figDesc>
            </figure> If a word group contains two consecutive formatives or signifiers, one can use
            a unitary element in order to construct the matrices. <figure xml:id="fig6">
               <head>The unitary element permits the representation of word groups with consecutive
                  formatives or signifiers. <emph>(The × naughty) + (1 × cat) + (has × 1) +
                     (thoroughly × eaten) + (the × beautiful) + (1 × mouse).</emph>
               </head>
               <graphic url="resources/images/image6.png"/>
               <figDesc>Image of mathematical notation</figDesc>
            </figure> The product of a formative and a signifier is a bi-word. By adopting the
            conventions that neither (1 × 1) nor (Y × 1) + (1 × Z) are allowed, one avoids
            uninteresting or redundant bi-words. Where Y and Z are any formative and signifier
            respectively, we can designate (Y × Z) as B, (Y × 1) as F and (1 × Z) as S. This gives
            us BBB for Figure 5 and BSFBBS for Figure 6.</p>
         <p>Queneau himself constructed matrices for a number of short sample texts, but his ability
            to apply the algorithm to lengthy texts was limited because he did his calculations
            manually. With the availability of part-of-speech taggers such as Helmut Schmid's
            TreeTagger, it is relatively easy to perform a matrix analysis of any text written in
            French with a computer <ptr target="#schmid2006"/>. <note>Readers can perform Queneau's
               matrix analysis using their own texts; see <ref
                  target="http://bumppo.hartwick.edu/oulipo/matrix.html"
                  >http://bumppo.hartwick.edu/Oulipo/Matrix.html</ref>.</note> Consider the
            following representation of the first paragraphs of Flaubert's <title rend="italic"
               >Madame Bovary</title>: <dhq:example>
               <head>
                  <title rend="italic">Madame Bovary</title> as a sequence of word pairs</head>
               <list type="simple">
                  <item>[Nous 1][étions 1][à 1][l' Etude][ ,][quand 1][le Proviseur][1 entra]</item>
                  <item>[1 suivi][d' 1][un nouveau][1 habillé][en bourgeois][et 1][d' 1]</item>
                  <item>[un garçon][de classe][qui portait][un grand][1 pupitre][ .][Ceux 1]</item>
                  <item>[qui dormaient][1 se][1 réveillèrent][ ,][et 1][chacun 1][se leva]</item>
                  <item>[comme surpris][dans 1][son travail.][Le Proviseur][nous fit][1
                     signe]</item>
                  <item>[de 1][nous rasseoir][ ;][puis 1][ ,][se tournant][vers 1][le maître]</item>
                  <item>[d' études][1 :][ -][1 Monsieur][1 Roger][ ,][lui dit][-il 1][à 1]</item>
                  <item>[demi-voix 1][ ,][voici 1][un élève][que 1][je 1][vous recommande][
                     ,]</item>
                  <item>[1 il][entre 1][en cinquième][ .][Si 1][son travail][et 1][sa
                     conduite]</item>
                  <item>[sont méritoires][ ,][il passera][dans les][1 grands][ ,][où 1][l'
                     appelle]</item>
                  <item>[son âge.][1 Resté][dans 1][l' angle][ ,][derrière 1][la porte][ ,][si
                     1]</item>
                  <item>[bien 1][qu' 1][on 1][l' apercevait][à peine][ ,][le nouveau][était
                     1]</item>
                  <item>[un gars][de 1][la campagne][ ,][d' 1][une quinzaine][d' années][environ
                     1]</item>
                  <item>[ ,][et 1][plus 1][haut 1][de taille][qu' 1][aucun 1][de 1][nous tous][
                     .][Il 1]</item>
                  <item>[avait 1][les cheveux][1 coupés][1 droit][sur 1][le front][ ,][comme
                     1]</item>
                  <item>[un chantre][de village][ ,][l' air][1 raisonnable][et 1][fort embarrassé][
                     .]</item>
                  <item>[Quoiqu' 1][il 1][ne 1][fût 1][pas large][1 des][1 épaules][ ,]</item>
                  <item>[son habit-veste][de drap][1 vert][à boutons][1 noirs][1 devait][le
                     gêner]</item>
                  <item>[aux entournures][et laissait][1 voir][ ,][par 1][la fente][des parements][
                     ,]</item>
                  <item>[des poignets][1 rouges][1 habitués][à 1][être nus.][Ses jambes][ ,][en
                     1]</item>
                  <item>[bas bleus][ ,][1 sortaient][d' 1][un pantalon][1 jaunâtre][très tiré][par
                     1]</item>
                  <item>[les bretelles.][Il 1][était chaussé][de souliers][1 forts][ ,][mal cirés][
                     ,]</item>
                  <item>[1 garnis][de clous][ .]</item>
               </list>
            </dhq:example> The text is broken down into bracketed pairs representing bi-words,
            signifiers, formatives and punctuation. We can transform the text into an abstract
            sequence of the letters F, S and B: <dhq:example>
               <head>Abstract reduction of <title rend="italic">Madame Bovary</title>
               </head>
               <p>FFFB, FBSSFBSBFFBBBBS. FBSS, FFBBFBBBSFB; F, BFBBS- SS, BFFF, FBFFB, SFB. FBFBB,
                  BBS, FBBSFB, FB, FFFFBB, BFBFB, FBBF, FFFBFFFB. FFBSSFB, FBB, BSFB. FFFFBSS,
                  BBSBSSBBBS, FBB, BSSFBB, FB, SFBSBFBFBBS, B, SB.</p>
            </dhq:example> Note that punctuation separates word groups. One can compute the
            probability ratios of formatives (F), signifiers (S) and bi-words (B) in a text: <table>
               <head>Probabilty ratios in the passage from <title rend="italic">Madame
                     Bovary</title>
               </head>
               <row>
                  <cell role="label">F</cell>
                  <cell>= 55</cell>
                  <cell>0.369127516778524</cell>
               </row>
               <row>
                  <cell role="label">S</cell>
                  <cell>= 28</cell>
                  <cell>0.187919463087248</cell>
               </row>
               <row>
                  <cell role="label">B</cell>
                  <cell>= 66</cell>
                  <cell>0.442953020134228</cell>
               </row>
            </table> F + S + 2B always equals the total number of words in a text.</p>
         <p>Queneau believed that matrix analysis could provide <cit>
               <quote rend="inline" source="#queneau1965">indices of an author's style that may be
                  interesting, for they escape the conscious control of the writer and doubtless
                  depend on several hidden parameters</quote>
               <ptr target="#queneau1965" loc="319"/>
            </cit>. He did not elaborate further on how one could determine such indices, but his
            matrix analysis can be combined with the use of Markov chains in order to measure the
            authorship of texts. Given the four letters F, S, B and P to designate formatives,
            signifiers, bi-words and punctuation, we can construct a transition matrix of the
            probabilities of letter sequences in the passage from <title rend="italic">Madame
               Bovary</title>: <table>
               <head>Transition matrix of passage from <title rend="italic">Madame Bovary</title>
               </head>
               <row>
                  <cell/>
                  <cell role="label">S</cell>
                  <cell role="label">F</cell>
                  <cell role="label">B</cell>
                  <cell role="label">P</cell>
               </row>
               <row>
                  <cell role="label">S</cell>
                  <cell>0.23809524</cell>
                  <cell>0.33333333</cell>
                  <cell>0.23809524</cell>
                  <cell>0.19047619</cell>
               </row>
               <row>
                  <cell role="label">F</cell>
                  <cell>0.00000000</cell>
                  <cell>0.32727273</cell>
                  <cell>0.61818182</cell>
                  <cell>0.05454545</cell>
               </row>
               <row>
                  <cell role="label">B</cell>
                  <cell>0.17391304</cell>
                  <cell>0.17391304</cell>
                  <cell>0.27536232</cell>
                  <cell>0.37681159</cell>
               </row>
               <row>
                  <cell role="label">P</cell>
                  <cell>0.12121212</cell>
                  <cell>0.51515152</cell>
                  <cell>0.33333333</cell>
                  <cell>0.03030303</cell>
               </row>
            </table>
         </p>
         <p>Note that the probability of the sequence FS is zero because such a sequence would be an
            instance of a bi-word. Dmitri Khmelev and Fiona Tweedie have developed a technique for
            determining authorship using Markov chains and transition matrices for the sequence of
            letters in a text. Their technique can also be used with formatives, signifiers,
            bi-words and punctuation. Given a text of which the author is one of a group of known
            authors in a corpus, we can determine the probability that the text in question was
            written by each of the known authors. I have used this technique with a corpus of 1569
            texts written by 290 authors from the ARTFL database (<ref
               target="http://humanities.uchicago.edu/orgs/artfl/"
               >http://humanities.uchicago.edu/orgs/ARTFL/</ref>). I first selected randomly a text
            from each author in the corpus. Of the 290 randomly selected texts, 186 were correctly
            attributed to the authors who wrote them, or 64 percent. According to Khmelev and
            Tweedie, this represents an error rate of 0.153 percent. I then performed a
            cross-validation of the ARTFL corpus where 557 texts were correctly classified by
            author. These results are similar to those of Khmelev and Tweedie, suggesting that the
            combination of matrix analysis and Markov chains offers an interesting technique for
            measuring <quote rend="inline" source="#khmelev2001">linguistically
               microscopic</quote> data to determine the authorship of texts written in French <ptr
               loc="302–4" target="#khmelev2001"/>. <note>Khmelev and Tweedie selected randomly one
               text from each of the forty-five authors in their corpus of 387 texts from the
               Project Gutenberg (<ref target="http://www.gutenberg.org/"
                  >http://www.gutenberg.org/</ref>). Thirty-three texts were attributed to the
               correct author, or 73.3 percent, with an error rate of 0.687 percent. Like the sample
               used by Khmelev and Tweedie, my corpus is composed of texts by authors with at least
               two texts in the corpus. This allowed me to test Queneau matrices and Markov chains
               as the basis of an algorithm for identifying authorship.</note>
         </p>
         <p>Whatever the promise of matrix analysis in providing quantitative evidence for measuring
            an author's style, Queneau expressed greater interest in its mathematical properties. He
            proved several theorems on the behavior of matrices and identitified similarities
            between them and the Fibonacci series <ptr target="#queneau1964"/>. He also explored the
            potentiality of matrices without basing his analyses on written texts. He and the other
            members of the Oulipo were intrigued by matrix analysis but looked forward to the
            creation of poems written in columns and rows (<ref target="#bergens1975">in Bergens
               61–66</ref>): <figure xml:id="fig7">
                  <head>By factoring rows from the first matrix (formatives) with columns from the
                     second matrix (signifiers), the reader can generate 4 × 3 = 12 distinct verses:
                     <quote rend="block" source="#bergens19785">
                        <floatingText>
                           <body>
                              <lg>
                                 <l>Les enfants ont à manger de la tarte et des gaufrettes. <emph>The
                                    children have to eat pie and cookies.</emph>
                                 </l>
                                 <l>Des chèvres avaient à brouter de la sauge et des muguets.
                                    <emph>Some goats were supposed to graze on sage and
                                       lilies</emph>
                                 </l>
                                 <l>Ces Chinois auront à manipuler de la langoustine et des baguettes.
                                    <emph>These Chinese will have to handle shrimp and
                                       chopsticks.</emph>
                                 </l>
                                 <l>Certains enfants eurent à manger de la tarte et des gaufrettes.
                                    <emph>Certain children had to eat pie and cookies.</emph>
                                 </l>
                                 <l>Les chèvres ont à brouter de la sauge et des muguets. <emph>The
                                    goats have to graze on sage and lilies.</emph>
                                 </l>
                                 <l>Des Chinois avaient à manipuler de la langoustine et des baguettes.
                                    <emph>Some Chinese were supposed to handle shrimp and
                                       chopsticks.</emph>
                                 </l>
                                 <l>Ces enfants auront à manger de la tarte et des gaufrettes.
                                    <emph>These children will have to eat pie and cookies.</emph>
                                 </l>
                                 <l>Certains chèvres eurent à brouter de la sauge et des muguets.
                                    <emph>Certain goats had to graze on sage and lilies.</emph>
                                 </l>
                                 <l>Les Chinois ont à manipuler de la langoustine et des baguettes.
                                    <emph>The Chinese have to handle shrimp and chopsticks.</emph>
                                 </l>
                                 <l>Des enfants avaient à manger de la tarte et des gaufrettes.
                                    <emph>Some children were supposed to eat pie and cookies.</emph>
                                 </l>
                                 <l>Ces chèvres auront à brouter de la sauge et des muguets.
                                    <emph>These goats will have to graze on sage and lilies.</emph>
                                 </l>
                                 <l>Certains Chinois eurent à manipuler de la langoustine et des
                                    baguettes. <emph>Certain Chinese had to handle shrimp and
                                       chopsticks.</emph>
                                 </l>
                              </lg>
                           </body>
                        </floatingText>
                     </quote>
                  </head>
               <graphic url="resources/images/image7.png"/>
               <figDesc>An example of Queneau's two-dimensional matrix poems</figDesc>
            </figure> Matrix analyis can help discover the <q>hidden parameters</q> of an author's
            style, and we could consider it as an interesting example of Anoulipism, or the
            discovery of potentialities in existing texts. The Oulipo believed, however, that
            Synthoulipism, or the invention of potentialities for future texts, was its <cit>
               <quote rend="inline" source="#motte1986">essential vocation</quote>
               <ptr target="#motte1986" loc="27"/>
            </cit>. The combinatorics of non-linear, two-dimensional poems invite the development of
            computer applications for generating and analyzing a new kind of text. Whether anyone
            will go to the trouble to write and read matrix poems is a question the Oulipo has not
            pursued, in part perhaps because it would involve realizing concrete techiques and
            practices that would no longer be potential.</p>
         <p>Mathews and Queneau offer two algorithms for creating meaning with language that
            demonstrate the Oulipo's efforts to imagine potentialities for literature, <cit>
               <quote rend="inline" source="#motte1986">if need be through recourse to machines that
                  process information</quote>
               <ptr loc="27" target="#motte1986"/>
            </cit>. We can operationalize these algorithms with computers for literary analysis
               <q>if need be</q>, but the interest of the
            algorithms lies not in what they help us see in a given text but in the way they invite
            us to play rigorously for play's sake. Recent efforts to reconceptualize text analysis
            with computers have tried to imagine how computers can be used as tools for discovering
            new ways to make sense of texts. The Oulipo proposes something more radical: to borrow a
            turn of phrase from Jerome McGann, the invention of algorithms can create potentialities
            for imagining what we do not know about textuality in general. Given a rigorous
            constraint on the use of language, what does the constraint itself do? Does it offer new
            possibilities for meaning? If so, how? Oulipian constraints are better understood as
            toys with no intended purpose rather than as tools we use with some objective in mind.
            The procedures for making sense of texts are meaningful in and of themselves. They are
            not only instruments for discovering meaning but also reflections on making meaning. The
            distinction I have made between writing and reading follows what the Oulipo has and has
            not articulated in the theory of its practice. In the end, the need for a distinction
            becomes unnecessary when one observes that all encounters with textuality invite the
            application of rules that lead the writer and the reader to see unanticipated
            potentialities in language. Humanities computing should make room for playing with tools
            without concern for specific output and outcomes. In doing so, it will open itself to
            new theoretical possibilities of textuality, creating opportunities for what we could
            call <q>pure</q> research that may (or may not) draw interest from the broader
            humanities community.</p>
      </body>
      <back>
         <listBibl>
            <bibl xml:id="benabou1980" label="Bénabou 1980" key="benabou1987">
               <author>Bénabou, Marcel</author>. <title rend="quotes">Un aphorisme peut en cacher un
                  autre</title>. <date>1980</date>. <title rend="italic">La Bibliothèque
                  oulipienne</title>, vol. 1,
                  <pubPlace>Paris</pubPlace>: <publisher>Editions Ramsay</publisher>,
                  <date>1987</date>, 251-269.</bibl>
            <bibl xml:id="bens1980" label="Bens 1980" key="bens1980">
               <author>Bens, Jacques</author>. <title rend="italic">Oulipo 1960-1963</title>.
                  <pubPlace>Paris</pubPlace>: <publisher>C. Bourgois</publisher>, <date>1980</date>.
               Republished as <title rend="italic">Genèse de l'Oulipo 1960-1963.</title>
               <pubPlace>Bordeaux</pubPlace>: <publisher>Le Castor Astral</publisher>,
                  <date>2005</date>.</bibl>
            <bibl xml:id="bergens1999" label="Bergens 1999" key="bergens1999">
               <author>Bergens, Andrée</author>. <title rend="italic">Raymond Queneau</title>. 1975.
                  <pubPlace>Paris</pubPlace>: <publisher>L'Herne</publisher>,
               <date>1999</date>.</bibl>
            <bibl xml:id="braffort2006" label="Braffort 2006" key="braffort2006">
               <author>Braffort, Paul</author>. <title rend="italic">ALAMO: Atelier de Littérature
                  Assistée par la Mathématique et les Ordinateurs.</title> Last accessed 17
               September 2006. <ref target="http://alamo.mshparisnord.net/presentation/index.html"
                  >http://alamo.mshparisnord.net/presentation/index.html</ref>.</bibl>
            <bibl xml:id="braffort1984" label="Braffort 1984" key="braffort1984">
               <author>Braffort, Paul</author>. <title rend="quotes">La littérature assistée par
                  ordinateur</title>, <title rend="italic">Action Poétique</title>
               95 (<date>1984</date>): 12-20.</bibl>
            <bibl xml:id="khmelev2001" label="Khmelev and Tweedie 2001" key="khmelev2001">
               <author>Khmelev, Dmitri V., and Fiona J. Tweedie</author>. <title rend="italic">
                  <title rend="quotes">Using Markov Chains for Identification of Writers.</title>
                  Literary and Linguistic Computing</title>
               16.3 (<date>2001</date>): 299-307.</bibl>
            <bibl xml:id="mcgann2001a" label="McGann 2001a" key="mcgann2001a">
               <author>McGann, Jerome</author>. <title rend="italic">Radiant Textuality: Literature
                  After the World Wide Web.</title>
               <pubPlace>New York</pubPlace>: <publisher>Palgrave Macmillan</publisher>,
                  <date>2001</date>.</bibl>
            <bibl xml:id="oulipo1998" label="Oulipo 1998" key="oulipo1998">
               <author>Oulipo</author>. <title rend="italic">Oulipo: A Primer of Potential
                  Literature.</title>
               <date>1986</date>. Ed. and trans. Warren F. Motte, Jr. <pubPlace>Normal,
                  IL</pubPlace>: <publisher>Dalkey Archive Press</publisher>,
               <date>1998</date>.</bibl>
            <bibl xml:id="motte1986" label="Motte 1986" key="motte1986">
               <author>Motte, Warren F., Jr.</author>
               <title rend="quotes">Clinamen Redux</title>, <title rend="italic">Comparative
                  Literature Studies</title>
               >.</bibl>
            <bibl xml:id="olsen1993" label="Olsen 1993" key="olsen1993">
               <author>Olsen, Mark</author>. <title rend="quotes">Signs, Symbols and Discourses: A
                  New Direction for Computer-Aided Literature Studies</title>, <title rend="italic"
                  >Computers and the Humanities</title>, 27
                  (<date>1993</date>): 309-314.</bibl>
            <bibl xml:id="oulipo1981" label="Oulipo 1981" key="oulipo1981">
               <author>Oulipo</author>. <date>1981</date>. <title rend="italic">Atlas de littérature
                  potentielle</title>. <pubPlace>Paris</pubPlace>: <publisher>Gallimard</publisher>,
                  <date>1981</date>.</bibl>
            <bibl xml:id="queneau1961" label="Queneau 1961" key="queneau1961">
               <author>Queneau, Raymond</author>. <title rend="italic">Cent mille milliards de
                  poèmes.</title> Paris: Gallimard, <date>1961</date>.</bibl>
            <bibl xml:id="queneau1964" label="Queneau 1964" key="queneau1964">
               <author>Queneau, Raymond</author>. <title rend="quotes">L'Analyse matricielle du
                  langage</title>, <title rend="italic">Etudes de linguistique appliquée</title>
                  (<date>1964</date>): 37-50.</bibl>
            <bibl xml:id="queneau1965" label="Queneau 1965" key="queneau1965">
               <author>Queneau, Raymond</author>. <title rend="italic">Bâtons, chiffres et
                  lettres.</title>
               <pubPlace>Paris</pubPlace>: <publisher>Gallimard</publisher>,
               <date>1965</date>.</bibl>
            <bibl xml:id="ramsay2003" label="Ramsay 2003" key="ramsay2003">
               <author>Ramsay, Stephen</author>. <title rend="quotes">Toward an Algorithmic
                  Criticism</title>, <title rend="italic">Literary and Linguistic Computing</title>
               18.2 (<date>2003</date>): 167-174.</bibl>
            <bibl xml:id="reggiani1999" label="Reggiani 1999" key="reggiani1999">
               <author>Reggiani, Christelle</author>. <title rend="italic">Rhétoriques de la
                  contrainte: Georges Perec — L'Oulipo </title>. <pubPlace>Paris</pubPlace>:
                  <publisher>Editions Interuniversitaires</publisher>, <date>1999</date>.</bibl>
            <bibl xml:id="rockwell2003" label="Rockwell 2003" key="rockwell2003">
               <author>Rockwell, Geoffrey</author>. <title rend="quotes">What is Text Analysis,
                  Really?</title>, <title rend="italic">Literary and Linguistic Computing</title>
               18.2 (<date>2003</date>): 209-219.</bibl>
            <bibl xml:id="schmid2006" label="Schmid 2006" key="schmid2006">
               <author>Schmid, Helmut</author>. <title rend="italic">TreeTagger: a language
                  independent part-of-speech tagger.</title>
               <publisher>Institute for Natural Language Processing, University of
                  Stuttgart</publisher>. <ref
                  target="http://www.ims.uni-stuttgart.de/projekte/corplex/treetagger/"
                  >http://www.ims.uni-stuttgart.de/projekte/corplex/TreeTagger/DecisionTreeTagger.html</ref>.</bibl>
            <bibl xml:id="sinclair2003b" label="Sinclair 2003" key="sinclair2003b">
               <author>Sinclair, Stéfan</author>. <title rend="quotes">Computer-Assisted Reading:
                  Reconceiving Text Analysis</title>, <title rend="italic">Literary and Linguistic
                  Computing</title>
               18.2 (<date>2003</date>): 175-184.</bibl>
            <bibl xml:id="starynkevitch1990" label="Starynkevitch 1990" key="starynkevitch1990">
               <author>Starynkevitch, Dmitri</author>. <title rend="quotes">The SEA CAB 500
                  Computer</title>, <title rend="italic">Annals of the History of Computing</title>
               12.1 (<date>1990</date>): 23-29.</bibl>
         </listBibl>
      </back>
   </text>
</TEI>
