<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="../../common/schema/DHQauthor-TEI.rng" type="xml"?><?oxygen SCHSchema="../../common/schema/dhqTEI-ready.sch"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:dhq="http://www.digitalhumanities.org/ns/dhq"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:cc="http://web.resource.org/cc/">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>Ontologies and Logic Reasoning as Tools in Humanities?</title>
            <author>Amélie Zöllner-Weber</author>
            <dhq:authorInfo>
               <dhq:author_name>Amélie <dhq:family>Zöllner-Weber</dhq:family>
               </dhq:author_name>
               <dhq:affiliation>Uni Digital, Bergen, Norway</dhq:affiliation>
               <email>amelie.zoellnerweber@gmail.com</email>
               <dhq:bio>
                  <p>Amélie Zöllner-Weber received a Magister Atrium in German language and
                     literatures, text technology and education sciences from Bielefeld University
                     in 2004 and a PhD in computer linguistics in 2008, respectively. From 2006
                     until 2007, she was a researcher at Aksis, University of Bergen, Norway,
                     financed by the German Academic Exchange Service. Her research interests are
                     literary characters and Semantic Web, especially ontologies.</p>
               </dhq:bio>
            </dhq:authorInfo>
         </titleStmt>
         <publicationStmt>
            <publisher>Alliance of Digital Humanities Organizations</publisher>
            <publisher>Association of Computers and the Humanities</publisher>
            <idno type="DHQarticle-id">000068</idno>
            <idno type="volume">003</idno>
            <idno type="issue">4</idno>
            <dhq:articleType>article</dhq:articleType>
            <date when="2010-03-20">20 March 2010</date>
            <availability>
               <cc:License xmlns="http://digitalhumanities.org/DHQ/namespace"
                  rdf:about="https://creativecommons.org/licenses/by-nd/2.5/"/>
            </availability>
         </publicationStmt>
         <sourceDesc>
            <p>Authored for DHQ; migrated from original DHQauthor format</p>
         </sourceDesc>
      </fileDesc>
      <encodingDesc>
         <classDecl>
            <taxonomy xml:id="dhq_keywords">
               <bibl>DHQ classification scheme; full list available in the <ref
                     target="http://www.digitalhumanities.org/dhq/taxonomy.xml">DHQ keyword
                     taxonomy</ref>
               </bibl>
            </taxonomy>
            <taxonomy xml:id="authorial_keywords">
               <bibl>Keywords supplied by author; no controlled vocabulary</bibl>
            </taxonomy>
         </classDecl>
      </encodingDesc>
      <profileDesc>
         <langUsage>
            <language ident="en"/>
         </langUsage>
      </profileDesc>
      <revisionDesc>
         <change when="2009-07-31" who="Alyssa">encoded</change>
         <change when="2009-09-18" who="Alyssa">added bio, teaser, abstract; applied
            corrections</change>
         <change when="2013-06-20" who="Tassie Gniady">Changed "dhq:caption" to "head."</change>
      </revisionDesc>
   </teiHeader>
   <text xml:lang="en">
      <front>
         <dhq:abstract>
            <p>In this article, we evaluate approaches using logic reasoning applied to an ontology
               for literary characters. The inference tool Racer and the programming language Prolog
               were tested and compared to see if they can serve as a computer assisted approach in
               this scenario.</p>
            <p>Both offer options to draw inferences, but the usage requests a good comprehension of
               logics. Intuitive and individual queries are also difficult to produce with solely
               logic constructs. Furthermore, information in humanities is often vague, ambiguous,
               or even contradictory. Solving such problems by logic reasoning which is simply based
               on true or false conclusions will become challenging and might exceed the limits of
               logic reasoning.</p>
            <p>At the moment, to the author’s knowledge, only few such approaches, especially in
               literature studies, have been published. Existing approaches show promising results
               in modelling information in humanities. Therefore, further research should be
               directed to make ontologies and further approaches like logic reasoning even more
               popular and applicable in the humanities and literature studies.</p>
         </dhq:abstract>
         <dhq:teaser>
            <p>Ontologies and logic reasoning as tools in humanities.</p>
         </dhq:teaser>
      </front>
      <body>
         <div>
            <head>Introduction</head>
            <p>Information seems to be essential for our lives. Humans get information everywhere,
               not only on the Internet, TV or radio channels and books, but also by talking to
               people or looking at road signs. We are constantly faced with problems and by solving
               these problems, our ability of using information is requested. But do we always find
               a solution just in time? And do we know when and where we can use information
               correctly? In daily life, we have to get information as quickly as possible. The
               Internet is a <q>mine</q> of information, but, like in a real mine, we need to light
               the darkness, to navigate by maps so that we are able to dig at the right point. The
               Internet is a giant source of information but often completely unstructured, leading
               many to the idea of structuring and grouping information presented on the Internet,
               the <title rend="italic">Semantic Web</title>. Since the introduction of Semantic Web
               technologies and standards, like <title rend="italic">RDF</title> and <title
                  rend="italic">OWL</title>, ontologies and other related methods have entered many
               research fields. In life science, they are already established, e.g. GeneOntology
                  <ptr target="#stevens2000"/>. Ontologies belong to approaches of information or
               knowledge representation. Now, this technology has been also introduced into several
               projects in the humanities, e.g. GOLD <ptr target="#farrar2002"/>, WordNet <ptr
                  target="#gomez2004"/>, TermNet <ptr target="#lungen2007"/>, FRBR <ptr
                  target="#renear2006"/>, and DISCOVERY <ptr target="#smith2007"/>. GOLD is an
               ontology for descriptive linguistics, e.g. syntax, morphology or linguistic data
               structures. WordNet is a lexical database of English that is also presented as an
               ontology. Thereby, TermNet, a terminological net for the domain of text technology,
               takes the concepts of WordNet into account. While these are linguistic ontologies,
               the FRBR ontology defines concepts of bibliographic cataloguing and indexing. Based
               on domain ontologies and other data bases, the DISCOVERY project links different
               philosophical projects together.</p>
            <p>But does the obvious popularity of ontologies really point at the advantages? Or is
               the popularity only a trend in research?</p>
            <p>There are some criticisms of ontologies <ptr target="#veltman2004"/>, <ptr
                  target="#shirky2005"/>. Veltman points out that the definition of meaning is often
               rather limited when using ontologies, especially in humanities. He argues that this
               definition is adequate for machine-to-machine transactions in, for example, business,
               but it does not address the needs of culture. There, meaning comprises much more and
               needs to be handled by more suitable methods. In addition, Shirky criticizes the
               incomplete methods of classifying things. Summarized, he argues that categorization
               is always dependent on world views, which might not be accepted by other parties.
               Both authors hint at very important points, which should be discussed critically. But
               that goes beyond the scope of this contribution.</p>
            <p>Nevertheless, the results of the approaches mentioned before show that ontologies and
               supporting technologies like logic reasoning are useful ways to express structured
               and hierarchical information in the humanities. In literature studies, the usage of
               ontologies is not very common. A reason for this might be that in this field, the
               contribution of an ontology to research topics is often rather difficult. Definitions
               of literary phenomena are unstable and unclear. Furthermore, in humanities and
               especially in literature studies, topics of research often cannot be measured like in
               life science <ptr target="#zw2008"/>. As such it seems to be ever more challenging to
               introduce ontologies to these research areas, and, one might ask, which kinds of
               applications are offered and whether benefits might be drawn when applying such
               technologies.</p>
            <p>Since their initiation in philosophy, ontologies, with their methods of subsumption
               related to semantics, have been expressed by logical expressions. Thereby,
               information about an ontology can be obtained using logic reasoning <ptr
                  target="#baader2003a"/>. By formulating logic expressions, information that is
               often implicit or hidden in the ontology can be queried and conclusions can be drawn.
               This means that information about the structure and elements of ontologies can be
               retrieved, which can be of interest for human users, i.e. manual processing and
               automated processing, respectively. For example, even for human users, it might be
               difficult to get a detailed overview of relations between the elements in large
               ontologies without appropriate methods and utilities. Another interesting aspect
               might arise if ontologies from different sources are merged or mapped <ptr
                  target="#noy2003" loc="18–9"/>. A merging or mapping may result in an enlarged
               description of the ontology domain.</p>
            <p>Such a method is also of interest for schemes and models of topics in the humanities.
               Semantic relations that are essential in humanities can be expressed by creating an
               ontology. After storing information in an ontology, consecutive processing, like
               logic reasoning, creates further possibilities like consistency checks or support by
               merging data.</p>
            <p>The aim of this work is to investigate probable applications for ontologies in the
               humanities, especially for literature studies. As mentioned, it is rather challenging
               to work with ontologies in humanities. In this contribution, an example ontology and
               its supporting tools, here focused on logic reasoning, are reviewed on three levels:
               a) the user’s view, b) the methodological limits and c) limits of the tools with
               respect to literature studies.</p>
            <p>In Section 2.1, an introduction to ontologies, especially the way they are used in
               Artificial Intelligence, is given, and their connection to logic reasoning is
               outlined. In Sections 2.2 and 2.3, an ontology for the description of literary
               characters and the application of logic reasoning to this ontology is presented <ptr
                  target="#zw2006a"/>. In Section 3, logics related to ontologies are introduced.
               Afterwards, the ontology for literary characters is used to test different
               logic-based methods; two tools, <title rend="italic">Racer</title> and <title
                  rend="italic">Prolog</title>, are compared. <title rend="italic">Racer</title>
               represents pure inference machines, whereas <title rend="italic">Prolog</title> has
               been taken as an example for logic programming languages. In Section 4, the ontology
               and the applied logical reasoning tools regarding the aforementioned points are
               discussed. Finally, a conclusion and an outlook are given.</p>
         </div>
         <div>
            <head>Materials and Methods</head>
            <p>In the next sections, an introduction to ontologies and especially to the ontology
               for literary characters is given.</p>
            <div>
               <head>Introduction to Ontologies</head>
               <p>Briefly, ontologies are used to provide organisation and retrieval of information
                  semantically. Thereby, similarities between information provided by an ontology
                  are searched by means of a semantic relation rather than by matching search
                  strings or other similar measures. There are two comprehensions of the term of
                  ontology: the pure formalistic approach of classifying objects as in the field of
                  Artificial Intelligence and machine learning, and the more transcendental approach
                  in the humanities and especially philosophy.</p>
               <p>The term ontology, which originates from philosophy and contains the study of
                  being or existence in general, was introduced by Aristotle <ptr target="#pl1991"
                  />. Aristotle was interested in describing the existence of things in the world.
                  He asked fundamental questions like <quote rend="inline" source="#pl1991">What
                     is existence?</quote> On the one hand, he discussed human existence as it is
                  still discussed in philosophy, and on the other hand, he developed a system
                  (universals and particulars) of how the existence can be described, a formalism.
                  In particular, this is based on descriptive logics. The system of these logics is
                  contained in an ontology, which inherits formalistic principles, and therefore is
                  a form of expressing logics. In the ancient world and maybe in Aristotle’s view,
                  the different sciences did not exist separately. In today’s view, he mingled
                  transcendental questions with pure formalism. Over the course of centuries, these
                  two parts have been split into different sciences. In a simplified way, formalism
                  and classification have been moved to natural science and mathematics while the
                  transcendental core of Aristotle’s questions is discussed in philosophy and
                  theology. By transferring the term of an ontology to the AI, it is more restricted
                  and focused on modelling of concepts of the real world in computer systems. Gruber
                  gives a definition: <cit>
                     <quote rend="inline" source="#gruber1993">An ontology is a formal, explicit
                        specification of a shared conceptualisation</quote>
                     <ptr target="#gruber1993" loc="199"/>
                  </cit>. In this approach, Gruber refers to groups of people with a common
                  comprehension of the world. In that respect, the initial question of existence is
                  no longer in focus but still has to be described. Therefore, the formalism relied
                  upon in an ontology is used. An ontology in AI comprises hierarchically structured
                  concepts, also called classes, of a part of the world (a <term>domain</term>). The
                  representation should be produced in a machine-readable language. Noy et al.
                  explain, <cit>
                     <quote rend="inline" source="#noy2001">An ontology defines a common vocabulary
                        for researchers who need to share information in a domain</quote>
                     <ptr target="#noy2001" loc="1"/>
                  </cit>. An ontology consists of a set of objects that are divided into classes,
                  concepts, properties (also slots, or roles) and the restrictions of the roles <ptr
                     target="#noy2001" loc="3"/>. By relating main and more specialized classes to
                  an ontology, a hierarchy can be created. Additionally, so-called instances of the
                  classes represent individual objects of the selected domain. Although, the
                  structure of an ontology is rather static, the included information can be queried
                  and manipulated in several ways, e.g. using W3C standards like the <title
                     rend="italic">Web Ontology Language</title> (OWL) or <title rend="italic"
                     >Resource Description Framework Schema</title> (RDFS) <ptr
                     target="#antoniou2003"/>. OWL has been created to enlarge web sites with
                  semantic information and to make the Internet usable as a structured information
                  source <ptr target="#ziegler2004" loc="126"/>.</p>
               <p>Discussion about ontologies, in this contribution, is focused on the formalistic
                  method. Therefore, the discussion of existence, which has a long tradition in
                  humanities, is not relevant here because an ontology is just seen as a very useful
                  method to structure phenomena of literature studies. In the following, the
                  ontology, criteria, and tools are presented.</p>
            </div>
            <div>
               <head>An Ontology for the Description of Literary Characters</head>
               <p>To investigate ontologies and logic reasoning as tools in humanities, a concrete
                  example is used. Here, the description of literary characters has been realised as
                  an ontology.</p>
               <p>Briefly, several theories of literary characters <ptr target="#jannidis2004"/>,
                     <ptr target="#nieragden1995"/> are combined to create a base of a formal
                  description using an OWL ontology <ptr target="#zw2006b"/>. Categories which
                  describe features and actions of characters mentioned in stories had to be adapted
                  and applied. It is aimed at representing the mental information structure of a
                  reader, which (s)he has in mind when reading a book <ptr target="#jannidis2004"
                     loc="185"/>. Categories describing general aspects of literary characters form
                  the main classes of the ontology, e.g. inner and outer features, actions on other
                  characters and objects. In this contribution, characters are regarded as
                  individual objects, which are not linked to roles or archetypes <ptr
                     target="#propp1968"/>, <ptr target="#greimas1971"/>. Asking what a character
                  means to a reader means not what kind of characters we have, but what general
                  structure and attributes a character has. We regard a character as a complex
                  cognitive entity in the reader’s mind, rather than emphasizing metaphors or
                  archetypes. In this contribution, approaches that separate characters by roles,
                  genres, etc., are fazed out, because they might superimpose literary criticism on
                  the daily phenomenon of reading literature. Reading literature and understanding
                  characters does not necessarily require that everyone be a scholar in literature
                  studies. It is of interest how a normal person as well as a scholar describes a
                  character. By using a hierarchy, individual descriptions of characters should get
                  a common ground to comparing these descriptions. By using sub classes, categories
                  can subsume features of special characters or groups of characters. In addition,
                  so-called instances of the classes represent individual and explicit objects of
                  the domain of literary characters. Here, direct information about a character
                  given in a text is assigned to an instance. Together with the information of the
                  class hierarchy and other instances, a single mental representation of a character
                  is modelled (cf. <ref target="#figure01">Figure 1</ref>). In this approach,
                  individual description, the pre-step of interpretation, is focused. Finding the
                  same patterns revealed in different descriptions might be regarded as a common
                  sense. By analysing these, similarities based on the cultural background of
                  readers or of writing and reading traditions might be found. A more detailed
                  description of this ontology is given in <ptr target="#zw2006a"/>, <ptr
                     target="#zw2006b"/>.</p>
               <figure xml:id="figure01">
                  <head>Scheme of the representation structure of a character in the ontology. The
                     scheme contains the distribution of the classes, instances, properties, and
                     information about a character. Thereby, the main classes represent aspects that
                     all kinds of characters have in common. The sub classes represent special
                     features and actions for specific groups of characters. The instances represent
                     pieces of information about a character. The properties contain additional
                     information. Together, the classes, instances and properties form a mental
                     representation of a character.</head>
                  <graphic url="resources/images/figure01.jpg"/>
                  <figDesc>Graphic representation of the information structure of a
                     character.</figDesc>
               </figure>
            </div>
            <div>
               <head>Applications using the Ontology for Literary Characters</head>
               <p>Having explained the concrete implementation of the ontology of literary
                  characters, we focus this section on logic reasoning, which is a central principle
                  when dealing with ontologies.</p>
               <p>In general, conclusions drawn from logic reasoning can be inferred from given
                  information. This means implicit information is derived from explicit information.
                  In formal logic, given information is called assumption; the operation is called
                  conclusion. The methods induction <ptr target="#charniak1985" loc="22"/> and
                  deduction <ptr target="#charniak1985" loc="14"/> are subsumed under the term of
                  logic reasoning. Induction means inferring from special concepts to general
                  concepts whereas deduction constitutes the opposite process from general concepts
                  to special ones. Here, the conclusions can only receive the values true or false.
                  The assumptions of the induction have to be true so that a conclusion can be
                  constituted as true as well. The conclusion is called an inference.</p>
               <p>Logic reasoning is one possible application for ontologies. It is probably helpful
                  (i) to check consistency during ontology development, (ii) to enable
                  semi-automatic merging of (domain) ontologies as well as (iii) to deduce hidden
                  information contained in the ontology. These three tasks can be applied to all
                  elements of ontologies, classes as well as instances. As Baader et al. mention,
                  logic reasoning can fulfill different purposes in the phase of creating an
                  ontology and in the phase of using it <ptr target="#baader2003a" loc="4"/>, e.g.
                  investigating the structure of categories/ concepts, or testing if every object is
                  used in the intended and not contradictory way. In different situations of a work
                  process, logic reasoning can be used to avoid or to solve problems: If several
                  persons build together an ontology, new included elements can be checked for
                  inconsistency or redundant information can be detected.</p>
               <p>Coming back to the mentioned mapping processes, one can state that for the
                  ontology of literary characters, it might be useful, if two persons add categories
                  with the same or similar meaning to the ontology, to produce suggestions for
                  mapping. Applications like mapping or merging are useful for the development and
                  usage of ontologies. But recently, to the author's knowledge, there have been no
                  other ontologies in literature studies which deal with literary characters or
                  narratology and which could be related to this ontology, i.e. by merging or
                  mapping. To be successful, synonymy has to be taken into account and a relating
                  mechanism has to be implemented, because processing of synonymy is not included
                  directly in an ontology so far. Therefore, these tasks cannot be applied
                  completely to the ontology for literary characters at the moment.</p>
               <p>Especially in the humanities, where textual data is often crucial, applications
                  can be used which combine ontologies with text annotations or information
                  retrieval. Ontologies consist of information, ideas, and/or facts, which also
                  occur or are repeated in (text) sources that are not included in an ontology. This
                  might be especially interesting when dealing with ontology learning. For example,
                  terms contained in both sources, in text annotations/web pages and an ontology
                     <ptr target="#baader2003a" loc="4"/> can be queried for. But here arises the
                  question of whether arranging data that both sources can match would be a
                  redundant and time-consuming work. In addition, setting up more elaborate match
                  processes could require a complex system including lexica or external rules <ptr
                     target="#puppe2000" loc="635–6"/>, <ptr target="#benjamins1999"/>.</p>
               <p>Nevertheless, logic reasoning is not only useful for such processes. Logic
                  reasoning can also help during users' orientation period. Hierarchical relations
                  can be highlighted so users can get a structured overview about all elements and
                  their relations. Another aspect is obtaining information that is implicitly hidden
                  in the data.</p>
               <p>These examples show only some of the imaginable methods which might be performed
                  by logic reasoning, but already they outline possibilities for an ontology in the
                  humanities. It does not matter for which discipline ontologies are developed; they
                  all have to pass a development, test, and deployment phase and thus, the methods
                  of logic reasoning might be helpful.</p>
               <p>However, mapping or merging is yet not possible because of the singularity of the
                  ontology for literary characters. Such operations might become possible if further
                  ontologies in this field will become available.</p>
               <p>In addition, the human user should be focused when testing logic reasoning. In
                  order to test logic based applications, several tasks are defined, - which are
                  similar to the queries given in linguistic approaches <ptr target="#lungen2007"
                  />:</p>
               <p>Retrieval of <list>
                     <item>
                        <label>Individuals/instances that belong to a given class.</label> The
                        results should give information about the relationship between special
                        classes and their instances so that it is possible to obtain information
                        about a character, which is disseminated in a text, e.g. that characters
                        consist of special features whose information is expressed as
                        instances</item>
                     <item>
                        <label>Individuals/instances that contain a given property (and maybe a
                           given value).</label> The results should give information about the
                        relationship between instances and special properties and to which class the
                        instance belongs so that the apportionment of additional information can be
                        focused, thereby it might be possible to examine which special kinds of
                        properties only belong to some classes</item>
                     <item>
                        <label>Bottom up/top down.</label> The result should show the relationship
                        of classes and its super classes, it should also show the arrangement of the
                        features/actions of characters and the structure of the mental
                        representations</item>
                  </list>
               </p>
            </div>
         </div>
         <div>
            <head>Testing Applications of Logic Reasoning</head>
            <div>
               <head>OWL and its Relation to Description Logic</head>
               <p>The ontology used in this contribution was implemented in <title rend="italic">OWL
                     Description Logic</title>
                  <ptr target="#antoniou2003"/>. The standard OWL consists of three sub languages
                  (OWL Light, OWL DL, OWL Full) created on different levels of information
                  representation. Before going on, a short summary of the Description Logic whose
                  ideas are included in OWL DL: OWL is often used in its sub language OWL DL, as it
                  inherits concepts of a logic formalism called <title rend="italic">Description
                     Logic</title> (DL). In DL, concepts are grouped in a so-called <title
                     rend="italic">TBox</title> and individuals belong to an <title rend="italic"
                     >ABox</title>. The structure of a TBox is represented as subsumption so that
                  more general concepts contain special ones, which correspond to the
                  concepts/classes of an ontology. Regarding the ontology for literary characters,
                  all classes that have been defined (cf. <ref target="#figure02">Figure 2</ref>)
                  are collected in the TBox. An ABox subsumes all instances of the modelled domain.
                  This can be seen as a description of a domain. Coming back to the ontology for
                  literary characters, this means that the ABox is composed of the instances
                  contained in the ontology.</p>
               <p>As Nardi and Brachman explain, these methods are usually a variant of first-order
                  predicate calculus (cf. <ptr target="#nardi2003" loc="2"/>). Therefore, it is
                  possible to use the mechanisms of logic formalism like reasoning or drawing
                  inferences. To operate on data that is formatted or transformed into Description
                  Logic, inference algorithms have been developed. These algorithms are implemented
                  in different programmes like FaCT++ <ptr target="#tsarkov2006"/>, Pellet <ptr
                     target="#sirin2007"/>, and Racer <ptr target="#haarslev2004"/>, which are DL
                  reasoners, or Prolog <ref target="http://www.swi-prolog.org/"
                     >http://​www.swi-prolog.org/</ref> which is also able to query OWL
                  ontologies.</p>
            </div>
            <div>
               <head>Racer and Prolog</head>
               <p>In the next sections, the two already-mentioned tools, the inference machine Racer
                  and the logic programming language Prolog, will be described.</p>
               <div>
                  <head>Introduction to Racer</head>
                  <p>Here, we investigate whether Racer (<title rend="italic">Renamed ABox and
                        Concept Expression Reasoner Professional</title>) is a good tool for drawing
                     inferences on ontologies in the humanities. Racer was developed for approaches
                     that are based on OWL/ DL and offers inference functions as well as consistency
                     checks (cf. <ptr target="#racer2005" loc="1"/>).</p>
                  <figure xml:id="figure02">
                     <head>Extract of the program Racer. Specifically, an extract of the TBox, which
                        shows several classes of the ontology for literary characters, is
                        depicted.</head>
                     <graphic url="resources/images/figure02.jpg"/>
                     <figDesc>Screenshot of a TBox from Racer</figDesc>
                  </figure>
                  <p>According to the concepts of an ABox and TBox in DL, the classes and
                     individuals are presented and inferred separately (cf. <ref target="#figure03"
                        >Figure 3</ref>). To infer in OWL, Racer uses the query language <title
                        rend="italic">nRQL</title>
                     <ptr target="#racer2005" loc="87"/>. This means that the notion in the XML
                     standard of OWL has to be translated to this query language. Queries in nRQL
                     consist of a head and a body similar to predicate calculus <ptr
                        target="#haarslev2004"/>.</p>
                  <p>The syntax for a TBox and ABox differs from each other. By an ABox query, for
                     example possible individuals of a special class can be retrieved. It is also
                     possible to query for individuals with special properties. So, information
                     nested in individuals and properties can be related to each other. In order to
                     retrieve individuals with a data type property, so-called <term>head projection
                        operators</term> have to be used. In a TBox, classes that do or do not have
                     a given name can be also queried for.</p>
                  <p>
                     <ref target="#figure03">Figure 3</ref> shows how Racer is working in
                     conjunction with an ontology. Except for the graphical notion of TBox and ABox,
                     all queries in nRQL have to be inserted manually. The results are also shown in
                     nRQL. The user has no graphical interface when querying in the ontology.</p>
                  <figure xml:id="figure03">
                     <head>Scheme of interaction between Racer and an ontology. The querying of the
                        ontology is realized via nRQL queries given to the Racer program.</head>
                     <graphic url="resources/images/figure03.jpg"/>
                     <figDesc>Graphic of query input in Racer.</figDesc>
                  </figure>
                  <p>Another helpful option is to use a special construct that can be used in
                     combination with the classes that should be retrieved. This means that direct
                     hierarchical relations between classes like sub or super relations can be
                     retrieved. But one should note that Racer can only offer a result if the
                     classes are in a hierarchical relation to each other.</p>
                  <p>In general, when querying an ontology by Racer, different results can be
                     obtained. First, a Boolean is returned (true or false), i.e. an assumption
                     about the ontology can be verified. Second, a literal value is returned,
                     depicting certain information queried for.</p>
                  <p>All these efforts are reasonable when dealing with huge or (partly) unknown
                     ontologies. Logic reasoning using Racer might help a human to orientate
                     himself/herself and to work easily with such an ontology. Figure 4 shows the
                     processing of possible queries of an ABox or TBox.</p>
                  <figure xml:id="figure04">
                     <head>Examples for nRQL queries. An ABox and a TBox are shown. The TBox query
                        is an example for including negation.</head>
                     <graphic url="resources/images/figure04.jpg"/>
                     <figDesc>Query example with step-by-step information.</figDesc>
                  </figure>
               </div>
               <div>
                  <head>Introduction to Prolog</head>
                  <p>Another possibility for drawing inferences is to use a programming language
                     that is specialized for logics, e.g. Prolog. It is based on first-order
                     predicate calculus <ptr target="#fisher2006"/> and provides unification,
                     backtracking, and tail recursion: operations that are especially useful for
                     ontologies. Inferences can be drawn by using a parser that operates on a
                     so-called <term>Prolog fact base</term>. This means that, similar to Racer and
                     its query language, OWL ontologies have to be transferred to a notion in
                     Prolog.</p>
                  <p>Data in Prolog consists of <term>facts</term> and <term>rules</term>. The facts
                     can be considered a vocabulary on which Prolog works. Facts, called
                        <term>predicates</term>, are defined with arguments included to describe the
                     knowledge, and given to Prolog. A predicate is defined by giving a head and
                     arguments (in brackets). By using rules, the fact base can be enlarged so that
                     different relations and combinations between the modelled elements can be
                     achieved.</p>
                  <p>Using Prolog as an inference tool for ontologies, the <title rend="italic"
                        >SWI-Prolog</title> implementation offers several useful modules for
                     manipulating RDFS and OWL data. In this approach, the RDFS module for
                     SWI-Prolog has been used <ref
                        target="http://www.swi-prolog.org/pldoc/package/semweb.html"
                        >http://​www.swi-prolog.org/​pldoc/​package/​semweb.html</ref>. By loading
                     an ontology, the module represents the data as triples in a Prolog fact base.
                     The RDFS module can query for the relations between classes, properties, and
                     individuals by using predefined predicates, e.g. relation between classes and
                     instances. But one can also query for instances with a given property.</p>
                  <p>It is also possible to retrieve instances with a given literal, e.g. special,
                     property value. For comparison reasons, the usage of literals like character
                     names included in the ontology for literary characters is very useful. Thus,
                     all the instances or pieces of information of two literary characters can be
                     retrieved. But it might also be interesting to query for characters created by
                     a special author. For example, a user wants to retrieve every instance with the
                     name of a given author in its property. Information can be filtered.
                     Hierarchical relations of classes, e.g. super-sub class relations can also be
                     queried top down or vice versa. By combining the predicates of the module, a
                     wide range of different queries can be supported.</p>
               </div>
            </div>
         </div>
         <div>
            <head>Discussion</head>
            <p>Having outlined the technical principles, in the following, we discuss the
               application of logic reasoning to an ontology in literature studies on three levels:
               a) the user’s view, b) the methodological limits including ontologies, and c) limits
               of the tools especially for literature studies.</p>
            <p>The task defined in Section 2.2 could be realised by queries formulated in nRQL and
               Prolog.</p>
            <p>
               <ref target="#table1">Table 1</ref> in the appendix summaries all types of queries
               implemented and executed so far. The query in nRQL depicted in Figure 5, as an
               example, as well as in <ref target="#table2">Table 2</ref> in the appendix,
               demonstrates the possibilities of using logic reasoning.</p>
            <p>Literally, it could be asked if a certain description of a character is featured by a
               class (instance-class relation), combination of content of the primary text and
               narrative/ additional information (instance-property relation), and the hierarchical
               structure of a character (top-down relation).</p>
            <figure xml:id="figure05">
               <head>RDF Query (a) and its result (b). Show all instances that belong to the class
                  on43_statement_about_the analysed_character and have the property storytitle. In
                  b) only the first element returned (of a longer list) is given for brevity.</head>
               <graphic url="resources/images/figure05.jpg"/>
               <figDesc>Two query results in text format.</figDesc>
            </figure>
            <p>Racer and Prolog differ in their basic concept of logics: Prolog is based on
               predicate calculus whereas Racer uses the concept of description logic (ABox, TBox
               syntax). Both tools have been evaluated in this work. In comparing Prolog and Racer,
               a huge difference between them is that SWI-Prolog cannot only be used for drawing
               inferences — the parser can handle all kind of data represented as a Prolog fact
               base. In contrast, Racer is a solely inference machine.</p>
            <p>Both have their own representation and syntax so that a user who is querying an
               ontology needs detailed knowledge on handling both programmes, i.e. to draw
               conclusion with these tools, the plain representation of the ontology in OWL, an XML
               standard, has to be transformed into the programmes’ own representation in advance.
               Additionally, a possible user has to be familiar with the concepts of an ontology to
               formulate reasonable queries. This assumes certain knowledge in theory in ontologies
               and logic but also some technical <q>hands on</q> experience for daily use. It is
               questionable if these skills can be a requirement for a scholar with traditional
               education in literature studies without proper training. In summary, both programs
               are reasonable for inference tasks with ontologies in humanities. Both have
               advantages and disadvantages, especially formulating queries seem to be difficult.
               SWI-Prolog might be a choice since complete scripts can be executed. On the other
               hand, Racer provides a graphical representation of ontologies.</p>
            <p>As mentioned, an ontology consists of a set of objects, concepts, and further
               entities, which are related to each other <ptr target="#noy1997" loc="53"/>. These
               objects are divided into classes, properties <ptr target="#noy2001" loc="3"/>.
               Additionally, instances of the classes represent individual objects of the selected
               domain. By relating main classes and more specialised ones of an ontology, a
               hierarchy can be created. Therefore, only information in a hierarchical order can be
               modelled using an ontology. Similarities between concepts or classes commonly
               occurring when modelling certain information from literature cannot be expressed
               directly by an ontology. However, there exist certain structures within the OWL
               languages that allow for such relations. But these relations have to be modelled
               explicitly during the creation of the ontology. Concerning the description of
               literary characters as in this work, theories which tend to have a hierarchical
               structure for describing the characters as Nieragden <ptr target="#nieragden1995"/>
               should be included. Theories that are based more on network-like structures, however,
               should be modeled using topic maps or similar techniques, for example.</p>
            <p>Besides this disadvantage, one has also to note that vague information can be handled
               by the ontology through the instantiation of a class. While the class describes the
               more general and common agreed on concept, the instance refers to a concrete example,
               also including possible individual interpretations. This kind of modelling has been
               used for the ontology of literary characters.</p>
            <p>In principle, drawing inferences can retrieve implicit and hidden information. The
               structure of OWL DL allows logic and formal applications, but the scope of the
               logic-based queries is often restricted. Since the logic theorem is based on the
               closed world assumption, only information already included in a fact base can be
               returned. Mostly the implicit information that possibly exists in an ontology is
               anchored in the hierarchical relations between the classes and between classes and
               instances. Furthermore, the employed logical concept in description logics only can
               give back true or false conclusions (or the elements of the fact base that match a
               true result). However, when it is queried for vague information (not modelled via
               certain similarity constructs as explained before) this approach will fail since they
               cannot be expressed in logical terms <ptr target="#berthold2003"/>. Furthermore, such
               information is often ambiguous, or even contradictory <ptr target="#zw2008"/>. Here,
               fuzzy logics or statistically methods might be superior. In computer science, many
               approaches combine logic reasoning with other methods of information retrieval to
               overcome the limits of logics. Logical queries are often embedded in systems, which
               contain further sources like lexica to extract more information e.g. ontology
               learning <ptr target="#cimiano2006"/>.</p>
            <p>More generally, when comparing literature studies and computer systems, one has to
               take into account that semantics in literature studies often do not match semantics
               in machine-to-machine learning <ptr target="#veltman2004"/>. Often, technical, e.g.
               machine-to-machine, semantics are more flat and not too complex, whereas in
               literature semantics could be highly complex. As an example in the present work, the
               description of the literary characters is dependent on the reader’s interpretation.
               Therefore, the modelling of the ontology must allow for several interpretations
               side-by-side in the ontology (via instantiations). This is also covered in <ptr
                  target="#mccarty2005"/>, where he points out that proper modelling in humanities
               is important and that the model has to be kept open or flexible, i.e. to be able to
               include the thinking itself. Furthermore, one has to note that the foundations i.e.
               the literary theories of character descriptions, on which the ontology is built on,
               mainly have hierarchical character and thus, are more advantageous for the proposed
               task. Nevertheless, also the structure of a hierarchy is critical. Shirky notes that
               hierarchies are usually built on a single world-view <ptr target="#shirky2005"/>. But
               mostly the weighting or the level of detail within different branches in the
               hierarchy is influenced by the modeller or by economical aspects. Therefore, the
               hierarchy might not be objective. This might not be a problem for machine-based
               processing; however, a user of this ontology might not agree on the presented
               hierarchy. This risks that the provided system will be abandoned by the user.</p>
         </div>
         <div>
            <head>Conclusion and Outlook</head>
            <p>In this article, we evaluated approaches using logic reasoning applied to an ontology
               for literary characters. The inference tool Racer and the programming language Prolog
               were tested and compared to see if they can serve as a computer assisted approach in
               this scenario.</p>
            <p>Both offer options to draw inferences, but the usage requests a good comprehension of
               logics. In addition, intuitive and individual queries are also difficult to produce
               with solely logic constructs. Furthermore, the hierarchy model of an ontology might
               often not be suitable for certain topics in literature studies. For example, strands
               of plots that evolve over time cannot be represented by using a hierarchy. For such
               analysis, other approaches are more suitable (for example <ptr target="#meister1999"
               />). One should also keep in mind that information in humanities is often vague,
               ambiguous, or even contradictory. An example of such a situation is given by the
               relations between language and the world in Ludwig Wittgenstein’s philosophical work
                  <title rend="italic">Tractatus</title>. If trying to model these by an ontology
               (hierarchy), the author was faced by the fact that the hierarchy changes during the
               progress of Wittgenstein’s approach <ptr target="#zw2007b"/>. However, a model
               represented by an ontology remains static. Solving such problems by logic reasoning
               which is simply based on true or false conclusions will become challenging and might
               exceed the limits of logic reasoning.</p>
            <p>Nevertheless, the potential of logic reasoning for literature should be explored. It
               is helpful in the different phases of the creation and deployment of ontologies in
               the humanities and its sub disciplines like literature studies. For example, when
               different experts are working on the same ontology, its consistency can be checked
               and errors can be minimised in an early state of an ontology.</p>
            <p>Probably, when dealing with such information and logic systems, Fuzzy Logic should be
               considered <ptr target="#halpern2005"/>. It offers a range of values that weight a
               conclusion rather than a binary decision as the logics described in this
               contribution. Also, combinations with other types of systems, like additional
               knowledge bases, might support current ontology approaches in humanities and
               literature studies.</p>
            <p>At the moment, to the author’s knowledge, only few such approaches, especially in
               literature studies, have been published. Therefore, a general judgement about the
               value of computer-aided approaches as outlined in this contribution could not be
               demonstrated to its limits. Existing approaches (for example <ptr
                  target="#farrar2002"/>, <ptr target="#lungen2007"/>, <ptr target="#zw2006b"/>)
               show promising results in modelling information in humanities. Therefore, further
               research should be directed to make ontologies and further approaches like logic
               reasoning even more popular and applicable in the humanities and literature
               studies.</p>
         </div>
         <div>
            <head>Appendix</head>
            <table xml:id="table1">
               <head>Table 1 depicts several PROLOG queries formulated in this work for assessing
                  the ontology of literary characters.</head>
               <row>
                  <cell>Query for instance class relation:</cell>
                  <cell>rdf(INSTANCE,'http://www.w3.org/1999/02/22-rdf-syntax-ns# type',CLASS),
                     rdf(CLASS,'http://www.w3.org/1999/02/22-rdf-syntax-ns#type',
                     'http://www.w3.org/2002/07/owl#Class').</cell>
               </row>
               <row>
                  <cell>Query for instances that belong to one class:</cell>
                  <cell>rdf_has(X,Y,'http://www.figurenontologie.de/
                     #on27_action_and_behaviour').</cell>
               </row>
               <row>
                  <cell>Query for top down relation:</cell>
                  <cell>rdf_has(Y,Z,X),rdf_has(A,B,Y).</cell>
               </row>
               <row>
                  <cell>Querying hierarchies:</cell>
                  <cell>rdf_has(SUBCLASS,'http://www.w3.org/2000/01/rdf-schema#subClassOf',SUPERCLASS),
                     rdf_has(SUPERCLASS,'http://www.w3.org/2000/01/rdf-schema#subClassOf',SUPERSUPER),
                     rdf_has(SUPERSUPER,'http://www.w3.org/2000/01/rdf-schema#subClassOf',SUPER).</cell>
               </row>
               <row>
                  <cell>Query for sibling classes:</cell>
                  <cell>rdf_has(SUBCLASS1,'http://www.w3.org/2000/01/rdf-schema#subClassOf',SUPERCLASS),
                     rdf_has(SUBCLASS2,'http://www.w3.org/2000/01/rdf-schema#subClassOf',SUPERCLASS),SUBCLASS1\=SUBCLASS2.</cell>
               </row>
            </table>
            <table xml:id="table2">
               <head>Table 2 depicts several Racer queries in nRQL formulated in this work for
                  assessing the ontology of literary characters.</head>
               <row>
                  <cell>An ABox query:</cell>
                  <cell>(RETRIEVE(?X)(?X |http://www.figurenontologie.de/unnamed.owl#
                     on4_general_notes|))</cell>
               </row>
               <row>
                  <cell>A TBox query with negation:</cell>
                  <cell>(TBOX-RETRIEVE(?X) (NEG (?X |http://www.figurenontologie.de/
                     unnamed.owl#on43_statement_about_the_analised_character|)))</cell>
               </row>
               <row>
                  <cell>Query with head projection operator:</cell>
                  <cell>(RETRIEVE(?X(TOLD-VALUE (|http://www.figurenontologie.de/unnamed.owl#
                     storytitle|?X))) (?X|http://www.figurenontologie.de/unnamed.owl#
                     on43_statement_about_the_analised_character|))</cell>
               </row>
            </table>
         </div>
      </body>
      <back>
         <listBibl>
            <bibl xml:id="antoniou2003" label="Antoniou &amp; Harmelen 2003" key="antoniou2003">
               Antoniou, G. and van Harmelen, F. <title rend="quotes">Web ontology Language:
                  OWL.</title> In S. Staab and R. Studer (eds), <title rend="italic">Handbook on
                  Ontologies</title>, Springer, Berlin (2003), pp. 67-92.</bibl>
            <bibl xml:id="baader2003b" label="Baader et al. 2003" key="baader2003b"> Baader, F.,
               Horrocks, I. and Sattler, U.: <title rend="quotes">Description Logics.</title> In
                  <title rend="italic">Handbook on Ontologies</title> Ed. Steffen Staab and Rudi
               Studer. Berlin (2003). pp.3-28.</bibl>
            <bibl xml:id="baader2003a" label="Baader &amp; Nutt 2003" key="baader2003"> Baader, F.
               and Nutt, W. <title rend="quotes">Basic Description Logics.</title> In F. Baader, D.
               Calvanese, D. L. McGuinness, D. Nardi, and P.F. Patel-Schneider (eds), <title
                  rend="italic">The Description Logic Handbook</title>, Cambridge University Press.
               Cambridge (2003), pp. 43-95.</bibl>
            <bibl xml:id="benjamins1999" label="Benjamins et al. 1999" key="benjamins1999">
               Benjamins, V. R., Fensel, D., Decker, S., and Gómez Pérez, A. <title rend="quotes"
                  >(KA)2: building ontologies for the Internet: a mid-term report.</title> In <title
                  rend="italic">International Journal of Human-Computer Studies</title>, 51:
               687-712.</bibl>
            <bibl xml:id="berthold2003" label="Berthold 2003" key="berthold2003"> Berthold, M.
               Chapter 9: Fuzzy Logic. In M. Berthold and D.J. Hand (eds), <title rend="italic"
                  >Intelligent Data Analysis</title>, Springer, Berlin (2003), pp. 321-350.</bibl>
            <bibl xml:id="charniak1985" label="Charniak &amp; McDermott 1985" key="charniak1985">
               Charniak, E. and McDermott, D. <title>Introduction to Artificial
               Intelligence</title>. Reading MA (1985).</bibl>
            <bibl xml:id="cimiano2006" label="Cimiano et al. 2006" key="cimiano2006b"> Cimiano, P.,
               Völker, J., and Studer, R. <title rend="quotes">Ontologies on Demand? - A Description
                  of the State-of-the-Art, Applications, Challenges and Trends for Ontology Learning
                  from Text.</title> In <title rend="italic">Information, Wissenschaft und
                  Praxis</title>, 57 (6-7): 315-320.</bibl>
            <bibl xml:id="farrar2002" label="Farrar et al. 2002" key="farrar2002"> Farrar, S.,
               Lewis, W. D., and Langendoen, D. T. <title rend="quotes">An Ontology for Linguistic
                  Annotation.</title> In <title>Semantic Web Meets Language Resources: Papers from
                  the AAAI Workshop, Technical Report WS-02-16</title>, Menlo Park, CA 2002, pp.
               11–19.</bibl>
            <bibl xml:id="fisher2006" label="Fisher 2006" key="fisher2006"> Fisher, J. R. Prolog
               Tutorial. <ref
                  target="http://www.csupomona.edu/~jrfisher/www/prolog_tutorial/contents.html"
                  >http://www.csupomona.edu/~jrfisher/www/prolog_tutorial/contents.html</ref> (last
               accessed 1 January 2009).</bibl>
            <bibl xml:id="gomez2004" label="Gomez 2004" key="gomez2004"> Gomez, F. <title
                  rend="quotes">Grounding the ontology on the Semantic Interpretation
                  Algorithm.</title> In <title rend="italic">Proceedings of the Second Global
                  WordNet Conference, Brno, Czech Republic 2004</title>. pp.124–129.</bibl>
            <bibl xml:id="greimas1971" label="Greimas 1971" key="greimas1971"> Greimas, A. J. <title
                  rend="italic">Strukturale Semantik: methodologische Untersuchungen</title>.
               Braunschweig 1971.</bibl>
            <bibl xml:id="gruber1993" label="Gruber 1993" key="gruber1993"> Gruber, T. R. <title
                  rend="quotes">A translation approach to portable ontology specifications.</title>
               In <title rend="italic">Knowledge Acquisition</title>, 5(2): 199–221.</bibl>
            <bibl xml:id="haarslev2004" label="Haarslev et al. 2004" key="haarslev2004"> Haarslev,
               V., Möller, R., and Wessel, M. Querying the Semantic Web with Racer + nRQL.
               Proceedings of the KI-2004 International Workshop on Applications of Description
               Logics (ADL'04), Ulm, Germany, September 2004.</bibl>
            <bibl xml:id="halpern2005" label="Halpern 2005" key="halpern2005"> Halpern, J. Y. <title
                  rend="italic">Reasoning about uncertainty</title>. Cambridge, Mass: MIT
               Press.</bibl>
            <bibl xml:id="jannidis2004" label="Jannidis 2004" key="jannidis2004"> Jannidis, F.
                  <title rend="italic">Figur und Person - Beitrag zur historischen
                  Narratologie</title>. Walter de Gruyter, Berlin (2004).</bibl>
            <bibl xml:id="lungen2007" label="Lüngen 2007" key="lungen2007"> Lüngen, H. and Storrer,
               A. <title rend="quotes">Domain ontologies and wordnets in OWL: Modelling
                  options.</title> In <title rend="italic">Zeitschrift für Computerlinguistik und
                  Sprachtechnologie</title>, 22(2): 1–17.</bibl>
            <bibl xml:id="mccarty2005" label="McCarty 2005" key="mccarty2005"> McCarty, W. <title
                  rend="italic">Humanities Computing</title>. Palgrave Macmillan, London
               (2005).</bibl>
            <bibl xml:id="meister1999" label="Meister 1999" key="meister1999"> Meister, J. C.
               Jenseits von Lagado. <title rend="quotes">Literaturwissenschaftliches Programmieren
                  am Beispiel des Kodierungsprogramms Move Parser 3.1.</title> In Deubel, Volker;
               Eibl, Karl; Jannidis, Fotis (Hgg.): <title rend="italic">Jahrbuch für
                  Computerphilologie</title> 1. Paderborn 1999, 71-83.</bibl>
            <bibl xml:id="nardi2003" label="Nardi &amp; Brachman 2003" key="nardi2003"> Nardi, D.,
               Brachman, R. <title rend="quotes">An Introduction to Description Logics.</title> In
                  <title rend="italic">Description Logics Handbook</title>, Cambridge University
               Press, Cambridge (2003).</bibl>
            <bibl xml:id="nieragden1995" label="Nieragden 1995" key="nieragden1995"> Nieragden, G.
               Figurendarstellung im Roman: Eine narratologische Systematik am Beispiel von David
               Lodges Changing Places und Ian McEwans The Child in Time. Wissenschaftlicher Verlag
               Trier, Trier (1995).</bibl>
            <bibl xml:id="noy1997" label="Noy et al. 1997" key="noy1997"> Noy, N. F. and Hafner,
               C.D. The State of the Art in Ontology Design. In <title rend="italic">AI
                  Magazine</title> 18 (3) (1997). pp.53-74.</bibl>
            <bibl xml:id="noy2001" label="Noy et al. 2001" key="noy2001"> Noy, N. F. and McGuinness,
               D. L. Ontology Development 101: A Guide to Creating Your First ontology. Stanford
               Knowledge Systems Laboratory Technical Report KSL-01-05 and Stanford Medical
               Informatics Technical Report SMI-2001-0880, 2001. <ref
                  target="http://www-ksl.stanford.edu/people/dlm/papers/ontology-tutorial-noy-mcguinness.pdf"
                  >http://www-ksl.stanford.edu/people/dlm/papers/ontology-tutorial-noy-mcguinness.pdf</ref>
               (last accessed 1 January 2009).</bibl>
            <bibl xml:id="noy2003" label="Noy 2003" key="noy2003"> Noy, N. F. <title rend="quotes"
                  >Tools for Mapping and Merging Ontologies.</title> In <title rend="italic"
                  >Handbook on Ontologies</title>. Ed. Steffen Staab and Rudi Studer. Berlin 2003.
               pp.365-384.</bibl>
            <bibl xml:id="pl1991" label="Philosophie-Lexikon 1991" key="pl1991">
               Philosophie-Lexikon. A. Hügli and P. Lübcke (eds), Reinbek bei Hamburg (1991).</bibl>
            <bibl xml:id="propp1968" label="Propp 1968" key="propp1968"> Propp, V. <title
                  rend="italic">Morphology of the Folktale</title>. London 1968.</bibl>
            <bibl xml:id="puppe2000" label="Puppe et al. 2000" key="puppe2000"> Puppe, F., Stoyan,
               H., and Studer, R. Kapitel 15: Knowledge Engineering. In G. Görz, C.-L.Rollinger, and
               J. Schneeberger (eds), <title rend="italic">Handbuch der Künstlichen
                  Intelligenz</title>. Oldenbourg Verlag, München (2000), pp. 599–641.</bibl>
            <bibl xml:id="racer2005" label="Racer Systems 2005" key="racer2005"> Racer Systems
               RacerPro User’s Guide. <ref
                  target="http://www.racer-systems.com/products/racerpro/users-guide-1-9.pdf"
                  >http://www.racer-systems.com/products/racerpro/users-guide-1-9.pdf</ref> (last
               accessed 1 January 2009).</bibl>
            <bibl xml:id="renear2006" label="Renear et al 2006" key="renear2006a"> Renear, A. H.,
               Yunseon, C., Jin Ha, L., and Schmidt, S. Axiomatizing FRBR: An Exercise in the Formal
               Ontology of Cultural Objects. Proceedings of Digital Humanities 2006. Paris 2006. pp.
               164-170.</bibl>
            <bibl xml:id="shirky2005" label="Shirky 2005" key="shirky2005a"> Shirky, C. Ontology is
               Overrated: Categories, Links, and Tags. O'Reilly ETech conference. 2005.</bibl>
            <bibl xml:id="sirin2007" label="Sirin et al. 2007" key="sirin2007"> Sirin, E., Parsia,
               B. Cuenca Grau, B., Kalyanpur, A. and Katz, Y. Pellet: A practical OWL-DL reasoner.
                  <title rend="italic">Journal of Web Semantics</title>, 5(2), 2007. pp.
               51-53.</bibl>
            <bibl xml:id="smith2007" label="Smith 2007" key="smith2007"> Smith, D. C. P.
               Re-Discovering Wittgenstein. In: Proceedings of 30th International Wittgenstein
               Symposium, Kirchberg am Wechsel 2007. pp.208-210.</bibl>
            <bibl xml:id="stevens2000" label="Stevens et al. 2000" key="stevens2000"> Stevens, R,
               Goble, CA, and Bechhofer, S. Ontology-based knowledge representation for
               bioinformatics. Brief Bioinform. 2000; 1: 398-414.</bibl>
            <bibl xml:id="tsarkov2006" label="Tsarkov &amp; Horrocks 2006" key="tsarkov2006">
               Tsarkov, D. and Horrocks, I. FaCT++ Description Logic Reasoner: System Description.
               Proceedings of the International Joint Conference on Automated Reasoning (IJCAR 2006)
               Vol. 4130, Lecture Notes in Artificial Intelligence, Springer, Berlin (2006), pp.
               292–297.</bibl>
            <bibl xml:id="veltman2004" label="Veltman 2004" key="veltman2004"> Veltman, K. H. <title
                  rend="quotes">Towards a Semantic Web for Culture.</title>
               <title rend="italic">Journal of Digital Information</title>, 4 (4). <ref
                  target="http://journals.tdl.org/jodi/article/view/113"
                  >http://journals.tdl.org/jodi/article/view/113</ref> (last accessed 1 January
               2009).</bibl>
            <bibl xml:id="ziegler2004" label="Ziegler 2004" key="ziegler2004"> Ziegler, C. Surfende
               Maschinen. In <title rend="italic">Das XML-Kompendium</title>. Hannover (2004). pp.
               126-130.</bibl>
            <bibl xml:id="zw2006a" label="Zöllner-Weber 2006" key="zöllner-weber2006a"> Zöllner-Weber, A.
                  <title rend="quotes">Formale Repräsentation und Beschreibung von literarischen
                  Figuren.</title> In G. Braungart, P. Gendolla, and F. Jannidis (eds), <title
                  rend="italic">Jahrbuch für Computerphilologie 7</title>. mentis Verlag, Paderborn
               (2006), pp. 187–203.</bibl>
            <bibl xml:id="zw2006b" label="Zöllner-Weber &amp; Witt 2006" key="zöllner-weber2006b">
               Zöllner-Weber, A. and Witt, A. <title rend="quotes">Ontology for a Formal Description
                  of Literary Characters.</title> Proceedings of Digital Humanities 2006. Paris
               2006. pp. 350-352.</bibl>
            <bibl xml:id="zw2007a" label="Zöllner-Weber 2007" key="zöllner-weber2007a"> Zöllner-Weber, A.
                  <title rend="quotes">Noctua literaria - A System for a Formal Description of
                  Literary Characters.</title> In G. Rehm, A. Witt, A., and L. Lemnitzer (eds),
                  <title rend="italic">Data Structures for Linguistic Resources and
                  Applications</title>. Tübingen (2007). pp.113-121.</bibl>
            <bibl xml:id="zw2007b" label="Zöllner-Weber &amp; Pichler 2007" key="zöllner-weber2007b">
               Zöllner-Weber, A. and Pichler, A. <title rend="quotes">Utilizing OWL for
                  Wittgenstein's Tractatus.</title> 30th International Wittgenstein Symposium.
               Kirchberg am Wechsel 2007. pp.248-250.</bibl>
            <bibl xml:id="zw2008" label="Zöllner-Weber &amp; Apollon 2008" key="zöllner-weber2008">
               Zöllner-Weber, A. and Apollon, D. <title rend="quotes">The Challenge of Modelling
                  Information and Data in the Humanities.</title> In <title rend="italic"
                  >Proceedings of the International Conference on Explorations of new Spaces,
                  Relations and Dynamics in Digital Media Ecologies</title>. Innsbruck: Innsbruck
               University Press 2008.</bibl>
         </listBibl>
      </back>
   </text>
</TEI>
