<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="../../common/schema/DHQauthor-TEI.rng" type="xml"?>
<?oxygen SCHSchema="../../common/schema/dhqTEI-ready.sch"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:cc="http://web.resource.org/cc/"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:dhq="http://www.digitalhumanities.org/ns/dhq"
   xmlns:mml="http://www.w3.org/1998/Math/MathML">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <!--Author should supply the title and personal information-->
            <title type="article" xml:lang="en"><!--article title in English-->Minimal Computing
               from the Labor Perspective </title>
            <!--Add a <title> with appropriate @xml:lang for articles in languages other than English-->
            <dhq:authorInfo>
               <!--Include a separate <dhq:authorInfo> element for each author-->
               <dhq:author_name>Tiffany <dhq:family>Chan</dhq:family>
               </dhq:author_name>
               <!--<idno type="ORCID"
                  ><!-\-if the author has an ORCID ID, include the full URI, e.g. https://orcid.org/0000-0000-0000-0000-\-></idno>-->
               <dhq:affiliation>University of Victoria Libraries</dhq:affiliation>
               <email>tjychan@uvic.ca</email>
               <dhq:bio>
                  <p>Tiffany Chan has an MA degree in English Literature from the University of
                     Victoria. She is a Senior Developer/Analyst (Digital Scholarship) at the
                     University of Victoria Libraries.</p>
               </dhq:bio>
            </dhq:authorInfo>
            <dhq:authorInfo>
               <!--Include a separate <dhq:authorInfo> element for each author-->
               <dhq:author_name>Jentery <dhq:family>Sayers</dhq:family>
               </dhq:author_name>
               <idno type="ORCID"
                  ><!--if the author has an ORCID ID, include the full URI, e.g. https://orcid.org/0000-0000-0000-0000-->https://orcid.org/0000-0002-7181-1703</idno>
               <dhq:affiliation>University of Victoria</dhq:affiliation>
               <email>jentery@uvic.ca</email>
               <dhq:bio>
                  <p>Jentery Sayers is an associate professor of English and the director of the
                     Praxis Studio for Comparative Media Studies at the University of Victoria. </p>
               </dhq:bio>
            </dhq:authorInfo>
         </titleStmt>
         <publicationStmt>
            <publisher>Alliance of Digital Humanities Organizations</publisher>
            <publisher>Association for Computers and the Humanities</publisher>
            <!--This information will be completed at publication-->
            <idno type="DHQarticle-id"><!--including leading zeroes: e.g. 000110-->000600</idno>
            <idno type="volume"
               ><!--volume number, with leading zeroes as needed to make 3 digits: e.g. 006-->016</idno>
            <idno type="issue"><!--issue number, without leading zeroes: e.g. 2-->2</idno>
         	<date when="2022-06-25">25 June 2022</date>
            <dhq:articleType>article</dhq:articleType>
            <availability status="CC-BY-ND">
               <!--If using a different license from the default, choose one of the following:
                  CC-BY-ND (DHQ default):        
                  CC-BY:    
                  CC0:  -->
               <cc:License rdf:about="http://creativecommons.org/licenses/by-nd/2.5/"/>
            </availability>
         </publicationStmt>
         <sourceDesc>
            <p>This is the source</p>
         </sourceDesc>
      </fileDesc>
      <encodingDesc>
         <classDecl>
            <taxonomy xml:id="dhq_keywords">
               <bibl>DHQ classification scheme; full list available at <ref
                     target="http://www.digitalhumanities.org/dhq/taxonomy.xml"
                     >http://www.digitalhumanities.org/dhq/taxonomy.xml</ref>
               </bibl>
            </taxonomy>
            <taxonomy xml:id="authorial_keywords">
               <bibl>Keywords supplied by author; no controlled vocabulary</bibl>
            </taxonomy>
         </classDecl>
      </encodingDesc>
      <profileDesc>
         <langUsage>
            <language ident="en" extent="original"/>
            <!--add <language> with appropriate @ident for any additional languages-->
         </langUsage>
         <textClass>
            <keywords scheme="#dhq_keywords">
               <!--Authors may suggest one or more keywords from the DHQ keyword list, visible at http://www.digitalhumanities.org/dhq/taxonomy.xml; these may be supplemented or modified by DHQ editors-->
               <list type="simple">
                  <item/>
               </list>
            </keywords>
            <keywords scheme="#authorial_keywords">
               <!--Authors may include one or more keywords of their choice-->
               <list type="simple">
                  <item/>
               </list>
            </keywords>
         </textClass>
      </profileDesc>
      <revisionDesc>
         <!--Each change should include @who and @when as well as a brief note on what was done.-->
         <change when="2022-08-02" who="BRG">added teaser and resolved encoding errors</change>
      </revisionDesc>
   </teiHeader>
   <text xml:lang="en" type="original">
      <front>
         <dhq:abstract>
            <!--Include a brief abstract of the article-->
            <p>The process of making digital objects available and discoverable demands a great deal
               of labor, from digitization, to creating metadata, to preservation, to importing it
               into a digital asset management system, and finally to presenting it. We begin this
               essay with a case study of one such system, called <q>Vault,</q> in the University of
               Victoria Libraries, and the work required to migrate from a Software as a Service
               (SAAS) model (called ContentDM) to a free and open-source software (FOSS) model (a
               customized instance of Samvera).</p>

            <p>Vault illustrates what we call <quote rend="inline">minimal computing from the labor
                  perspective,</quote> which seeks to reduce the opacity of software through
                  <q>low-tech</q> practices such as pseudocode, thereby reducing the alienation of
               practitioners from their projects. Drawing from feminist ecological work on
               capitalism, affective labor, and care, we advocate for the <q>degrowth</q> of digital
               projects by resisting tendencies to reinvest surplus labor and value into increased
               productivity. Instead, degrowth as minimal computing prompts practitioners to
               articulate a project’s needs and desires; what work is required and from whom; and
               how or whether to sustain this labor for the future.</p>
         </dhq:abstract>
         <dhq:teaser>
            <!--Include a brief teaser, no more than a phrase or a single sentence-->
            <p>A brief exploration of Vault, a digital asset management system, and how it
               illustrates minimal computing from the labor perspective.</p>
         </dhq:teaser>
      </front>
      <body>
         <div>
            <head/>
            <p>For some practitioners, research begins in library collections or archives at the
               moment of contact with an object of interest. In the case of digital objects, this
               encounter is usually mediated by a digital asset management system. Although screens
               afford the allure of immediacy, the process of making digital objects available and
               discoverable demands a great deal of labor, from digitizing a physical object to
               creating metadata, to maintaining the object, to importing it into the system, and
               finally to presenting it.</p>
            <p>We begin this essay with a case study of one such digital asset management system,
               called <q>Vault,</q> in the University of Victoria Libraries, and we focus on the
               work required to not only keep it running but also advance the migration process from
               Software as a Service (SAAS)<note>
                  <q>Software as a Service</q> is a business model where a vendor owns and deploys
                  software from a centralized server (such as a cloud server) and customers
                  subscribe to that service for a recurring fee <ptr
                     target="#dictionaryofcomputerscience2016b"/>
                  <ptr target="#dictionaryofist2013a"/>. Examples of SAAS include Adobe Creative
                  Suite, Netflix, and Amazon Web Services.</note> to free and open-source software
                  (FOSS).<note> Free and Open Source Software, or Free/Libre Open-Source Software
                  (FLOSS), encompasses software that anyone (with expertise) is <q>free</q> to
                  obtain, modify, and/or redistribute. Often, software based on FOSS must also be
                  distributed with the same free license as the original <ptr
                     target="#dictionaryofist2013a"/>. Open-source software stems from the belief
                  that <quote rend="inline">widespread inspection, modification, and correction of
                     the source code</quote> by interested parties fosters high quality software
                     <ptr target="#dictionaryofist2013a"/>. For a historical perspective on the FOSS
                  movement, see <ptr target="#jullien2009"/>.</note> Vault does not seem like a
               typical minimal computing project. It it does not involve a static site generator,
               small single-board computer, or lightweight markup language; nor does it espouse a
               minimalist aesthetic. Yet it does inform and enact what we call <quote rend="inline"
                  >minimal computing from the labor perspective,</quote> which seeks to
                  <q>degrow</q> digital projects. </p>
            <p>Here, our use of <q>degrow</q> corresponds with ongoing feminist ecological work on
               capitalism, labor, and care <ptr target="#barca2019"/>
               <ptr target="#akbulut2017"/>. For these scholars, particularly Stefania Barca and
               Bengi Akbulut, degrowth <quote rend="inline">ultimately means eliminating the
                  productive reinvestment of surplus value</quote>
               <ptr target="#barca2019" loc="208"/>. For us, degrowth in the context of computing —
               or degrowth <emph>as </emph>minimal computing — prompts people to articulate what
               they need or want from a project, what work is required when, and who will do that
               work, all without appealing to increased efficiency or productivity. Minimal
               computing from a labor perspective is thus first and foremost about social relations
               between people, projects, and labor before minimalism is reified into a form,
               technique, tool, or feature. Practically, it defines an explicit endpoint to resist
               scope creep and potentially endless maintenance. Politically, it acknowledges and
               seeks to address power structures in claims to minimalism, including the hierarchies
               of labor they entail. In the following study of Vault, for example, we discuss how
               software maintenance resists binaries of masculinized programming culture (“real”
               technical labor) and feminized carework (devalued organizational or affective labor).
               Finally, there is a design angle to the labor perspective, whereby minimal computing
               reduces the opacity of digital projects to make labor apparent. Through methods such
               as annotation and pseudocode,<note> Pseudocode comprises natural language (such as
                  English) statements mixed with the structure of code elements (such as if/then
                  conditional statements or loops). Although pseudocode may mimic instructions, it
                  is meant for human interpretation and not machine execution <ptr
                     target="#dictionaryofcomputerscience2016a"/>.</note> it demonstrates out how
               computation transforms objects and information, and it demystifies projects to avoid
               proverbial black boxes. As is the case with Vault, minimal computing from the labor
               perspective eschews SAAS in favor of FOSS while recognizing and supporting the
               everyday labor demanded by the latter. </p>
            <p>Taken together, these practical, political, and design approaches to digital projects
               speak to the primary aim of minimal computing from the labor perspective: to degrow
               computation’s alienation of practitioners from their own projects and from social
               organization and collective expertise. Rather than asserting this perspective and
               then applying it to examples, we begin with Chan’s argument, based on experience,
               which describes the conditions and practices that gave rise to Vault and her
               contributions to it. From there, we extrapolate lessons from Vault to further define
               and historicize minimal computing from the labor perspective and outline its real and
               potential effects on the habits, cultures, and values of computing. </p>
         </div>
         <div>
            <head>Case Study: Vault at the University of Victoria </head>
            <p>I am one of two developers at University of Victoria Libraries (<q>Libraries</q>) who
               knows and uses Ruby on Rails.<note>
                  <q>I</q> here and throughout this article is Tiffany Chan.</note> Ruby is a
               general-purpose programming language akin to Python, while Rails is a server-side
               framework for building web applications with Ruby. I am responsible for developing
               and maintaining Vault, <note> For more about Vault, see <ref
                     target="vault.library.uvic.ca/">vault.library.uvic.ca</ref> or the code
                  repository at <ref target="http://github.com/UVicLibrary/Vault"
                     >http://github.com/UVicLibrary/Vault</ref>.</note> which is the Libraries’
               asset management system. Written in Ruby on Rails, Vault is a custom instance of
               Samvera’s open-source repository software Hyku. It is further part of a multi-year,
               collaborative effort unfolding across occupations and groups within the Libraries,
               including digitization (Page DeWolfe, Leanne Gibbs, and Kathy Mercer), metadata and
               cataloging (Karen Dykes, Dean Seeman, Maggie Tan, and Shelley Coulombe), software
               development (Braydon Justice, Ethan Getty, and me), library systems (John Durno), and
               digital scholarship and strategy (Lisa Goddard and J. Matthew Huculak). Importantly,
               Vault is not the first platform the Libraries have used for asset management. Like
               most platforms, it arrived in the middle of our work at the University of Victoria
               (UVic), after we used the CONTENTdm software. </p>
            <p>Changing platforms from CONTENTdm to Vault will gradually increase public access to
               the Libraries’ collections by reducing UVic’s use of proprietary software.<note>
                  Jentery Sayers defines this aspect of minimal computing as <q>maximum access</q>:
                     <quote rend="inline">reduc[ing] the use of proprietary technologies and
                     paywalls to increase access to content, data, and/or source files</quote>
                  <ptr target="#sayers2016"/>.</note> This aspect of Vault aligns with some goals of
               the FOSS movement, where people <quote rend="inline">have the freedom to run, copy,
                  distribute, study, change, and improve the software</quote>
               <ptr target="#gnu2021"/>. There is also a keen appetite among libraries and other
               memory institutions for open-source platforms. The list of Samvera adopters, for
               example, contains 485 organizations, including many university and college libraries
               as well as high-profile organizations such as the British Library and the Electronic
               Literature Organization <ptr target="#colvard2021"/>. That number will likely
               increase; several institutions recently reported migrating from CONTENTdm to
               open-source repositories, and many institutions worldwide are facing a major
               open-source repository upgrade from Fedora 3 to Fedora 4-6 <ptr target="#dohe2019"/>
               <ptr target="#hardesty2019"/>. </p>
            <p>At the Libraries, switching from CONTENTdm to Vault will also help to reduce SAAS
               costs; however, implementing open-source software, and implementing it well, is
               obviously not free.<note> For more on migrating from CONTENTdm, see Amanda Mita et
                  al., who <quote rend="inline">provide a feasible workflow for breaking with
                     CONTENTdm and strategies for modifying alternative systems to accommodate
                     archival digital collections</quote>
                  <ptr target="#mita2018"/>. See also Heather Gilbert and Tyler Mobley’s description
                  of <q>breaking up</q> with CONTENTdm <ptr target="#gilbert2013"/>. </note> When
               choosing between SAAS and FOSS, each institution should take into account their own
               needs, resources, and local contexts. One cost that institutions might have to bear
               for complex, server-side FOSS platforms is the infrastructure that supports software.
               They may also have to pay internal or external developers to develop, maintain,
               and/or migrate data to their instance of that software, and software localization may
               pose challenges in the process. When developers have to update FOSS, no automatic
               patch, built-in support, or documentation may exist for custom features designed for
               a particular institution. Developers such as myself thus consider each feature on a
               case-by-case basis to determine the best way to port the functionality from one
               version to the next. Sometimes this process is relatively simple (e.g., copy and
               pasting code that other developers have already tested), but it can also be very
               laborious. </p>
            <p>Although maintenance is rarely discussed in research and academic publications, it is
               part of the routine work and decision-making processes in memory institutions such as
               the Libraries.<note> Discussions of maintenance in <title rend="italic">Digital
                     Humanities Quarterly </title>include <ptr target="#engel2018"/>
                  <ptr target="#gold2009"/>
                  <ptr target="#kretzschmar2009"/>
                  <ptr target="#smithies2011"/>
                  <ptr target="#wernimont2013"/>. Drawing from <ptr target="#lientz1980"/>, Nicolas
                  Gold writes about costs: <quote rend="inline">Although much emphasis is placed on
                     the delivery of new systems, the maintenance of existing software consumes at
                     least 50% of the lifetime cost of a software system</quote>
                  <ptr target="#gold2009"/>. William Kretzschmar underscores the relationship
                  between maintenance and funding: <quote rend="inline">The largest humanities
                     computing projects are likely to require continuing care and maintenance, if
                     not more radical representation and reinterpretation in light of the advance of
                     scholarship, and yet they seem unlikely ever to be funded comprehensively for
                     these tasks. The best way forward is to create some sort of stable
                     institutional setting for large projects that will provide continuity and
                     baseline resources for the work</quote>
                  <ptr target="#kretzschmar2009"/>. Meanwhile, James Smithies writes about
                  methodologies: <quote rend="inline">We are only just beginning to find processes
                     that will genuinely assist our software engineering tasks. There are now a
                     handful of broadly accepted methodologies that claim [to]⁠ — and generally do⁠
                     — make the task of software engineering and maintenance easier (RUP, AGILE,
                     PRINCE 2, ITIL), but few organisations have either the will or the means to
                     deploy these approaches in a ‘purist’ sense</quote>
                  <ptr target="#smithies2011"/>. Jacqueline Wernimont engages maintenance, labor,
                  and funding via intersectional feminism and work by women: <quote rend="inline"
                     >Both [Women Writers Online] and Orlando depend on scholarly collaboration to
                     create and maintain their materials. At this point in most digital scholarly
                     projects, collaboration is happening between a small set of trained graduate
                     students, faculty, and IT and library staff. This is often due to a complex
                     nexus of concerns, including interest, scholarly expectations, expertise, and
                     where funding and labor cycles are consistently available</quote>
                  <ptr target="#wernimont2013"/>. </note> It also points to palpable contradictions
               at play within project design and development, where increasing access may not reduce
               the labor of maintenance.<note> Sayers defines this aspect of minimal computing as
                     <q>minimal maintenance,</q> or <quote rend="inline">reduc[ing] dependencies and
                     the use of features to decrease the labor of updating, moderating, and
                     stewarding a project over time</quote>
                  <ptr target="#sayers2016"/>.</note> Such tensions assert themselves when projects
               and institutions have limited staff and faculty, are underfunded and under-resourced,
               and/or face significant material constraints. Kate Dohe observes that open-source
               software initiatives are mostly dominated by wealthy, historically white institutions
               and are still relatively opaque to non-specialists <ptr target="#dohe2019"/>. She
               adds that this disparity is compounded by tensions between the masculinized
               micro-culture of software development and the feminized library workforce. <quote
                  rend="inline">The end result,</quote> Dohe declares, is <quote rend="inline">elite
                  institutions making products for other elite institutions, and every year the
                  technical and economic barriers to entry grow higher</quote>
               <ptr target="#dohe2019"/>. If libraries strive to support and customize software, and
               they recognize, as Samvera’s development team does, that contradictions between
               support and customization are the rule of, rather than the exception to, product and
               service design, then we must ask who can afford to develop and maintain FOSS <ptr
                  target="#frost2015"/>.<note> For its part, Samvera has taken steps to make its
                  community more welcoming, including creating a code of conduct, anti-harassment
                  policy, and an incident response team <ptr target="#samvera2021"/>. Additionally,
                  the Samvera Branch Renaming Working Group has renamed the <q>master</q> branch of
                  their GitHub repositories (i.e., the default or core version of their code) to
                     <q>main.</q> The former term, often used in coding jargon with “slave,” both
                  originates from and perpetuates racist language. See <ref
                     target="https://groups.google.com/g/samvera-community/c/pbKs4nj5gBU"
                     >https://groups.google.com/g/samvera-community/c/pbKs4nj5gBU</ref> for
                  more.</note>
            </p>
            <p>While Hyku may be more transparent than CONTENTdm, the technical expertise required
               to read or write its code nevertheless creates barriers to participation that
               existing governance structures often exacerbate <ptr target="#dohe2019"/>. For
               instance, one piece of software is composed of many different components working in
               concert. In the case of Vault, those components include Fedora 4 (repository
               software), Blacklight (discovery service), Solr (indexing software), and the
               International Image Interoperability Framework (IIIF), among others. </p>

            <figure>
               <head>A diagram of components in Samvera’s digital repository software. For more, see
                     <ref
                     target="https://samvera.org/samvera-open-source-repository-framework/technology-stack/"
                     >https://samvera.org/samvera-open-source-repository-framework/technology-stack/</ref>.</head>
               <graphic url="resources/images/image1.png"/>
               <figDesc>image of a diagram</figDesc>
            </figure>

            <p>My typical day can involve working with three to six types of code, depending on the
               task and how <q>code</q> is defined. Coding a single web page for Vault requires
               knowledge of HTML (the marked-up content of the page), CSS (the style or display),
               JavaScript (animation and interface elements), and Ruby on Rails (the page
               interacting with the server or database). Each of these languages has its own syntax
               and quirks while also relying or building on other languages. Programming a simple
               hide/show animation in JavaScript, for example, requires knowing which HTML element
               to animate — an element I will likely mark with a CSS selector or class before
               passing it into JavaScript. A task that may at the outset appear simple requires
               familiarity with three different languages that, in turn, require a non-trivial
               amount of time and labor to learn. The difficulties of this work are compounded when
               people are not compensated or supported for developing technical expertise, or where
               a lack of resources or staff means one person must juggle many separate tasks in
               addition to debugging software.</p>

            <p>Errors and error messages are, like maintenance, largely ignored in broader
               discussions of technological innovation and software, except in minute conversations
               between developers or as lingering comment threads in forums such as Stack
                  Overflow.<note> For more on errors and maintenance, see Adam Barr’s <title
                     rend="italic">The Problem with Software: Why Smart Engineers Write Bad Code
                  </title>(2018). Barr includes a history of software engineering (1960s through the
                  1980s) and stresses a split between post-secondary education, where students write
                  small pieces of software, and industry, where people design and maintain large
                  pieces of software. Building on work by <ptr target="#dijkstra1972"/> and <ptr
                     target="#knuth1974"/>, he draws a distinction between the performance and
                  design of software, noting how software written to perform well may actually
                  require more maintenance <ptr target="#barr2018"/>. An emphasis on optimizing a
                  project now ignores long-term issues, such as when groups will need to fix and
                  update code. </note> They are unplanned interruptions and undesirable hiccups in
               the <q>seamless</q> experience of technology, and they are mostly forgotten as soon
               as a problem is fixed and an error disappears. But they are also ubiquitous, not to
               mention fundamental, to the composition of code and the maintenance of software such
               as Vault. Errors highlight the messiness of migration, localization, and upkeep. They
               emphasize how code resists exact or straightforward replication over time or across
               platforms. Although some code can be reused, people still need to modify it to fit a
               different context (e.g., renaming variables), match changes elsewhere in the software
               (e.g., updating to a code module needed for an existing application), or accommodate
               an unexpected edge case (e.g., data that does not easily fit within an existing
               database schema and thus requires an update to that database’s structure). Other
               common maintenance and debugging issues I might anticipate during a project like
               Vault include typos or syntax errors, libraries deprecated for performance issues or
               security vulnerabilities, adding or deleting columns in a database, cascading errors
               introduced by a bug fix, reference errors, or⁠ — worst of all — code that fails
               silently, without any indication of where the problem may be. Such errors are in fact
               so common they become banal, at least for developers.<note> Consider a simple example
                  of a software error written in JavaScript, as typed into an interactive console in
                  the Chrome browser (the first two lines are from the programmer and the last is a
                  reply from the computer):<lb/>
                  <eg lang="javascript">var test = 4 tst + 6 Uncaught ReferenceError: tst is not
                     Error: "tst" was not defined defined at &lt;anonymous&gt;:1:1 </eg>
                  <lb/> Pseudocode:<lb/>
                  <eg lang="code-general">Create an entity called "test" that has the value 4. What
                     is tst plus 6 equal to? (I don't know what "tst" is)</eg><lb/> In the example
                  above, someone might reasonably guess that <q>tst</q> is a misspelling of
                     <q>test</q> and therefore that <code>tst + 6</code> should equal 10. But the
                  computer in this scenario has labelled this a reference error because the computer
                  assumes there is an entity <q>tst</q> to which the programmer has forgotten to
                  assign a value. By the computer’s understanding, the programmer is referring to
                  something that does not exist. This is a very simplified version of a
                  miscommunication, but it demonstrates how the assumptions people and machines make
                  are not necessarily identical. Is <q>tst</q> a misspelling of a variable
                     <q>test,</q> or is it a variable on its own? In this scenario, if not generally
                  speaking, computers do not tolerate ambiguity well; they rely on and require both
                  assistance and interpretation.</note>
            </p>
            <p>Software development is associated mostly with writing new code; however, in practice
               I work with non-functioning code — that is, code that does not operate how my
               colleagues or I want or expect it to — as often as I do with functioning code. And I
               am not alone. Nathan Ensmenger notes that software maintenance is <quote
                  rend="inline">the single most time consuming and expensive phase of [software]
                  development,</quote> representing 50-70% of total expenditures from the early
               1960s to 2014 <ptr target="#ensmenger2014" loc="2"/>. Code is in constant need of
               repair. As Ensmenger declares, <quote rend="inline">All software has bugs; the
                  question is simply whether [or] not they are known, and the degree to which they
                  affect the general consensus on whether or not the software is ‘working’</quote>
               <ptr target="#ensmenger2014" loc="4"/>. Ensmenger’s statement echoes research in
               maintenance studies that stresses the necessary but invisible and devalued acts of
               care and repair performed by people who keep the machine running <ptr
                  target="#rosner2014"/>
               <ptr target="#jackson2014"/>
               <ptr target="#chachra2015"/>
               <ptr target="#mattern2018"/>.</p>
            <p>The development and maintenance of Vault, like research across maintenance studies,
               demonstrates quite clearly why code is not <emph>logos</emph>, or the one true <quote
                  rend="inline">source [or] . . . representation of action</quote>: something that
               simply works, untouched by the messy world of people and things <ptr
                  target="#chun2013" loc="19"/>. As Wendy Hui Kyong Chun argues in <title
                  rend="italic">Programmed Visions</title>, fetishizing source code frames it as a
               seamless set of instructions that propel execution without regard for the many
               systems, agents, and social relationships in between <ptr target="#chun2013"/>. Chun
               writes, <quote rend="inline">[Fetishization] assumes no difference between source
                  code and execution, between instruction and result</quote>
               <ptr target="#chun2013" loc="21"/>. If code requires constant maintenance, then it
               cannot stand as a monolithic <q>enclosed object</q> — not only since it is always
               breaking down, but also because it is deeply enmeshed in social and material
               relations that enable it to run and continue running <ptr target="#chun2013" loc="54"
               />. As Ensmenger puts it, <quote rend="inline">software . . . is like a contract, a
                  constitution, or a covenant</quote> under constant revision and negotiation <ptr
                  target="#ensmenger2014" loc="11"/>. It is <quote rend="inline">history,
                  organization, and social relationships made tangible</quote>
               <ptr target="#ensmenger2014" loc="11"/>, especially under the SAAS paradigm, where
               everything from networking and storage to applications and data may be hosted and
               managed remotely by a company or organization. This arrangement means SAAS customers
               usually play little to no role in programming and maintenance decisions related to
               access, discovery, search, metadata, customization, and the storage limits of their
               project. They are <emph>here</emph>, and software is <emph>there</emph>. The irony,
               then, is that the consequences of code as <emph>contract</emph> may not differ
               significantly from the consequences of code as <emph>logos</emph>. While they operate
               under distinct assumptions⁠ — <q>code does what it says</q> versus <q>code is a
                  service</q> — both isolate code from social dimensions of its workflow. Projects
               such as Vault and Hyku may be understood as a response, if not a corrective, to this
               isolation. With them comes increased, localized attention to the contingencies of
               code: software moves from <emph>there</emph> to <emph>here</emph>. </p>
            <p>As Vault demonstrates, code and software are contingent on the needs of the
               Libraries’ catalogers. Responding to those needs, Justice and I implemented a
               CONTENTdm migrator tool, which lets catalogers map metadata terms from one system to
               another before exporting CONTENTdm data to a comma-separated values (CSV) file with a
               row for each item and its metadata. Importantly, each row contains a file path to the
               digital object that the metadata describes so Vault can link them together. After
               refining the CSV, catalogers upload it to Vault. Vault parses the CSV, ingests both
               the metadata and objects, and performs various other tasks, such as indexing metadata
               or creating thumbnails. Previously, an empty file path in the CSV would cause the
               entire batch upload job to fail without any notification to the uploader. So, based
               on feedback, Justice and I also implemented a file path checker tool that determines
               whether a file actually exists at the path indicated before Vault tries to import the
               object or metadata. The path checker then prints a list of empty paths for catalogers
               to correct. Accurately typing long file paths is often difficult and frustrating for
               people, especially if they are accustomed to graphical interfaces or different
               operating systems (for instance, Linux paths use forward slashes while Windows paths
               use backslashes). During the migration and localization processes, the Libraries are
               able to address some of these difficulties and frustrations through customization by
               way of automation, which may not be available to SAAS customers. </p>
            <p>Vault’s features are also contingent on what the Libraries do not need or choose to
               avoid. Justice removed Hyku’s built-in notifications feature to decrease the number
               of internal system requests, which impede server performance. To restrict access, he
               also removed the option to register for an account without an explicit invitation
               from an administrator. I included an option for the Libraries to allow people who are
               not affiliated with UVic to view an item without being able to download it. Hyku’s
               default settings coupled <q>viewable</q> with <q>downloadable,</q> but the Libraries
               needed to restrict downloads for items that are in copyright or have protocols
               governing their use. These sorts of customizations fall under the broader umbrella of
               maintenance as they not only speak to the ongoing, local needs of the Libraries but
               also affect, or cascade across, Vault as a whole over time. Although they are quite
               technical in the particular cases of programming and debugging, they need to be
               communicated more generally to everyone in the Libraries who relies on Vault.
               Otherwise, code and software are once again isolated from who and what keep them
               running.</p>
            <p>Pseudocode, or an informal description of how a computer program operates, is useful
               for such translation practices, and for instilling a sense of trust when labor is
               divided and individuals contribute only to specific parts of a platform based on
               their roles within the Libraries. Consider an example based on writing a Ruby on
               Rails web application (<q>app</q>). When digitizing objects such as periodicals or
               books for archiving purposes, the Libraries’ digitization team scans each page as a
               .tiff image (Tagged Image File Format, or <q>TIFF</q>) at about 600 dots per inch
               (DPI) and a file size of hundreds of megabytes each. However, people who access the
               Libraries’ collections may prefer to view these images as .pdf documents (Portable
               Document Format, or <q>PDF</q>) in which every image is a page. Justice, Greg
               Lanning, and I begin by talking with the Libraries’ digitization unit about which
               Ruby functions and features may help to address this issue of format needs and
               preferences. Then the three of us compile a list of specifications, written in rather
               plain language. The list may look something like this:</p>
            <list type="unordered">
               <item>People will select a folder of TIFFs (through a dialog box) on a shared library
                  storage drive for conversion. </item>
               <item>The app will ignore all non-TIFF files in this folder.</item>
               <item>The app will check the DPI of each TIFF, print a warning if the TIFF is under
                  600 DPI, and resample the TIFF to 600 if it is above 600 DPI. </item>
               <item>The resulting PDF will be linearized or “web-ready.”</item>
               <item>Up to four people should be able to use the app at the same time.</item>
            </list>
            <p>This imagined app considers the fact that converting the TIFFs to a linearized PDF is
               a time-consuming task that cannot be done easily through a graphical user interface
               (GUI). Even proprietary software such as Adobe Acrobat, which allows for some
               automatic conversion, will crash when given a significant number of high-quality,
               information-dense image files. And so, rather than jumping immediately into the Adobe
               Creative suite, I begin writing pseudocode for the Libraries. </p>
            <p>Pseudocode enables me to draft code as a series of actions the code will perform. To
               increase accessibility and bypass assumptions of shared technical language, I write
               in prose instead of code. <q>Linearize the PDF</q> would, for example, be expressed
               in Ruby as <code> `qpdf #{input_pdf_name} — linearize #{output_pdf_name}`</code>.
               Here is sample pseudocode for the specifications list above: </p>
            <list type="ordered">
               <item>Take a folder containing TIFFs as the input.</item>
               <item>Create a list of TIFF files to convert.</item>
               <item>Check the DPI of each TIFF and resample, do nothing, or print a warning if
                  necessary.</item>
               <item>Convert each TIFF to a PDF.</item>
               <item>Combine all the PDFs (in the correct order) into one PDF file. </item>
               <item>Linearize the PDF and save it somewhere. </item>
               <item>Notify the user when the process is done and allow them to download the PDF.
               </item>
            </list>
            <p>Pseudocode is important for describing what a project should or must do without
               becoming tangled in the particular syntax of a programming language. As intellectual
               work, it helps practitioners to clarify what they need and how to judge whether, how,
               or to what degree a resulting program succeeds. It is also advantageous from a
               maintenance perspective because the potential for error in digitization projects is
               high, and it is far easier to debug a small program (in terms of number of lines)
               than a large one. By avoiding resource-heavy interfaces and scope creep, and by
               adding complexity incrementally and only when necessary, the Libraries can thoroughly
               test one part of a program and confirm it is working before moving to another feature
               or function of Vault. </p>
            <p>Along the way, I may use a “low-tech,” non-GUI interface such as a text editor,
               command line, or interactive shell or console called a Read-Eval-Print-Loop (REPL)
               when composing code. I may also draw or sketch a workflow on paper before touching a
               keyboard. Such interfaces narrow attention and tend to reduce complexity when testing
               and debugging. They focus the work on describing details concretely. What functions
               are needed? What do those functions need — which data types, variables, or
               parameters? What are some errors that could occur? What alternative functions or
               workarounds exist if initial attempts fail? What information is needed from people,
               and what can be provided, calculated, or expressed by the computer? If the Libraries
               are creating profiles in Vault, for example, do we need a person’s first or last name
               or email address? Where and how will this data be stored, used, displayed, and
               retrieved?</p>
            <p>After writing preliminary pseudocode, I build these steps using logical statements —
               such as if/then clauses or loops — to guide the computer in its decision-making
               process. If/then statements are like forks in the road: they describe two (or more)
               conditions that a computer calculates and pair each condition with a specific action
               the computer will take if the corresponding condition is met. Loops are repeated or
               repeatable if/then statements. They say, <quote rend="inline">As long as condition X
                  is met, repeat action Y.</quote> For instance, I can loop through a list of files
               in a folder (<quote rend="inline">for every file . . .</quote>). Here is the revised
               pseudocode for the TIFF-to-PDF conversion process, including if/then statements and
               loops:</p>
            <list type="ordered">
               <item>Take a folder containing TIFFs as the input. The function needs a parameter or
                  argument: the folder’s name. This name must be unique and unambiguous.</item>
               <item>Create a list of TIFF files to convert based on the folder’s contents. For
                  every file:<list type="ordered">
                     <item>If the file is a TIFF, then add it to a list of TIFFs. </item>
                     <item>If the file is not a TIFF, then ignore it.</item>
                  </list>
               </item>
               <item>For every TIFF in the list, check the DPI of that file.<list type="ordered">
                     <item>If the DPI is over 600, then resample it to 600 DPI.</item>
                     <item>If the DPI is equal to 600, then continue to the next file. </item>
                     <item>If the DPI is under 600, then warn the user but keep the file in the list
                        for conversion. </item>
                  </list>
               </item>
               <item>Convert each TIFF file to a PDF file. </item>
               <item>Combine all the PDFs (in alphabetical order based on the TIFF’s original
                  filename) into one big PDF. Each PDF becomes a page of the resulting PDF.</item>
               <item>Linearize the PDF and save it in a folder for download.</item>
               <item>Email the user with a link to the PDF when the process is done. </item>
            </list>
            <p>After I create a pseudocode roadmap for my app, I begin to translate it into Ruby on
               Rails. Ruby contains a number of built-in methods: algorithms that transform some
               input into an output. Where possible, I look for these built-in methods as well as
               external code libraries (called <q>gems</q> in Ruby) to achieve common programming
               tasks such as creating, moving, or removing files. This step avoids reinventing the
               wheel. Why write code entirely from scratch if someone else has already created an
               effective approach to the problem? In some cases, writing code entirely from scratch
               is not reasonable. When converting a TIFF into a PDF, for example, I would have to
               know the byte-by-byte values of image headers (data placed at the beginning of a file
               that tells a viewer to parse or interpret the file as a TIFF) and replace them with
               PDF headers, all without corrupting the content of the file itself. In this scenario,
               programmers usually rely on image manipulation libraries, such as ImageMagick, for
               conversion. Offloading the task in this way would allow me to concentrate on the
               scope of the app I am writing. It also saves me significant time and labor in the
               short term. Yet shortcuts like ImageMagick depend on external code not written or
               hosted by the Libraries. The use of such dependencies as part of Vault may therefore
               be vulnerable to obsolescence or deprecation, thus yet another tension at play in
               project maintenance. A desire to reduce the complexity of code conflicts with another
               desire to reduce dependencies and maximize a project’s persistence. Such tensions
               are, for good reason, more likely to be accepted than resolved in projects like
               Vault. </p>
         </div>
         <div>

            <head>Defining the Labor Perspective</head>
            <p>What does my work with Vault tell readers of this journal about minimal computing?
               This may at first sound like a rather odd or misguided question. After all, Vault is
               substantial in both its size and reach, and it draws upon a significant array of
               resources in the Libraries.<note> For one example, see the growing popularity of
                  Jekyll, a static site generator considered to be an alternative to resource-heavy,
                  database-driven management systems such as WordPress. </note> Again, Vault is
               neither the product of a static site generator nor stored on a small, single-board
                  computer.<note> For an example of research conducted on small-single board
                  computers, see James Smithies’s essay, <title rend="quotes">Full Stack DH:
                     Building a Virtual Research Environment on a Raspberry Pi.</title> Near the end
                  of his argument, Smithies makes a point about maintaining his <ref
                     target="https://jamessmithies.org">https://jamessmithies.org</ref> minimal
                  computing project: <quote rend="inline">[A]t the end of my career I hope to have a
                     single project that consolidates and presents a lifetime of digital
                     scholarship. This aim is perhaps the larger challenge posed by
                     jamessmithies.org. For people with the requisite skills, does a minimal
                     computer + open source web framework + cloud service integration amount to the
                     ultimate VRE? The need for ongoing maintenance suggests not. Conceived as a
                     decades-long personal project, jamessmithies.org is likely to stay live for
                     some time as a by-product of intellectual and technical engagement, but it is
                     far from a model for general use</quote>
                  <ptr target="#smithies2018"/>. </note> It is also not a project about the art of
               programming, elegant code, or teaching the fundamentals of computing.<note> See, for
                  instance, Donald Knuth’s <title rend="italic">The Art of Computer
                     Programming</title>, first published in 1968. </note> It is, however, an
               informative case study for minimal computing from what Sayers and I call the labor
               perspective, where — drawing from work across media and technology studies⁠,
               especially McKenzie Wark’s <title rend="italic">Molecular Red</title> — labor is an
               activity operating both within and against computation,<note>
                  <q>We</q> from here through the end of the article are Chan and Sayers, and we
                  engage Wark via a technique she calls <q>substitution</q> by rewording her
                  approach to labor in <title rend="italic">Molecular Red </title>: <quote
                     rend="inline">Labor finds itself in and against nature</quote>
                  <ptr target="#wark2015" loc="19–20"/>. In our argument, <q>nature</q> becomes
                     <q>computation</q> or <q>computing.</q> We are also striving to avoid what Wark
                  identifies as a limitation of this philosophical approach: <quote rend="inline"
                     >The result tends to be the thought of activity without matter or of matter
                     without activity</quote>
                  <ptr target="#wark2015" loc="19"/>. </note> where the combination of <q>within</q>
               and <q>against</q> is key to our approach <ptr target="#wark2015"/>. Contra Marx, we
               need not find humans, and specifically the universal human subject, always at the
               center of labor.<note> See <title rend="italic">Capital</title>, Volume One, for
                  instance. Labor is <quote rend="inline">a process between man and nature, a
                     process by which man, through his own actions, mediates, regulates and controls
                     the metabolism between himself and nature</quote>
                  <ptr target="#marx1976" loc="283"/>. The <q>between</q> here⁠ — the boundary
                  between people (<q>man</q>) and nature — differs from our use, via Wark, of <quote
                     rend="inline">within and against.</quote> For a critique of the universal human
                  subject in digital praxis, see Roopika Risam, who writes: <quote rend="inline"
                     >With the move to generate software and algorithms that replicate ‘human’
                     processes, particular forms of ‘human’ are authorized. As postcolonial scholars
                     have argued, the Enlightenment gave rise to the idea of a homogeneous
                     definition of ‘human,’ which centers the European subject and, in turn,
                     marginalizes all whose cultures, lifestyles, and values deviate from the
                     universal. Postcolonial theory, crucially, has made the case for the importance
                     of the particular, grounded in the idea that, indeed, cultures — specifically
                     the cultures of colonized or formerly colonized communities — are left out by
                     universalist discourse</quote>
                  <ptr target="#risam2018"/>. </note> To quote Wark, <quote rend="inline">Labor is
                  the mingling of many things, most of them not human</quote>
               <ptr target="#wark2015" loc="217"/>, hence our attention to both activity and
               infrastructure throughout the following inquiry. </p>
            <p>The logic of the labor perspective unfolds like so: </p>
            <list type="unordered">
               <item>Computation is historical, not abstract. Minimal computing starts in the middle
                  of institutional work⁠ — <term>in medias res</term>.<note> Sayers elaborates on
                     starting <term>in medias res </term>in his introduction to <title rend="italic"
                        >Making Things and Drawing Boundaries</title>
                     <ptr target="#sayers2017"/>. </note> It engages computation as mediation,
                  beyond the packaging of minimalism as a canned style, transhistorical feature, or
                  list of fundamentals intended for download and exchange. From the labor
                  perspective, a minimal computing project is its files and the relationships
                  between them; it is also the ongoing activity of maintenance, customization, and
                  care moving into the future with the past in mind.<note> On carework in
                     particular, see Bengi Akbulut, who defines it both narrowly and generally:
                        <quote rend="inline">The most straightforward (yet admittedly narrow)
                        definition of carework is labor performed to fulfill the needs of those who
                        cannot do so themselves, such as food provision, cleaning, health, etc.
                        Broader understandings of carework stress that such work is often performed
                        in tandem with and complementary to other types of (unpaid) reproductive
                        labor and cannot be considered separate from the broader sphere of social
                        reproduction. That is to say, carework is better seen as the <emph>more
                           comprehensive field of paid and unpaid labor that ensures social
                           reproduction in general</emph></quote>
                     <ptr target="#akbulut2017" loc="emphasis original"/>. See also <ptr
                        target="#moraga1983"/> and <ptr target="#ferguson2000"/>. Technologies are
                     of course one area among many where such social reproduction occurs and is
                     regulated by patriarchal biopolitics and racialized protocols. As Michelle
                     Murphy notes: <quote rend="inline">A century of feminist calls to seize the
                        means of reproduction, to take control of one’s own body, to love oneself,
                        to embrace reproductive rights, to end racism, to denounce reproductive
                        technologies, to enjoy sex, to situate bodies intersectionally and so on are
                        all quintessentially biopolitical</quote>
                     <ptr target="#murphy2012" loc="10"/>. </note>
               </item>
               <item>Computation subsumes labor. Or, labor is found within computation <ptr
                     target="#wark2015" loc="19"/>.<note> Here we again draw directly from Wark,
                     specifically her engagements with Alexander Bogdanov and Karl Marx in <title
                        rend="italic">Molecular Red</title>: <quote rend="inline">The labor point of
                        view has to reject ontologies of abstract exchange with nature. . . . Labor
                        is always firstly in nature, subsumed within a totality greater than itself.
                        Labor is secondly against nature. It comes into being through an effort to
                        bend resisting nature to its purposes. . . . Labor experiments with nature,
                        finding new uses for it</quote>
                     <ptr target="#wark2015" loc="19"/>. </note> Minimal computing happens within
                  infrastructures greater, or larger, than itself. From the labor perspective, a
                  minimal computing project attends to the power and persistence of these
                  infrastructures and determines which ones are worth maintaining. </item>
               <item>Yet labor also experiments with computation <ptr target="#wark2015" loc="19"/>.
                  Or, it is an activity of resistance and friction, especially with respect to
                  software’s default settings. Minimal computing projects find new uses for
                  computing outside SAAS paradigms. From the labor perspective, a minimal computing
                  project positions technical work as creative and critical work beyond familiarity
                  with management systems. </item>
               <item>Minimal computing from the labor perspective may thus be defined as <emph>the
                     reduction of computation’s alienating effects</emph>: the alienation of
                  projects but also of practitioners from social organization and collective
                  expertise. From the labor perspective, a minimal computing project degrows
                  computation’s tendency to reinvest in productivity by investing instead in shared
                  structures and common activities, also called <q>convivial computing</q>
                  <ptr target="#barca2019"/>
                  <ptr target="#sterne2007"/>.<note> For more on degrowth from the labor
                     perspective, see Stefania Barca who writes: <quote rend="inline">[T]he project
                        of building a degrowth society can only start from fostering dealienation by
                        reopening the possibility for workers control and economic democracy, from
                        the workplace to society at large</quote>
                     <ptr target="#barca2019" loc="209"/>. For more on convivial computing, see
                     Jonathan Sterne’s work. Engaging Ivan Illich’s work on technology in an essay
                     about waste and computer trash <ptr target="#illich1973"/>, Sterne writes:
                        <quote rend="inline">Illich uses the term ‘conviviality’ to connote the
                        following characteristics of technologies: ease of use, flexibility in
                        implementation, harmony with the environment, and ease of integration into
                        truly democratic forms of social life. Obviously, Illich’s vision is a
                        utopian one, but his measure of a technology’s conviviality seems relevant
                        to the question of computer trash. We need a ‘convivial’ computer</quote>
                     <ptr target="#sterne2007" loc="28"/>. </note>
               </item>
            </list>
            <p>All of these aspects are more than metaphors, and they can be unpacked with attention
               to the particulars of Vault as a computing project and labor issue. </p>
            <p>We would be remiss, however, if we did not first recognize how minimalism is often an
               expression of power, if not an exaltation of it. Google’s reduction of search to a
               single input field on a mostly blank page is a canonical example of such power.<note>
                  Perhaps the most common way people talk about minimalism, especially in Europe and
                  North America, is through the language of reduction. Encyclopedia definitions of
                  minimalism are rife with reduction <ptr target="#oxford2007"/>
                  <ptr target="#britannica1998"/>, which⁠ Jon Barth finds in writing by everyone
                  from Robert Browning (<q>less is more</q>), Emily Dickinson, Edgar Allan Poe,
                  Henry James, Ernest Hemingway, and Samuel Beckett to Frederick Barthelme, Ann
                  Beattie, Bobbie Ann Mason, and Raymond Carver⁠, not to mention the rationalism of
                  a certain mathematician and philosopher: <quote rend="inline">[A]fter the excesses
                     of scholasticism comes Descartes’s radical reductionism⁠ — let us doubt and
                     discard everything not self-evident and see whether anything indubitable
                     remains upon which to rebuild</quote>
                  <ptr target="#barth1986" loc="1"/>. Modernist painter, John D. Graham uses
                  reduction to define minimalism in the visual arts: <quote rend="inline">Minimalism
                     is the reducing of painting to the minimum ingredients for the sake of
                     discovering the ultimate, logical destination of painting in the process of
                     abstracting</quote>
                  <ptr target="#graham1971" loc="33"/>. Marc Botha acknowledges Graham as well as
                  critics Frances Colpitt and Cynthia W. Hallett, in his transhistorical and
                  transdisciplinary theory of minimalism, where he frames reduction as a minimalist
                  practice and concept: <quote rend="inline">The minimalist story . . . speaks of a
                     simplicity arrived at through the disciplined process of reduction</quote>
                  <ptr target="#botha2017" loc="78"/>
                  <ptr target="#graham1971"/>
                  <ptr target="#hallett1996"/>. From a more situated perspective, James Meyer
                  contextualizes reduction, linking it to the new austerity movement of the
                  mid-1960s: <quote rend="inline">The popular concept of the minimal as an aesthetic
                     of refusal, of reduction, became so omnivorous that it quickly overtook the
                     practices it was first applied to</quote>
                  <ptr target="#meyer2001" loc="80"/>. Hal Foster acknowledges this historical
                  prominence of reduction in definitions of minimalist art, only to the object,
                  calling reduction a <quote rend="inline">great misreading</quote>
                  <ptr target="#foster1996" loc="40"/>. Meanwhile, Hartmut Obendorf anchors his
                  human-computer interaction (HCI) methodology for <q>designing simplicity</q> and
                     <q>designing the minimal</q> in a pragmatist reduction resonating with the
                  economy of Occam’s razor: <quote rend="inline">The practitioner should be able to
                     consciously choose his/her tools and make informed design decisions . . . To
                     this end, this book defines an ideal for design, focuses on reduction as a
                     technique, and draws on the notion of minimalism to differentiate understanding
                     of simplicity</quote>
                  <ptr target="#obendorf2009" loc="4"/>. Invested more in ideas and lifestyle
                  minimalism than computing or interaction design, the first chapter of Kyle
                  Chayka’s <title rend="italic">The Longing for Less: Living with Minimalism</title>
                  is titled, <q>Reduction,</q> where the term serves as a starting point for
                  understanding minimalism and what else it may mean or do <ptr target="#chayka2020"
                  />. </note> The cost of Apple products, known for their minimalist design, is yet
               another. Beyond computing, we may⁠ — at the risk of digressing for a moment — look to
               minimalist sculpture in the U.S. starting in the 1960s. Donald Judd once described
               such sculpture as <q>plain power</q>
               <ptr target="#judd2002"/>, and Frank Stella said, <quote rend="inline">What you see
                  is what you see</quote>
               <ptr target="#stella1995" loc="158"/>. Here, the exposure of means is the medium,
               what Anna Chave deems not only a will to power but also the face of patriarchy and
               capital <ptr target="#chave1990" loc="51–8"/>.<note> Chave draws from Michel
                  Foucault’s work to make this argument, but she accompanies that influence with a
                  critique of Foucault’s inattention to gendered and patriarchal power in the
                  process: <quote rend="inline">A persuasive case can be made, after all, that the
                     patriarchal overevaluation of power and control — at the expense of mutuality,
                     toleration, or nurturance — can be held to account for almost all that is
                     politically reprehensible and morally lamentable in the world. The case can be
                     made as well that what is most badly needed are, at least for a start, visions
                     of something different, something else</quote>
                  <ptr target="#chave1990" loc="56"/>
                  <ptr target="#balbus1986"/>
                  <ptr target="#foucault1980"/>.</note> In the New York's minimalist sculpture scene
               during the 1960s, that will to power was also predominantly white and male, and a lot
               of the work was factory-made, or it evinced the factory-made.<note> Cameron Glover
                  extends this observation in her work on contemporary lifestyle minimalism. She
                  writes: <quote rend="inline">While minimalists preach universality — you don’t
                     have to be rich to own fewer things — the authors behind the most influential
                     minimalist-themed titles and #minimalism posts tell a different story.
                     Influencers that frequently appear on lists of influential minimalist Instagram
                     accounts are predominantly white and East Asian (today’s Japanese minimalism
                     arises from Zen and Buddhist traditions). The best known minimalist authors
                     today — Marie Kondo, Joshua Fields Millburn and Ryan Nicodemus, Francine Jay,
                     Joshua Becker, Fumio Sasaki — fit within the same demographics</quote>
                  <ptr target="#glover2017"/>. She then shifts to highlight minimalist work being
                  done by Black minimalists: <quote rend="inline">Despite the new movement’s lack of
                     diversity on the surface, there are a small number of black individuals who
                     proudly call themselves minimalists in 2017</quote>
                  <ptr target="#glover2017"/>. Among them is Roe Cummings, who defines minimalism
                  this way: <quote rend="inline">Minimalism, if defined to me, is the practice of
                     looking around at what you have and living your abundant life in the
                     now</quote>
                  <ptr target="#glover2017"/>. </note> Chave notes that Tony Smith once boasted,
                  <quote rend="inline">I didn’t make a drawing; I just picked up the phone and
                  ordered it</quote>
               <ptr target="#chave1990" loc="52"/>. Minimalist sculpture of that scene rarely left a
               trace or signature of its production, and it did not appear to address a particular
               subject or community of subjects <ptr target="#foster1996"/>.<note> Hal Foster argues
                  in <title rend="quotes">The Crux of Minimalism</title> that <quote rend="inline"
                     >minimalism considers perception in phenomenological terms, as somehow before
                     or outside history, language, sexuality, and power. In other words, it does not
                     regard the subject as a sexed body positioned in a symbolic order any more than
                     it regards the gallery or the museum as an ideological apparatus</quote>
                  <ptr target="#foster1996" loc="43"/>. </note> It functioned more like an
               impersonal, austere, monolithic object⁠: as <q>anti-artifice</q> rather than art in
               the making <ptr target="#strickland1993" loc="13"/>. It did not readily disclose its
               process of composition, either, reminding audiences that <q>laying bare</q> the means
               does not necessitate attribution, let alone transparency, of labor. </p>
            <p>This labor issue persists in the exhibition and care of minimalist sculpture found in
               public parks and plazas. Consider, for instance, Chave’s analysis of Richard Serra’s
                  <title rend="italic">Tilted Arc</title>, constructed in 1981 and commissioned by
               the U.S. General Services Administration’s Art in Architecture Program: </p>
            <p><quote rend="block">In its site on Federal Plaza in lower Manhattan, Serra’s mammoth,
                  perilously titled steel arc formed a divisive barrier too tall (12 feet) to see
                  over, and a protracted trip (120 feet) to walk around. In the severity of its
                  material, the austerity of its form, and in its gargantuan size, it served almost
                  as a grotesque amplification of Minimalism’s power rhetoric. Something about the
                  public reaction to that rhetoric can be deduced from the graffiti and the urine
                  that liberally covered the work almost from the first, as well as from the
                  petitions demanding its removal (a demand met last year). <ptr target="#chave1990"
                     loc="59"/></quote></p>
            <p>Here, minimalism was so assertive, so aggressive in its will to power, that people
               responded by tagging it and relieving themselves on it.<note> The urination may also
                  be explained by the small degree of public privacy afforded by <title
                     rend="italic">Titled Arc </title>as a sort of shield installed in Federal
                  Plaza. Meanwhile, employees of the Department of Health and Human Services noted
                  that the graffiti tended to include racial slurs and religious epithets <ptr
                     target="#hornblower1985"/>. </note> Employees of the Department of Health and
               Human Services then had to attend to it⁠ — all to help maintain Serra’s public work.
               After almost a decade of this back-and-forth, <title rend="italic">Tilted Arc
               </title>was dissected into three pieces, removed, and delivered to a nearby
               scrap-metal yard <ptr target="#pbs1999"/>. </p>
            <p>While minimalist sculpture in New York may not appear immediately relevant to Vault,
               it does provide an example of how minimalism is value-laden, and it may serve as a
               model for how <emph>not</emph> to approach minimal computing from the labor
               perspective. Rather than assuming that a minimalist project is the impersonal
               expression of means or the exaltation of a lone artist’s patriarchal power and
               capital, the labor perspective attends to the social and material mingling of
               activities with infrastructure over time. We approach this mingling through
               technical, organizational, and affective labor in particular. </p>
         </div>
         <div>
            <head>Technical Labor: On the Recalcitrance of Computing </head>
            <p>The technical labor of Vault engages the <q>recalcitrance</q> of computing <ptr
                  target="#wark2015" loc="18"/>, and it starts in the middle. In the narrowest
               senses of mediation and history, it migrates and localizes materials from the
                  <q>there</q> of CONTENTdm to the <q>here</q> of Vault in the Libraries. This by no
               means makes Vault unique. Thousands of these stories exist across the world, and — as
               noted previously in this article — more and more institutions are moving from SAAS to
               FOSS for the purposes of management. But<term> in medias res</term> persists as a
               theme even when we speak more generally about Vault; web and software projects rarely
               start from scratch and, of course, memory institutions by necessity engage with
               historical materials in their collections. In the case of UVic, these include
               collections such as Victorian Serial Novels; Herbert Geddes; Medieval and Early
               Modern Manuscripts; Food Not Bombs; and the Rikki Swin Institute: Gender Education,
               Research, Library, and Archives.<note> These and other UVic collections may be viewed
                  online at <ref target="https://vault.library.uvic.ca"
                     >https://vault.library.uvic.ca</ref>.</note> Digitizing, stewarding, and caring
               for these materials is labor-intensive, and localizing them with customizations of
               Hyku written in Ruby underscores how migration is not a mere copy-and-paste job from
               CONTENTdm. </p>
            <p>When viewed in the aggregate, these issues of mediation demonstrate why maintenance,
               rather than innovation or disruption, is a fundamental term for Vault and the labor
               around it. The lived reality of Vault and other FOSS projects is one of constant
               negotiation with software, of moving from one moment of stabilization to the next,
               between past and future. As Vault reduces UVic’s alienation from its own collections,
               and the Libraries from their own labor and computing, all as an alternative to
               proprietary software in the academy, it also makes everyone involved more aware of
               the means available for asset management. This awareness of means underscores the
               fact that technical labor — like all creative and critical work — carries both
               negative and affirmative connotations, from managing endless bugs and implementing
               updates to experimenting with code, building knowledge around historical materials,
               and imagining new uses for computing.<note> The history of women in computing, or
                  women as computers or operators, is foundational to understanding the nuances of
                  technical labor as, or aligned with, invisible, uncompensated, and/or unattributed
                  activities of reproduction <ptr target="#plant1997"/>
                  <ptr target="#hayles2005"/>
                  <ptr target="#chun2013"/>
                  <ptr target="#edwards2017"/>
                  <ptr target="#hicks2017"/>. We have also written about one moment in this history
                  (the optophonics work of Mary Jameson) with Mara Mills <ptr target="#chan2018"
                  />.</note>
            </p>
            <p>An awareness of means has been an appeal of minimalism for some time now. In his
               examination of minimalist tendencies in music and plastic arts, Edward Strickland
               asserts: <quote rend="inline">In much Minimal music . . . overt and immediately
                  audible repetition of simple, even simplistic material, is the predominant
                  structural principle. In dance, film, sculpture, and literature, similarly,
                  Minimalism exposes the components of its medium in skeletal form</quote>
               <ptr target="#strickland1993" loc="13"/>. The same may be argued for the technical
               labor of minimal computing; for instance, the components, skeleton, and even the
               principles of infrastructure are foregrounded in the design of open-source
               microcontrollers and static site generators.<note> For a history of one such
                  open-source microcontroller (Arduino) and the relation of its design to power,
                  control, and subjectivity, see Shaun Macpherson’s <title rend="quotes">‘A Computer
                     for the Rest of You’: Human-Computer Interaction in the Eversion</title>
                  <ptr target="#macpherson2014"/>. </note> People accessing or contributing to such
               projects are presumably not estranged from computation’s component parts and, in some
               cases, the connections between those parts and their dependencies. The materials are
               presented in plain sight, as if they <emph>are</emph> the interface. Vault does
               something similar through the simplicity of its online presentation. Descriptions,
               metadata, and items are all shared together on the same page, and a collection’s size
               (in bytes), number of items, provenance, and permalink are readily available.
               Additionally, since Vault is a custom instance of Hyku — and Hyku is FOSS designed
               for modification and reuse — the Libraries may create new features or adapt existing
               ones to suit workflows specific to UVic.<note> The code for Hyku is available on
                  GitHub at <ref target="https://github.com/samvera/hyku"
                     >https://github.com/samvera/hyku</ref>. It is described thusly: <quote
                     rend="inline">Hyku: A multi-tenant Hyrax application built on the latest and
                     greatest Samvera community components. Brought to you by the Hydra-in-a-Box
                     project partners and IMLS; maintained by the Hyku Interest
                  Group.</quote></note> In CONTENTdm, there is no easy way for people to download
               either specific image items or images of an item’s constituent parts, such as
               particular pages in a codex. The components and skeletal form of CONTENTdm are not
               readily apparent to local developers, and modifying its code is very difficult and
               likely illegal. CONTENTdm is thus an example of the proverbial black box.<note> For
                  more on the notion of a black box, see <title rend="italic">Science in
                     Action</title>, where Bruno Latour uses the term to differentiate between
                     <q>ready made science</q> and <q>science in the making</q>: <quote
                     rend="inline">The word black box is used by cyberneticians whenever a piece of
                     machinery or a set of commands is too complex. In its place they draw a little
                     box about which they need to know nothing but its input and output</quote>
                  <ptr target="#latour1988" loc="2–3"/>. The black box is abstract, not historical.
                  Later in <title rend="italic">Science in Action</title>, Latour also describes it
                  as that which <quote rend="inline">closely resembles an organised whole</quote>
                  <ptr target="#latour1988" loc="131"/>. </note> Developers and libraries must rely
               on the vendor (the Online Computer Library Center) to determine costs of features,
               which of those features to offer, and when. </p>
            <p>With Vault, the Libraries see the component parts and their relations, and the UVic
               team may adjust the platform’s settings to allow or disallow file downloads and
               increase granularity in access protocols, making only a subset of collections
               downloadable or permitting downloads of specific works in a given collection. This
               sort of technical labor, including customization, applies to the general maintenance
               and care for Vault: the living activity of ensuring the social and technical
               reproduction of the Libraries’ holdings through code and software. It is also central
               to reproducing scholarship and, by extension, the academy <ptr target="#shirazi2017"
               />. As we discuss later in this article, smaller projects, such as a journal built
               with Jekyll or an exhibit made with Wax gems, may integrate Vault, with items from
               UVic’s holdings becoming featured materials for curation and interpretation and the
               platform itself serving as infrastructure for the description and persistence of
                  assets.<note> For more on Wax, see <ref target="https://minicomp.github.io/wax/"
                     >https://minicomp.github.io/wax/</ref>. There, the credits for Wax read as
                  follows: <quote rend="inline">Wax is a minimal computing (minicomp) project led by
                     Marii Nyröp. The project is currently maintained by Marii Nyröp and Alex Gil at
                     Columbia University Libraries. It uses open source libraries and frameworks
                     including Jekyll, IIIF, OpenSeaDragon, Rake, and ElasticLunr. Wax builds upon
                     work by Peter Binkley, David Newbury, and others.</quote></note> This aspect of
               Vault and projects like it is critical to approaching minimal computing from the
               technical labor point of view, as it prompts practitioners to account for the entire
               stack of scholarly communication, and to render visible its structures and
               components, even if no one is an expert in all the areas and technologies
                  involved.<note> The stack for Vault includes Hyku, Fedora 4, Blacklight, Solr, and
                  IIIF, among other technologies.</note> While some layers of this stack, such as
               storage, servers, digitized assets, and metadata, may be centralized according to
               standards at institutions like the Libraries, other layers, such as applications and
               even data, may be decentralized.<note> This logic was central to early work on the
                  Scalar platform for multimodal scholarly communication (see <ref
                     target="https://scalar.me/anvc/">https://scalar.me/anvc/</ref>). Sayers
                  published an article on Scalar with Craig Dietrich, noting that Scalar’s <quote
                     rend="inline">authors are not creating small, isolated archives on the Scalar
                     server. Although they can upload their own videos, audio, and images to that
                     space, they are instead encouraged to house them with a partner archive. Or, in
                     the case where assets are already online, they are encouraged to embed those
                     assets in their Scalar projects. That way, systems point to existing URIs
                     rather than duplicating resources and producing redundancies. Here, the
                     advantage is that media playback is overseen by groups that not only have
                     institutional support but also specialise in metadata, asset categorisation,
                     provenance, and interoperability</quote>
                  <ptr target="#sayers2013"/>. </note> But focusing solely on particular layers of a
               stack — on only a journal or exhibit application and not the storage and server, for
               instance — risks abstracting an otherwise social process and treating its features as
               immediate or ahistorical. </p>
            <p>Low-tech practices such as pseudocode help to render an otherwise recalcitrant stack
               intelligible to a group — to keep code mingling, and to degrow its alienating
               effects. The labor question is not whether everyone in the Libraries knows how to
               code (where programming is a means to power) or whether code does what it says (where
               code as <emph>logos</emph> is the means becoming the medium).<note> See <ptr
                     target="#posner2012"/> on the problem with exhorting people, especially white
                  women and people of color, to code. </note> It is, more generally, whether people
               follow how <emph>this</emph> becomes <emph>that</emph>: how, for example, a TIFF
               becomes a PDF with a simple program that begins as a specifications list and is then
               translated into Ruby, which is then written into infrastructure. Such shared working
               knowledge brushes against <quote rend="inline">what you see is what you see,</quote>
               <q>plain power</q> assumptions of common sense, also popular in minimalist design
               principles like <q>Keep It Simple, Stupid</q> (KISS), where simplicity is presented
               overtly in ableist terms, as if it is obvious or readily apparent to whomever.<note>
                  For more on common sense, Stuart Hall and Alan O’Shea describe common sense as
                     <quote rend="inline">a form of ‘everyday thinking’ which offers us frameworks
                     of meaning with which to make sense of the world. It is a form of popular,
                     easily-available knowledge which contains no complicated ideas, requires no
                     sophisticated argument and does not depend on deep thought or wide reading. It
                     works intuitively, without forethought or reflection. It is pragmatic and
                     empirical, giving the illusion of arising directly from experience, reflecting
                     only the realities of daily life and answering the needs of ‘the common people’
                     for practical guidance and advice</quote>
                  <ptr target="#hall2013" loc="8–9"/>. They add that <quote rend="inline">Common
                     sense, tends to be socially conservative, leaning toward tradition</quote>
                  <ptr target="#hall2013" loc="9"/>. Consider, for instance, the treatment of
                  computing practices as something you simply <q>do</q> or <q>keep doing.</q>
                  Without attention to the labor perspective (among other social and cultural
                  approaches), the minimalist dimensions of minimal computing lend themselves to
                  demands for the easily-available, intuitive, pragmatic, empirical, and socially
                  conservative. On common sense, see also the work of Antonio Gramsci as well Linda
                  Åhäll, who considers common sense to be a vehicle for apolitical activity <ptr
                     target="#gramsci1971"/>
                  <ptr target="#ahall2018"/>. For more on common sense as <term>sensus
                     communis</term> (shared sensation) and aesthetic rationality, see <ptr
                     target="#chuh2019"/>. For critical responses to the socially conservative
                  dimensions of computing and digital work, see #TransformDH at <ref
                     target="https://transformdh.org">https://transformdh.org</ref>. </note> In
               reality, the unfolding of technical labor is not obvious, uniform, immediate, or even
               coherent. As pseudocode for Vault reveals, simplicity is value, and it must be
               iterated, learned, and communicated through composites of knowledge and experience
               that gradually decrease collective estrangement. Otherwise, the recalcitrance of
               computing and the layers of a stack are naturalized: assumed to be an abstract
               quality of a project or an inherent property of computers. “I’m not good with
               computers,” we might, for good reason, hear someone say, and minimalist expressions
               of plain power and assertions of technical labor’s simple sense may be reasons why.
            </p>
         </div>
         <div>
            <head>Organizational Labor: On Bringing People Together around Tasks </head>
            <p>The organizational labor of Vault addresses people’s everyday negotiations with
               computing but also <quote rend="inline">thread[s] people together around their
                  tasks</quote>
               <ptr target="#wark2015" loc="18–19"/>. Vault is a collaboration across digitization,
               metadata and cataloguing, software development, systems, and digital scholarship and
               strategy in the Libraries. Each of these groups has their own areas of concentration,
               across which they work and communicate. Organization is vital for these reasons.
               Vault is developed, maintained, and used by unionized employees at UVic; those unions
               agree upon and follow collective agreements, which are pivotal to stability,
               advocacy, and governance given the increasing number of precarious positions in and
               beyond the academy, the expanding breadth of job qualifications in the gig economy,
               the rise of for-profit colleges, and the maintenance, carework, and digital labor
               involved in FOSS <ptr target="#aneesh2006"/>
               <ptr target="#scholz2013"/>
               <ptr target="#fuchs2014"/>
               <ptr target="#mcmillan2017"/>
               <ptr target="#cupe2018"/>.<note> The Canadian Union of Public Employees (CUPE) wrote
                  in 2018: <quote rend="inline">More Canadians are working in precarious conditions,
                     employed in contract, temporary, and/or part-time jobs with low wages. The
                     increase has been concentrated in accommodation and food services, education,
                     information, culture and recreation services — and particularly among young
                     workers aged 15 to 24 and older workers aged 65+. The [Canadian Centre for
                     Policy Alternatives] recently reported that among the university and college
                     workforce, as many as half are employed in precarious conditions. A
                     disproportionate share of those are the 68,000 CUPE workers employed in this
                     sector. Permanent jobs make up a declining share of the overall jobs in the
                     post-secondary workforce. They’re being replaced by people working in
                     temporary, involuntary part-time and multiple jobs</quote>
                  <ptr target="#cupe2018"/></note> Such agreements also foster a collective
               awareness of a mediating apparatus, if you will, without assuming consensus among all
               involved. </p>
            <p>Expounding Donna Haraway’s cyborg point of view, Wark says an <quote rend="inline"
                  >apparatus renders <emph>to</emph> the human a world that isn’t for the
                  human</quote>
               <ptr target="#wark2015" loc="151"/>.<note> Another description of the apparatus may
                  be useful here. In <title rend="italic">Meeting the Universe Halfway,
                  </title>Karen Barad writes: <quote rend="inline">(1) apparatuses are specific
                     material-discursive practices (they are not merely laboratory setups that
                     embody human concepts and take measurements); (2) apparatuses produce
                     differences that matter — they are boundary-making practices that are formative
                     of matter and meaning, productive of, and part of, the phenomena produced; (3)
                     apparatuses are material configurations/dynamic reconfigurings of the world;
                     (4) apparatuses are themselves phenomena (constituted and dynamically
                     reconstituted as part of the ongoing intra-activity of the world); (5)
                     apparatuses have no intrinsic boundaries but are open-ended practices; and (6)
                     apparatuses are not located in the world but are material configurations or
                     reconfigurings of the world that re(con)figure spatiality and temporality as
                     well as (the traditional notion of) dynamics (i.e., they do not exist as static
                     structures, nor do they merely unfold or evolve in space and time)</quote>
                  <ptr target="#barad2007" loc="146"/>. Barad approaches the apparatus from a
                  science studies perspective and builds on work by Haraway, Niels Bohr, Judith
                  Butler, and Foucault. This perspective distinguishes the apparatus as defined by
                  structuralists such as Louis Althussser.</note> Wark is not examining computing
               here, but it fits. While practices such as pseudocode matter for the comprehension of
               computation — for understanding in general terms how this becomes that⁠ — a mediating
               apparatus affects apprehension, or the aspects of a computing stack that are not
               intended for us. Components of code may <q>speak</q> more often to each other, or to
               machines, than to (most) people. Recall, for instance, this line of Ruby: <code>`qpdf
                  #{input_pdf_name} — linearize #{output_pdf_name}`</code>. It is not exactly
               human-readable, even if aspects of it are intelligible. Or, approaching the business
               of mediation more broadly, people are unable to witness what a project like Vault is
               doing <q>behind the scenes</q> or <q>on the back end.</q> So much process is
               indecipherable or invisible, and this can all be quite alienating in the absence of
               organizational labor. After all, people rely upon software and instill their trust in
               it, usually without being proximate to those who keep it running.<note> See Chun’s
                     <title rend="italic">Programmed Visions </title>for more on this issue of not
                  seeing or grasping computation (Chun 2011). For more on how it applies to
                  maintenance, such as the carework of moderation, see Sarah Roberts’s <title
                     rend="italic">Behind the Screen: Content Moderation in the Shadows of Social
                     Media </title>
                  <ptr target="#roberts2019"/>. For more from a game studies perspective,
                  specifically the invisible labor at play in occupations such as goldfarming, see
                  Lisa Nakamura’s <title rend="quotes">Don’t Hate the Player, Hate the Game: The
                     Racialization of Labor in World of Warcraft</title>
                  <ptr target="#nakamura2009"/>. The invisibility of such labor practices is
                  directly tied to worker alienation; those who are not seen are not only deprived
                  of recognition and attribution but also refused fair wages and subjected to
                  exploitation. </note> Ensuring that an apparatus is understood as social and
               technical labor supported by collective agreements decreases the potential for
               estrangement without aspiring for immediacy. It also increases the visibility of
               technical labor, affirms it, and underscores why it is essential, in part by framing
               maintenance as research publishable in a journal such as this one. Furthermore,
               collective awareness of an apparatus⁠ — a shared apprehension of how it renders to us
               what is not for us — can shape the language and practice of organizing around Vault —
                  <q>project</q> rather than <q>product,</q> for example, or minimal computing as
               labor first, then style, specification, file, or theme, if need be. With such
               changes, a project’s design process may begin with maintenance considerations rather
               than ignoring them (acting as if they do not exist), deferring them (acting as if
               they matter less than other considerations), or attending to them as they emerge
               (acting as if they are isolated incidents rather than patterns or cascades). </p>
         </div>
         <div>
            <head>Affective Labor: On Being Directed by Computing and Computing Projects</head>
            <p>The affective labor of Vault engages the feeling of <q>being directed</q> by
               computing and computing projects <ptr target="#ahmed2017" loc="43"/>. As we mentioned
               earlier, the challenges of technical labor are compounded when people are not
               compensated or supported for developing their expertise, or where a lack of resources
               or staff means one person must wear many hats and fix bugs in code as they arise.
               While the organizational labor of a collective agreement may help to alleviate issues
               related to compensation and professional development, the occupational aspect of
                  <q>many hats</q> involves various cultural factors that are entwined with the
               everyday experiences of programming and carework. A labor approach to Vault
               underscores the need for structures and guidelines that protect employees from
               outside demands for increased efficiency or motivate institutions to reinvest a
               project’s surplus in productivity. UVic’s <title rend="italic">Library Services for
                  Grant-Funded Research Projects</title> unfolds along these lines, communicating to
               researchers what the Libraries do and do not provide, when, and the monetary value of
               in-kind contributions.<note>See <ref
                     target="https://www.uvic.ca/library/research-teaching/research-grant-support/grants.php"
                     >https://www.uvic.ca/library/research-teaching/research-grant-support/grants.php</ref>
                  for the Libraries' <q>Grant menu.</q> For more on in-kind contributions in a
                  Canadian context, see the Social Science and Humanities Research Council's
                  guidelines: <ref
                     target="https://www.sshrc-crsh.gc.ca/funding-financement/policies-politiques/cash_inkind-especes_en_nature-eng.aspx"
                     >https://www.sshrc-crsh.gc.ca/funding-financement/policies-politiques/cash_inkind-especes_en_nature-eng.aspx</ref>.</note>
               Where affect matters here is in the articulation of maintenance with service and
               happiness: fixing bugs that impede people’s access to historical materials, for
               instance, or designing simple interfaces to decrease friction during research, not to
               mention enduring recurring acts of mansplaining and routinely being asked to
               communicate one’s position in a feminized library workforce.<note> For more on the
                  gender and power dimensions of service in projects, see Susan Brown’s <title
                     rend="quotes">Delivery Service: Gender and the Political Unconscious of Digital
                     Humanities</title>
                  <ptr target="#brown2018"/>.</note> These are topics, no doubt associated with
               expectations, that likely go unmentioned in a collective agreement. But, as Sara
               Ahmed makes clear in her work on building feminist worlds <ptr target="#ahmed2017"/>,
               such expectations are norms, and in computing they are norms entangled with how
               software and its values govern people, especially white women, nonbinary folks, and
               people of color, in how to act and feel. Ahmed calls this <quote rend="inline">power
                  as directionality</quote>
               <ptr target="#ahmed2017" loc="43"/>, and included within it is the heteropatriarchal
               command (if tacit) to appear happy and busy during maintenance and care, despite the
               fact that frustration, delays, negotiation, bugs, skepticism, confusion, and
               complaints are not just inevitable but necessary aspects of any inventive computing
               project, especially if and when people are wearing many hats.<note> In <title
                     rend="quotes">On Being Directed,</title> Ahmed explains how technologies, or
                  things, play a role in naturalizing power as directionality: <quote rend="block"
                     >As you become aware of how the social world is organized, norms appear as
                     palpable things. I think of those times, say, when you walk into a toy shop and
                     it is striking. You might pick up the vacuum cleaner, a toy vacuum cleaner, and
                     feel like you are holding the future for girls in a tangible thing. You can
                     pick up a toy gun, and also feel this: the future for boys held as a tangible
                     thing. Norms become striking: holdable as palpable things. Once we are
                     stricken, there is still much work left to do. The hardest work can be
                     recognizing how one’s own life is shaped by norms in ways that we did not
                     realize, in ways that cannot simply be transcended. A norm is also a way of
                     living, a way of connecting with others over or around something. We cannot
                     ‘not’ live in relation to norms <ptr target="#ahmed2017" loc="43"/>.
                  </quote></note>
            </p>
            <p>Minimal computing from the labor perspective is thus premised on supporting (and not
               just <q>accommodating</q>) people who are marginalized or silenced by systemic
               directionality. It aims to name problems, call attention to norms, slow down
               investments in productivity, discuss difficult topics, experiment, and refuse to
               feign happiness when maintenance and carework are devalued. This means the degrowth
               of computing’s alienating effects must at the same time recognize alienation as a
               critical position, even if the result is a contradiction.<note> Ahmed explains <quote
                     rend="inline">how feminism can be experienced as life alienation, how we can
                     become estranged from the lives we are living in the very process of
                     recognizing how our lives have been shaped or have taken shape</quote>
                  <ptr target="#ahmed2017" loc="43"/>. Later in the book, she also develops the
                  notion of being an <quote rend="inline">affect alien</quote>
                  <ptr target="#ahmed2017" loc="57"/>. </note> Ahmed states: <quote rend="inline">If
                  alienation is sensation, it is not . . . just or only the sensation of
                  negation</quote>
               <ptr target="#ahmed2017" loc="41"/>. It is <q>studious</q>; it is <q>wonder</q>
               <ptr target="#ahmed2017" loc="41"/>. Ahmed offers a guide to such alienation in her
                  <quote rend="inline">killjoy survival kit</quote>
               <ptr target="#ahmed2017" loc="235–249"/>, and other cultural precedents for engaging
               affect in computing include <title rend="italic">Bodies of Information</title>,
               edited by Jacqueline Wernimont and Elizabeth Losh; zines by Julia Evans, Mimi Onuoha,
               and Mother Cyborg (Diana Nucera); and recommendations made by Katrina Anderson et al.
                  <ptr target="#wernimont2018b"/>
               <ptr target="#anderson2016"/>.<note> See, for instance, Evans’s <title rend="italic"
                     >Help! I’ve Got a Manager! </title>as well as <title rend="italic">A People's
                     Guide to AI</title> by Onuoha and Mother Cyborg <ptr target="#evans2018"/>
                  <ptr target="#onuoha2018"/>. Elsewhere, in their introduction to <title
                     rend="italic">Bodies of Information</title>, Wernimont and Losh unpack an
                  acronym (MEALS) that could easily serve as a foundation for minimal computing from
                  the labor perspective: <quote rend="inline">In our work we use the acronym MEALS
                     as shorthand for a feminist emphasis on how the ‘material, embodied, affective,
                     labor-intensive, and situated character of engagements with computation can
                     operate experientially for users in shared spaces’</quote>
                  <ptr target="#wernimont2018a"/>. Also see their essay, <title rend="quotes">Wear
                     and Care: Feminisms at a Long Maker Table</title>
                  <ptr target="#wernimont2018a"/>. Elsewhere, Anderson et al. <quote rend="inline"
                     >recommend that affective labour be formally recognized, through:
                     Acknowledgement on project, course, and department websites. Acknowledgement in
                     publications and other forms of dissemination. Evaluation for tenure and
                     promotion. Evaluation for grants and other forms of funding</quote>
                  <ptr target="#anderson2016"/>. </note> Each of these publications succeeds at
               moving beyond heroification (<q>Hail the maintainers!</q>) and romantic celebrations
               of maintenance without devaluing or abstracting it from social and material
                  relations.<note> For an example of such heroification, see <ptr
                     target="#russell2016"/>. Even if well-intended, heroification of maintainers
                  and careworkers risks furthering their alienation, masking systemic problems, and
                  ignoring labor conditions. Bengi Akbulut writes: <quote rend="inline">What is
                     largely missing from the celebration of care as the cornerstone of the
                     post-growth transition is how carework is to be organized in a
                     socio-ecologically just future. This is crucial, since re-centering a society
                     around care does not imply gender justice. Quite the contrary, carework has
                     historically been one of the most exploitative, flexible and invisible forms of
                     labor performed by women</quote>
                  <ptr target="#akbulut2017"/>. </note> Parallel steps may include recognizing how
               minimal computing manifests from both a necessity and desire to degrow. This is the
               path to which we now turn. </p>
         </div>
         <div>
            <head>Degrowing Digital Projects: Necessity and Desire </head>
            <p>Degrowth in minimal computing instigates a shift from using technologies to reinvest
               in productivity (“crunch,” increased output, longer hours, more data, jobs rather
               than careers, and technology as a service, for instance) to designing shared
               structures that support technical, organizational, and affective labor as critical
               and creative activities. This is frequently achieved by reducing scope creep, and
               thus we might echo Alex Gil’s question, <quote rend="inline">What do we need?</quote>
               <ptr target="#gil2015"/>. We might also look to <title rend="italic">archipelagos — a
                  journal of Caribbean digital praxis</title> for examples. With co-editor, Kaiama
               L. Glover, Gil describes that journal in the following way:</p>
            <cit><quote rend="block">[W]e have thought through our platform with the same critical
                  eye we cast on the archive, and our resulting infrastructure embodies our
                  principles. We are fully open access and charge no author fees. Our authors retain
                  their copyright. We pursue best indexing, accessibility, and archival practices.
                  We emphasize the primacy of <q>sustainable authorship in plain text.</q><note> In
                     this quoted text, Glover and Gil encode a link to Dennis Tenen and Grant
                     Wythoff’s <title rend="quotes">Sustainable Authorship in Plain Text using
                        Pandoc and Markdown</title>
                     <ptr target="#tenen2014"/>. </note> Our website and PDFs are generated from the
                  same markdown files using Jekyll and ConTeXt, respectively. The resulting website
                  is light-weight and mobile-friendly, acknowledging the importance of mobile
                  phones, bandwidth differentials, and data costs in the Caribbean.</quote>
               <ptr target="#glover2020"/></cit>
            <p>The skeleton of the project, not to mention its editorial and commit history, are
               accessible to readers along with the journal’s technological stack. Readers are also
                  <quote rend="inline">allowed to read, download, copy, distribute, print, search,
                  or link to the full texts of the articles in [the] journal without asking prior
                  permission from the publishers</quote>
               <ptr target="#glover2020"/>. The publication process relies on Markdown and format
               redundancy (PDF and HTML) rather than extensive markup or word processing, and it is
               enhanced by Dublin Core for general metadata needs.<note>
                  <title rend="italic">archipelagos </title>also has a pedagogical dimension in this
                  regard. Gil noted in email communications with us that contributing graduate
                  students learn about the technical labor involved in scholarly editing and
                  publishing. They are compensated for that labor, with attribution, along the way.
               </note> The interface, like the project itself⁠, privileges content and responsive
               design. There are no ads or contrast errors, there is only one menu, the HTML is
               mostly valid, and articles are available in a single column (without distracting
               sidebars). The journal also bypasses a content management system and database and, in
               doing so, reduces the frequency of potential errors and hacks. All of this work is
               done by necessity to facilitate access in the Caribbean and reduce the likelihood of
               alienating readers and researchers there. At one point, Glover and Gil ask, <quote
                  rend="inline">How might we encourage collaboration with, increase accessibility
                  for, and otherwise work to narrow the gap between Caribbeanist researchers,
                  especially those in the North Atlantic academy, and the communities we are
                  committed to serving?</quote>
               <ptr target="#glover2020"/>.</p>
            <p>From the labor perspective, Glover and Gil also articulate minimalism with
               sustainability. They publish the journal’s workflow, render clear its standards and
               structure, bypass subscription fees (including SAAS fees), credit all team members
               (including the designer, architect, and editorial board), and ensure the journal is
               available in English, French, and Spanish. Even though <title rend="italic"
                  >archipelagos</title> relies on GitHub for storage and distribution, the entire
               journal (213.3 MB as of this writing) could easily be downloaded to a USB stick and
               deposited with a library, press, or nonprofit organization, without any need for a
               running version of Ruby or Jekyll.<note> Although popular among researchers and
                  academics, GitHub’s politics, and the politics of using it, have been subject to
                  scrutiny given the platform company’s contract with U.S. Immigration and Customs
                  Enforcement (ICE). Kevin Truong with Vice News reports: <quote rend="inline">The
                     Microsoft-owned software development platform company continues to contract
                     with ICE, despite CEO Nat Friedman sharing in a blog post last year that he
                     strongly disagrees with the Trump administration’s immigration policies</quote>
                  <ptr target="#truong2020"/>.</note> What’s more, Glover, Gil, and the <title
                  rend="italic">archipelagos</title> team provide a low-maintenance, light-footprint
               model for other projects that could integrate and interpret collections housed by
               open-source platforms such as Vault, thereby bridging small, nimble, and focused
               projects with large, persistent, and extensive ones often found in libraries. Their
               model may especially appeal to groups and institutions that are underfunded,
               under-resourced, and/or understaffed. Certainly, the project’s files and open-source
               repository and the files contained within it are crucial here; however, the
               technical, organizational, and affective labor involved in <title rend="italic"
                  >archipelagos</title>’ production is equally important, framed around a dedicated
               team with a clear sense of the sort of scholarship and knowledge work they want to
               see in the world. The project may be what Jonathan Sterne had in mind when, in 2007,
               he called for <quote rend="inline">a whole convivial system of digital components, a
                  convivial digital infrastructure</quote>
               <ptr target="#sterne2007" loc="28"/>.</p>
            <p>The labor of minimal computing may also emerge from a desire to degrow “forever”
               projects. Here, we might ask what relationships we want with technologies and each
               other as we are propelled into the future.<note> Here we are drawing from Walter
                  Benjamin’s treatment of Paul Klee’s <title rend="italic">Angelus Novus </title>in
                  the ninth thesis <title rend="quotes">On the Concept of History</title>
                  <ptr target="#benjamin1940"/>. </note> Keeping in mind that academic FOSS
               initiatives are largely dominated by wealthy, historically white universities, what
               kind of work can other institutions maintain? Or do they wish to maintain? Which
               infrastructures are worth keeping? Which projects are, or should be, prioritized,
               updated, and routinely debugged?<note> See John D. Martin and Carolyn Runyon’s work
                  for an analysis of how digitization projects are prioritized through funding. They
                  write: <quote rend="inline">Of the projects analyzed in this study, 26 focused on
                     digitizing the work and intellectual legacies of individual people. Of these,
                     only one woman was singled out for individual treatment: the ‘Ida M. Tarbell
                     Papers Digitization Project,’ awarded $30,000. Similarly, only one
                     African-American was at the center of a project: ‘Digitizing W.E.B. Du Bois,’
                     awarded $314,787. This means that projects on individual women and black
                     Americans were awarded only 8% of the total $4,225,061 awarded to projects on
                     individuals. All of the rest focused on white men of historical importance.
                     Several, such as Walt Whitman and Thomas Jefferson, had multiple projects
                     representing them</quote>
                  <ptr target="#martin2016" loc="25–26"/>. They add: <quote rend="inline">While
                     white men were likely to be treated as individuals in a given project, other
                     race/ethnic categories and women were treated as groups almost exclusively.
                     Instead of a project focusing on specific historical figures, the narrative and
                     documentary history of these groups is considered at the aggregate level. This
                     disparity is important to note because it speaks to a larger social phenomenon
                     whereby great (white) men stand out for their achievements, but other groups
                     have been largely left to be remembered for their collective struggle</quote>
                  <ptr target="#martin2016" loc="26"/>. See also the work of Martha Nell Smith, Moya
                  Z. Bailey, Tara McPherson, Kim Gallon, and Christina Boyles <ptr
                     target="#smith2007"/>
                  <ptr target="#bailey2011"/>
                  <ptr target="#mcpherson2012"/>
                  <ptr target="#gallon2016"/>
                  <ptr target="#boyles2018"/>. </note> For how long, and by whom? Which tasks do we
               want to automate or offload to scripts, and which do we want to conduct
                  manually?<note> Automation is always about labor and alienation: what work people
                  do and do not want to do, which work they wish to protect, and how the quality and
                  pleasure of work changes with a decrease in manual contribution. </note> If, as
               Susan Brown et al. indicate, <quote rend="inline">Users now firmly expect that
                  scholarly digital publications will be kept up-to-the-minute and respond to user
                  suggestions</quote>
               <ptr target="#brown2009"/>, then minimal computing from the labor perspective
               addresses user (or consumer) expectations directly by accepting and encouraging
               others to accept the fact that the internet and digital materials, like all other
               materials, age, rot, and degrade <ptr target="#kirschenbaum2008"/>; that code does
               not always do what it says <ptr target="#chun2013"/>; that capturing content and
               archiving the web is a <quote rend="inline">messy affair</quote>
               <ptr target="#davis2014"/>; and that even public projects must stop growing at some
               point. Initiatives such as Vault are in positions to organize around this issue and
               educate people on the lived realities of preservation, planned obsolescence, and
               digital labor, where projects are published yet presumably never done <ptr
                  target="#brown2009"/>
               <ptr target="#kirschenbaum2009"/>.<note> For more on planned obsolescence, see Giles
                  Slade’s <title rend="italic">Made to Break: Technology and Obsolescence in America
                  </title>and Kathleen Fitzpatrick’s <title rend="italic">Planned Obsolescence:
                     Publishing, Technology, and the Future of the Academy </title>
                  <ptr target="#slade2006"/>
                  <ptr target="#fitzpatrick2011"/>. The history of planned obsolescence in America
                  follows a capitalist growth paradigm. </note>
            </p>
            <p>Part of this degrowth may imply attention to, if not an embrace of, ephemerality in
               scholarly communication <ptr target="#donaldson2020"/>
               <ptr target="#sample2010"/>. Or, in some cases, the labor response may very well be
                  <q>done</q> or <q>enough,</q> a refutation of the assumption that practitioners
               are service-providers who accumulate piles of technical debt that must be paid
               indefinitely back to users expecting fresh content on demand.<note> As part of the
                     <title rend="italic">Lift Every Voice and Sing </title>project, Donaldson links
                  ephemerality, memory, and minimal computing with Black lives and Black digital
                  humanities: <quote rend="inline">In this moment, one in which we are forced to
                     confront our own fragility, our own ephemerality as (potentially) disappearing
                     bodies amid a global pandemic, minimal computing impels us toward a
                     reassessment of our individual and communal practices and makes apparent the
                     ways we might reject circulating notions of a <q>new normal</q> as we think
                     about the potential to reclaim and reshape community. What might that look
                     like? What is sustainable? What is not? What do we need?</quote>
                  <ptr target="#donaldson2020"/>. Elsewhere, Sample asks: <quote rend="inline"
                     >[M]ust everything be permanent? Must we insist that every cultural object be
                     subjected to the archive?</quote>
                  <ptr target="#sample2010"/>. Sayers also speaks to ephemerality in the context of
                  minimal computing, which may be understood as <quote rend="inline">maximum
                     ephemerality</quote>: <quote rend="inline">Reduce an impulse to inscribe,
                     measure, or visualize with technologies in order to increase the likelihood of
                     experimentation and collective participation</quote>
                  <ptr target="#sayers2016"/>. </note> And yet others may focus on computing and
               labor’s potential role in environmental justice. As Stefania Barca argues, <quote
                  rend="inline">Alienation of the producers from the products of their work is what
                  leads to the reinvestment of surplus into increased production,</quote> and <quote
                  rend="inline">weak unions and virtually non-existent enforcement of labor
                  regulations play a major role in determining the environmental impact of
                  production</quote>
               <ptr target="#barca2019" loc="209–10"/>. Each of these possibilities demonstrates
               why, in the last instance, necessity may be inextricable from desire. </p>
            <p>At UVic, the Endings Project (2020) at the Humanities Computing and Media Centre
               (HCMC) has begun addressing degrowth via technical labor practices.<note> See <ref
                     target="https://projectendings.github.io"
                     >https://projectendings.github.io</ref>. Their website includes their endings
                  principles as well as resources related to preserving digital projects. The
                  Endings Project team consists of Claire Carlin, Ewa Czaykowska-Higgins, Janelle
                  Jenstad, Elizabeth Grove-White, Corey Davis, John Durno, Lisa Goddard, J. Matthew
                  Huculak, Martin Holmes, Stewart Arneill, Greg Newton, Emily Comeau, Sarah Kell,
                  Daniel Martin, Tye Landels-Gruenewald, Jennifer Polack, and Joseph Takeda. </note>
               Although they do not use the term <q>degrow,</q> they argue that <quote rend="inline"
                  >projects⁠ — even digital ones⁠ — need to end</quote>
               <ptr target="#hcmc2020"/>. We agree from the vantage of both desire and necessity.
               The HCMC outlines “endings principles for digital longevity,” consisting of five
               primary components: data, products, processing, documentation, and release
               management. Various aspects of these principles correspond with dimensions of minimal
               computing, such as <quote rend="inline">build a static website with no
                  databases,</quote>
               <quote rend="inline">[d]ata is stored only in formats which conform to open standards
                  and which are amenable to processing,</quote> and <quote rend="inline">every
                  entity in the site has a unique page with a simple URL</quote>
               <ptr target="#hcmc2020"/>.<note> The HCMC’s <q>endings principles</q> would make for
                  an interesting comparison with <title rend="italic">archipelagos</title>,
                  especially on the topics of which programming languages to use (XSLT versus Ruby,
                  for instance) and whether to commit to extensive markup (such as TEI XML) for the
                  purposes of longevity. </note> One potential benefit of the Endings Project is it
               could nudge researchers, especially faculty members, to start their projects with an
               ending in mind and⁠ — recalling Tony Smith’s boast in 1966 — curb the likelihood of
               people <q>phoning in</q> projects for others to build and maintain.<note> See also
                  Joseph Takeda’s <title rend="quotes">Ending Your Digital Humanities Project from
                     the Start</title>
                  <ptr target="#takeda2018"/>.</note> Starting a project with an ending, and a
               roadmap for how to get there, should increase researcher awareness of projects like
               Vault as well as the labor required to publish content and keep the machine running.
               It could also encourage more researcher involvement in maintenance and carework and,
               by extension, degrow researcher alienation from their own projects. Importantly, all
               of these possibilities extend beyond the habituated use of management systems — a
               tendency encouraged by many SAAS paradigms.</p>
            <p>And ultimately, that is what we hope minimal computing from the labor perspective may
               achieve through degrowth: a change in habits, culture, and values, not just
               technologies. We admit it is no small task. </p>

         </div>
      </body>


      <back>
         <listBibl>
            <bibl xml:id="transformdh" label="#TransformDH">
               <title rend="italic">#TransformDH</title>. Accessed October 14, 2021. <ref
                  target="https://transformdh.org/">https://transformdh.org/</ref>. </bibl>
            <bibl xml:id="ahall2018" sortKey="Ahall" label="Åhäll 2018"> Åhäll, Linda. <title
                  rend="quotes">Affect as Methodology: Feminism and the Politics of Emotion.</title>
               <title rend="italic">International Political Sociology</title> vol. 12.1 (2018):
               36–52. <ref target="https://doi.org/10.1093/ips/olx024"
                  >https://doi.org/10.1093/ips/olx024</ref>. </bibl>
            <bibl xml:id="ahmed2017" label="Ahmed 2017"> Ahmed, Sara. <title rend="italic">Living a
                  Feminist Life</title>. Durham, NC: Duke University Press, 2017. </bibl>
            <bibl xml:id="akbulut2017" label="Akbulut 2017"> Akbulut, Bengi. <title rend="quotes"
                  >Carework as Commons: Towards a Feminist Degrowth Agenda.</title>
               <title rend="italic">Degrowth.info</title>, February 2, 2017. <ref
                  target="https://degrowth.info/en/blog/carework-as-commons-towards-a-feminist-degrowth-agenda-2"
                  >https://degrowth.info/en/blog/carework-as-commons-towards-a-feminist-degrowth-agenda-2</ref>.</bibl>
            <bibl xml:id="anderson2016" label="Anderson et al. 2016"> Anderson, Katrina. et al.
                  <title rend="quotes">Student Labour and Training in Digital Humanities.</title>
               <title rend="italic">Digital Humanities Quarterly</title> vol. 10.1 (2016). <ref
                  target="http://www.digitalhumanities.org/dhq/vol/10/1/000233/000233.html"
                  >http://www.digitalhumanities.org/dhq/vol/10/1/000233/000233.html</ref>. </bibl>
            <bibl xml:id="aneesh2006" label="Aneesh 2006"> Aneesh, A. <title rend="italic">Virtual
                  Migration: The Programming of Globalization</title>. Durham, NC: Duke University
               Press, 2006.</bibl>
            <bibl xml:id="bailey2011" label="Bailey 2011"> Bailey, Moya Z. <title rend="quotes">All
                  the Digital Humanists Are White, All the Nerds Are Men, but Some of Us Are
                  Brave.</title>
               <title rend="italic">Journal of Digital Humanities</title> vol. 1.1 (2011). <ref
                  target="http://journalofdigitalhumanities.org/1-1/all-the-digital-humanists-are-white-all-the-nerds-are-men-but-some-of-us-are-brave-by-moya-z-bailey/"
                  >http://journalofdigitalhumanities.org/1-1/all-the-digital-humanists-are-white-all-the-nerds-are-men-but-some-of-us-are-brave-by-moya-z-bailey/</ref>.</bibl>
            <bibl xml:id="balbus1986" label="Balbus 1986"> Balbus, Isaac D. <title rend="quotes"
                  >Disciplining Women: Michel Foucault and the Power of Feminist Discourse,</title>
               <title rend="italic">Praxis International</title> vol. 5.4 (1986): 466–483. </bibl>
            <bibl xml:id="barad2007" label="Barad 2007"> Barad, Karen. <title rend="italic">Meeting
                  the Universe Halfway: Quantum Physics and the Entanglement of Matter and
                  Meaning</title>. Durham, NC: Duke University Press, 2007.</bibl>
            <bibl xml:id="barca2019" label="Barca 2019"> Barca, Stefania. <title rend="quotes">The
                  Labor(s) of Degrowth.</title>
               <title rend="italic">Capitalism Nature Socialism</title> vol. 30.2 (2019): 207–216.
                  <ref target="https://doi.org/10.1080/10455752.2017.1373300"
                  >https://doi.org/10.1080/10455752.2017.1373300</ref>.</bibl>
            <bibl xml:id="barr2018" label="Barr 2018"> Barr, Adam.<title rend="italic"> The Problem
                  with Software: Why Smart Engineers Write Bad Code.</title> Cambridge, MA: MIT
               Press, 2018.</bibl>
            <bibl xml:id="barth1986" label="Barth 1986"> Barth, John.<title rend="quotes">A Few
                  Words about Minimalism.</title>
               <title rend="italic">New York Times</title>, December 28, 1986. <ref
                  target="https://archive.nytimes.com/www.nytimes.com/books/98/06/21/specials/barth-minimalism.html"
                  >https://archive.nytimes.com/www.nytimes.com/books/98/06/21/specials/barth-minimalism.html</ref>. </bibl>
            <bibl xml:id="benjamin1940" label="Benjamin 1940"> Benjamin, Walter. <title
                  rend="quotes">On the Concept of History</title>, trans. H. Zohn. In <title
                  rend="italic">Selected Writings</title>, vol. 4, 1938–1940, edited by Eiland,
               Howard and Michael W. Jennings, 389–400. Cambridge, MA: Belknap Press of Harvard
               University Press 2003. </bibl>
            <bibl xml:id="botha2017" label="Botha 2017"> Botha, Marc. <title rend="italic">A Theory
                  of Minimalism</title>. NY: Bloomsbury, 2017.</bibl>
            <bibl xml:id="boyles2018" label="Boyles 2018"> Boyles, Christina. <title rend="quotes"
                  >Counting the Costs: Funding Feminism in the Digital Humanities.</title> In <title
                  rend="italic">Bodies of Information: Intersectional Feminism and Digital
                  Humanities</title>, edited by Jacqueline Wernimont and Elizabeth M. Losh, 93–107.
               Minneapolis: University of Minnesota Press, 2018. <ref
                  target="https://dhdebates.gc.cuny.edu/read/untitled-4e08b137-aec5-49a4-83c0-38258425f145/section/6a48cd20-cfa5-4984-ba32-f531b231865f#ch07"
                  >https://dhdebates.gc.cuny.edu/read/untitled-4e08b137-aec5-49a4-83c0-38258425f145/section/6a48cd20-cfa5-4984-ba32-f531b231865f#ch07</ref>.</bibl>
            <bibl xml:id="brown2018" label="Brown 2018"> Brown, Susan. <title rend="quotes">Delivery
                  Service: Gender and the Political Unconscious of Digital Humanities.</title> In
                  <title rend="italic">Bodies of Information: Intersectional Feminism and Digital
                  Humanities</title>, edited by Jacqueline Wernimont and Elizabeth M. Losh, 261–286.
               Minneapolis: University of Minnesota Press, 2018. <ref
                  target="https://dhdebates.gc.cuny.edu/read/untitled-4e08b137-aec5-49a4-83c0-38258425f145/section/7c07a9eb-fbc7-4b69-8777-82676a3c64ab#ch15"
                  >https://dhdebates.gc.cuny.edu/read/untitled-4e08b137-aec5-49a4-83c0-38258425f145/section/7c07a9eb-fbc7-4b69-8777-82676a3c64ab#ch15</ref>.</bibl>
            <bibl xml:id="brown2009" label="Brown et al. 2009"> Brown, Susan. <title rend="quotes"
                  >Published Yet Never Done: The Tension Between Projection and Completion in
                  Digital Humanities Research.</title>
               <title rend="italic">Digital Humanities Quarterly</title> vol. 3.2 (2009). <ref
                  target="http://www.digitalhumanities.org/dhq/vol/3/2/000040/000040.html"
                  >http://www.digitalhumanities.org/dhq/vol/3/2/000040/000040.html</ref>.</bibl>
            <bibl xml:id="chachra2015" label="Chachra 2015"> Chachra, Debbie. <title rend="quotes"
                  >Why I Am Not a Maker.</title>
               <title rend="italic">The Atlantic, January 23, 2015.</title>
               <ref
                  target="https://www.theatlantic.com/technology/archive/2015/01/why-i-am-not-a-maker/384767/"
                  >https://www.theatlantic.com/technology/archive/2015/01/why-i-am-not-a-maker/384767/</ref>.</bibl>
            <bibl xml:id="chan2018" label="Chan et al. 2018"> Chan, Tiffany, Mara Mills, and Jentery
               Sayers. <title rend="quotes">Optophonic Reading, Prototyping Optophones.</title>
               <title rend="italic">Amodern </title>8 (2018). <ref
                  target="https://amodern.net/article/optophonic-reading/"
                  >https://amodern.net/article/optophonic-reading/</ref>.</bibl>
            <bibl xml:id="chave1990" label="Chave 1990"> Chave, Anna. <title rend="quotes"
                  >Minimalism and the Rhetoric of Power.</title>
               <title rend="italic">Arts Magazine</title> vol. 64.5 (1990): 44-63.</bibl>
            <bibl xml:id="chayka2020" label="Chayka 2020"> Chayka, Kyle. <title rend="italic">The
                  Longing for Less: Living with Minimalism</title>. NY: Bloomsbury, 2020. </bibl>
            <bibl xml:id="chuh2019" label="Chuh 2019"> Chuh, Kandice. <title rend="italic">The
                  Difference Aesthetics Makes: On the Humanities <title rend="quotes">After
                     Man.</title></title> Durham, NC: Duke University Press, 2019.</bibl>
            <bibl xml:id="chun2013" label="Chun 2013"> Chun, Wendy Hui Kyong. <title rend="italic"
                  >Programmed Visions: Software and Memory</title>. Cambridge, MA: MIT Press, 2013.
                  <ref target="https://doi.org/10.1177/1461444811429927d"
                  >https://doi.org/10.1177/1461444811429927d</ref>.</bibl>
            <bibl xml:id="colpitt1990" label="Colpitt 1990"> Coplitt, Frances. <title rend="italic"
                  >Minimal Art: The Critical Perspective</title>. Ann Arbor, MI: University of
               Michigan Press, 1990.</bibl>
            <bibl xml:id="colvard2021" label="Colvard 2021"> Colvard, Chris, Brian Hole, and Kevin
               Kochanski. <title rend="quotes">Hyku Implementations.</title> Accessed October 29,
               2021. <ref target="https://wiki.lyrasis.org/display/hyku/Hyku+Implementations"
                  >https://wiki.lyrasis.org/display/hyku/Hyku+Implementations</ref>.</bibl>
            <bibl xml:id="cupe2018" label="CUPE 2018"> Canadian Union of Public Employees (<title
                  rend="italic">CUPE</title>). <title rend="quotes">Precarious Work on the
                  Rise.</title> CUPE, March 15, 2018. <ref
                  target="https://cupe.ca/precarious-work-rise"
                  >https://cupe.ca/precarious-work-rise</ref>.</bibl>
            <bibl xml:id="davis2014" label="Davis 2014"> Davis, Corey. <title rend="quotes"
                  >Archiving the Web: A Case Study from the University of Victoria.</title>
               <title rend="italic">Code4Lib Journal</title> 26 (2014). <ref
                  target="https://journal.code4lib.org/articles/10015"
                  >https://journal.code4lib.org/articles/10015</ref>.</bibl>
            <bibl xml:id="dictionaryofcomputerscience2016a"
               label="Dictionary of Computer Science 2016a">
               <title rend="quotes">Open-source.</title> In <title rend="italic">A Dictionary of
                  Computer Science</title> (7th ed), edited by Andrew Butterfield, Gerard E. Ngondi,
               and Anne Kerr. Oxford, UK: Oxford University Press, Oxford, 2016.</bibl>
            <bibl xml:id="dictionaryofcomputerscience2016b"
               label="Dictionary of Computer Science 2016b">
               <title rend="quotes">Saas (Software as a Service).</title> In <title rend="italic">A
                  Dictionary of Computer Science</title> (7th ed.), edited by Andrew Butterfield,
               Gerard E. Ngondi, and Anne Kerr. Oxford UK: Oxford University Press, 2016.</bibl>
            <bibl xml:id="dictionaryofist2013a"
               label="Dictionary of Information Science and Technology 2013">
               <title rend="quotes">Software as a Service (SaaS).</title> In <title rend="italic"
                  >Dictionary of Information Science and Technology</title> (2nd Edition), edited
               by Mehdi Khosrow-Pour, 827. Hershey, PA: IGI Global, 2013. <ref
                  target="https://doi.org/10.4018/978-1-4666-2624-9"
                  >https://doi.org/10.4018/978-1-4666-2624-9</ref>.</bibl>
            <bibl xml:id="dijkstra1972" label="Dijkstra 1972"> Dijkstra, Edsger W. <title
                  rend="quotes">The Humble Programmer.</title> 1972 ACM Turing Award Lecture,
               Communications of the Association for Computing Machinery, October 1972. <ref
                  target="https://doi.org/10.1145/355604.361591"
                  >https://doi.org/10.1145/355604.361591</ref>.</bibl>
            <bibl xml:id="donaldson2020" label="Donaldson 2020"> Donaldson, Sonya. <title
                  rend="quotes">Singing the Nation: On Memory, Ephemerality, and the Minimal
                  Computing Model.</title>
               <title rend="italic">Lift Every Voice and Sing,</title> 2020. <ref
                  target="https://elotroalex.github.io/lift/posts/singing-the-nation/"
                  >https://elotroalex.github.io/lift/posts/singing-the-nation/</ref>. </bibl>
            <bibl xml:id="dohe2019" label="Dohe 2019"> Dohe, Kate. <title rend="quotes">Care, Code,
                  and Digital Libraries: Embracing Critical Practice in Digital Library
                  Communities.</title>
               <title rend="italic">In the Library with the Lead Pipe</title>, 2019. <ref
                  target="http://www.inthelibrarywiththeleadpipe.org/2019/digital-libraries-critical-practice-in-communities/"
                  >http://www.inthelibrarywiththeleadpipe.org/2019/digital-libraries-critical-practice-in-communities/</ref>.</bibl>
            <bibl xml:id="edwards2017" label="Edwards and Harris 2017"> Edwards, Sue B. and Duchess
               Harris. <title rend="italic">Hidden Human Computers: The Black Women of NASA</title>.
               North Mankato, MN: Abdo Publishing, 2017.</bibl>
            <bibl xml:id="britannica1998" label="Encyclopedia Britannica 1998">Britannica, The
               Editors of Encyclopedia. <title rend="quotes">Minimalism.</title> Encyclopedia
               Britannica, 20 July 1998, <ref target="https://www.britannica.com/art/Minimalism"
                  >https://www.britannica.com/art/Minimalism</ref>. Accessed 9 September
               2022.</bibl>
            <bibl xml:id="ensmenger2014" label="Ensmenger 2014"> Ensmenger, Nathan. <title
                  rend="quotes">When Good Software Goes Bad: the Surprising Durability of an
                  Ephemeral Technology.</title> The Maintainers Conference, Hoboken, New Jersey,
               April 9, 2014. <ref
                  target="https://homes.luddy.indiana.edu/nensmeng/files/ensmenger-mice.pdf"
                  >https://homes.luddy.indiana.edu/nensmeng/files/ensmenger-mice.pdf</ref>.</bibl>
            <bibl xml:id="engel2018" label="Engel et al. 2018"> Engel, Deena, Lauren Hinkson, Joanna
               Phillips, and Marion Thain. <title rend="quotes">Reconstructing <title rend="italic"
                     >Brandon</title> (1998-1999): A Cross-Disciplinary Digital Humanities Study of
                  Shu Lea Cheang’s Early Web Artwork.</title>
               <title rend="italic">Digital Humanities Quarterly </title> vol. 12.2 (2018). <ref
                  target="http://www.digitalhumanities.org/dhq/vol/12/2/000379/000379.html"
                  >http://www.digitalhumanities.org/dhq/vol/12/2/000379/000379.html</ref>.</bibl>
            <bibl xml:id="evans2018" label="Evans 2018"> Evans, Julia. <title rend="italic">Help!
                  I’ve Got a Manager</title>. Wizard Zines. <ref
                  target="https://wizardzines.com/zines/manager"
                  >https://wizardzines.com/zines/manager</ref>.</bibl>
            <bibl xml:id="ferguson2000" label="Ferguson and Folbre 2000"> Ferguson, Anne and Nancy
               Folbre. <title rend="quotes">Women, Care and the Public Good: A Dialogue.</title> In
                  <title rend="italic">Not for Sale: In Defense of Public Goods</title>, edited by
               Anton Anatole, Milton Fisk, and Nancy Holmstrom, 95–108. Boulder: Westview Press,
               2000. </bibl>
            <bibl xml:id="fitzpatrick2011" label="Fitzpatrick 2011"> Fitzpatrick, Kathleen. <title
                  rend="italic">Planned Obsolescence: Publishing, Technology, and the Future of the
                  Academy</title>. NY: New York University Press, 2011. </bibl>
            <bibl xml:id="foster1996" label="Foster 1996"> Foster. Hal. <title rend="italic">Return
                  of the Real: The Avant-Garde at the End of the Century</title>. Cambridge, MA: MIT
               Press, 1996.</bibl>
            <bibl xml:id="foucault1980" label="Foucault 1980"> Foucault, Michel. <title
                  rend="italic">Power/Knowledge: Selected Interviews and Other Writings,
                  1972-1977</title>, Colin Gordon (ed). NY: Pantheon Books, 1980. </bibl>
            <bibl xml:id="frost2015" label="Frost 2015"> Frost, Hannah. <title rend="quotes"
                  >Community Input, Plus Thoughts on Customization and Configuration.</title>
               <title rend="italic">Hyku, Samvera Community</title>, December 16, 2015. <ref
                  target="https://hyku.samvera.org/2015/12/16/community_input.html"
                  >hyku.samvera.org/2015/12/16/community_input.html</ref>.</bibl>
            <bibl xml:id="fuchs2014" label="Fuchs 2014"> Fuchs, Christian. <title rend="italic"
                  >Digital Labour and Karl Marx</title>. NY: Routledge, New York, 2014.</bibl>
            <bibl xml:id="fuller2005" label="Fuller 2005"> Fuller, Matthew. <title rend="italic"
                  >Media Ecologies: Materialist Energies in Art and Technoculture</title>.
               Cambridge, MA: MIT Press.</bibl>
            <bibl xml:id="gallon2016" label="Gallon 2016"> Gallon, Kim. <title rend="quotes">Making
                  a Case for the Black Digital Humanities.</title> In <title rend="italic">Debates
                  in the Digital Humanities 2017</title>, edited by Matthew K. Gold and Lauren F.
               Klein, 42–49. Minneapolis: University of Minnesota Press, 2016. <ref
                  target="https://dhdebates.gc.cuny.edu/read/untitled/section/fa10e2e1-0c3d-4519-a958-d823aac989eb"
                  >https://dhdebates.gc.cuny.edu/read/untitled/section/fa10e2e1-0c3d-4519-a958-d823aac989eb</ref>. </bibl>
            <bibl xml:id="gil2015" label="Gil 2015"> Gil, Alex. <title rend="quotes">The User, the
                  Learner, and the Machines We Make.</title>
               <title rend="italic">GO::DH Minimal Computing Working Group,</title> May 21, 2015.
                  <ref target="https://go-dh.github.io/mincomp/thoughts/2015/05/21/user-vs-learner/"
                  >https://go-dh.github.io/mincomp/thoughts/2015/05/21/user-vs-learner/</ref>.</bibl>
            <bibl xml:id="gilbert2013" label="Gilbert and Mobley 2013"> Gilbert, Heather and Tyler
               Mobley. <title rend="quotes">Breaking Up with CONTENTdm: Why and How One Institution
                  Took the Leap to Open Source.</title>
               <title rend="italic">Code4Lib Journal</title> 20 (2013). <ref
                  target="https://journal.code4lib.org/articles/8327"
                  >https://journal.code4lib.org/articles/8327</ref>.</bibl>
            <bibl xml:id="glover2017" label="Glover 2017"> Glover, Cameron. <title rend="quotes">Is
                  Minimalism for Black People?</title>
               <title rend="italic">Pacific Standard,</title> November 23, 2017. <ref
                  target="https://psmag.com/social-justice/is-minimalism-for-black-pepo"
                  >https://psmag.com/social-justice/is-minimalism-for-black-pepo</ref>.</bibl>
            <bibl xml:id="glover2020" label="Glover and Gil 2020"> Glover, Kaiama L. and Alex Gil.
                  <title rend="quotes">About Us.</title>
               <title rend="italic">archipelagos — a journal of Caribbean digital praxis.</title>
               Accessed September 29, 2021. <ref target="http://archipelagosjournal.org/about.html"
                  >http://archipelagosjournal.org/about.html</ref>. </bibl>
            <bibl xml:id="gnu2021" label="GNU 2021">
               <title rend="italic">GNU</title>. <title rend="quotes">What Is GNU?</title>
               <title rend="italic">GNU Operating System</title>, August 7, 2020. <ref
                  target="https://www.gnu.org/home.en.html">https://www.gnu.org/home.en.html</ref>. </bibl>
            <bibl xml:id="gold2009" label="Gold 2009"> Gold, Nicolas. <title rend="quotes"
                  >Service-Oriented Software in the Humanities: A Software Engineering
                  Perspective.</title>
               <title rend="italic">Digital Humanities Quarterly</title> vol. 3.4 (2009). <ref
                  target="http://digitalhumanities.org//dhq/vol/3/4/000072/000072.html"
                  >http://digitalhumanities.org//dhq/vol/3/4/000072/000072.html</ref>.</bibl>
            <bibl xml:id="graham1971" label="Graham 1971"> Graham, John. <title rend="italic">System
                  and Dialectics of Art</title>. Baltimore: Johns Hopkins University Press, 1971.
               Originally published in 1937. </bibl>
            <bibl xml:id="gramsci1971" label="Gramsci 1971"> Gramsci, Antonio. <title rend="italic"
                  >Selections from the Prison Notebooks of Antonio Gramsci</title>, translated by
               Quentin Hoare and Geoffrey Nowell-Smith. NY: International Publishers, 1971.</bibl>
            <bibl xml:id="hall2013" label="Hall and O’Shea 2013"> Hall, Stuart and Alan O’Shea.
                  <title rend="quotes">Common-sense Neoliberalism: The Battle over Common Sense Is a
                  Central Part of Our Political Life.</title>
               <title rend="italic">Soundings</title> 55 (2013): 8-24. </bibl>
            <bibl xml:id="hallett1996" label="Hallett 1996"> Hallett, Cynthia J. <title
                  rend="quotes">Minimalism and the Short Story.</title>
               <title rend="italic">Studies in Short Fiction</title> vol. 33.4 (1996):
               487-495.</bibl>
            <bibl xml:id="hardesty2019" label="Hardesty and Homenda 2019"> Hardesty, Juliet and
               Nicholas Homenda. <title rend="quotes">The Ecosystem of Repository Migration.</title>
               <title rend="italic">Publications</title> vol. 7.1 (2019). <ref
                  target="https://doi.org/10.3390/publications7010016"
                  >https://doi.org/10.3390/publications7010016</ref>.</bibl>
            <bibl xml:id="hayles2005" label="Hayles 2005"> Hayles, N. Katherine. <title
                  rend="italic">My Mother Was a Computer: Digital Subjects and Literary
                  Texts</title>. Chicago: University of Chicago Press, 2005. </bibl>
            <bibl xml:id="hcmc2020" label="HCMC 2020"> Humanities Computing and Media Centre (HCMC).
                  <title rend="italic">The Endings Project,</title> August 8, 2020. <ref
                  target="https://endings.uvic.ca">https://endings.uvic.ca</ref>.</bibl>
            <bibl xml:id="hicks2017" label="Hicks 2017"> Hicks, Mar. <title rend="italic">Programmed
                  Inequality: How Britain Discarded Women Technologists and Lost Its Edge in
                  Computing</title>. Cambridge, MA: MIT Press, 2017.</bibl>
            <bibl xml:id="hornblower1985" label="Hornblower 1985"> Hornblower, Margot. <title
                  rend="quotes">New Yorkers, Artists Tilt Over ‘Arc.’</title>
               <title rend="italic">Washington Post</title>, March 7, 1985. <ref
                  target="https://www.washingtonpost.com/archive/lifestyle/1985/03/07/new-yorkers-artists-tilt-over-arc/a9132351-a9cb-472b-9747-7fc4f473b216/"
                  >https://www.washingtonpost.com/archive/lifestyle/1985/03/07/new-yorkers-artists-tilt-over-arc/a9132351-a9cb-472b-9747-7fc4f473b216/</ref>.</bibl>
            <bibl xml:id="illich1973" label="Illich 1973"> Illich, Ivan. <title rend="italic">Tools
                  for Conviviality</title>. NY: Harper &amp; Row, 1973.</bibl>
            <bibl xml:id="jackson2014" label="Jackson 2014"> Jackson, Steven J. <title rend="quotes"
                  >Rethinking Repair.</title> In <title rend="italic">Media Technologies: Essays on
                  Communication, Materiality and Societ</title>y, edited by Tarleton Gillespie,
               Pablo J. Boczkowski, and Kristen A. Foot, 221–240. Cambridge, MA: MIT Press, 2014. </bibl>
            <bibl xml:id="judd2002" label="Judd 2002"> Judd, Donald. <title rend="quotes">Specific
                  Objects.</title> In <title rend="italic">Donald Judd, Early Work
               1955-1968</title>, Kellein, Thomas (ed)<title rend="italic">.</title> NY: Distributed
               Art Pub Inc, 2002.</bibl>
            <bibl xml:id="jullien2009" label="Jullien 2009"> Jullien, Nicolas. <title rend="quotes"
                  >A Historical Analysis of the Emergence of Free Cooperative Software
                  Production.</title> In <title rend="italic">Encyclopedia of Multimedia Technology
                  and Networking</title>, edited by Margherita Pagani, 605–612. Hershey, PA: IGI
               Global, 2009. <ref target="http://doi:10.4018/978-1-60566-060-8.ch001"
                  >http://doi:10.4018/978-1-60566-060-8.ch001</ref>.</bibl>
            <bibl xml:id="kirschenbaum2008" label="Kirschenbaum 2008"> Kirschenbaum, Matthew <title
                  rend="italic">Mechanisms: New Media and the Forensic Imagination</title>.
               Cambridge, MA: MIT Press, 2008.</bibl>
            <bibl xml:id="kirschenbaum2009" label="Kirschenbaum 2009"> Kirschenbaum, Matthew. <title
                  rend="quotes">Done: Finishing Projects in the Digital Humanities</title>
               <title rend="italic">Digital Humanities Quarterly </title> vol. 3.2 (2009). <ref
                  target="http://www.digitalhumanities.org/dhq/vol/3/2/000037/000037.html"
                  >http://www.digitalhumanities.org/dhq/vol/3/2/000037/000037.html</ref>. </bibl>
            <bibl xml:id="knuth1968" label="Knuth 1968"> Knuth, Donald. <title rend="italic">The Art
                  of Computer Programming, Volume 1: Fundamental Algorithms</title>. Boston:
               Addison-Wesley, 1968. </bibl>
            <bibl xml:id="knuth1974" label="Knuth 1974"> Knuth, Donald. <title rend="quotes"
                  >Structured Programming with Go To Statements.</title>
               <title rend="italic">ACM Computing Surveys</title> vol. 6.4 (1974). <ref
                  target="https://doi.org/10.1145/356635.356640"
                  >https://doi.org/10.1145/356635.356640</ref>.</bibl>
            <bibl xml:id="kretzschmar2009" label="Kretzschmar, Jr. 2009"> Kretzschmar, Jr., William
               A. <title rend="quotes">Large-Scale Humanities Computing Projects: Snakes Eating
                  Tails, or Every End is a New Beginning?</title>
               <title rend="italic">Digital Humanities Quarterly</title> vol. 3.2 (2009). <ref
                  target="http://www.digitalhumanities.org/dhq/vol/3/2/000038/000038.html"
                  >http://www.digitalhumanities.org/dhq/vol/3/2/000038/000038.html</ref>.</bibl>
            <bibl xml:id="kriss2019" label="Kriss 2019"> Kriss, J. <title rend="quotes">Minimal
                  Computing.</title>
               <title rend="italic">Jesse Kriss</title>, January 31, 2019. <ref
                  target="shttps://tilde.tinyserver.club/~jkriss/writing/minimal-computing"
                  >shttps://tilde.tinyserver.club/~jkriss/writing/minimal-computing</ref>.</bibl>
            <bibl xml:id="latour1988" label="Latour 1988"> Latour, Bruno. <title rend="italic"
                  >Science in Action: How to Follow Scientists and Engineers through
               Society</title>. Cambridge, MA: Harvard University Press, 1987.</bibl>
            <bibl xml:id="lientz1980" label="Lientz and Swanson 1980"> Lientz, Bennet P. and E.
               Burton Swanson (eds). <title rend="italic">Software Maintenance Management</title>.
               Boston: Addison-Wesley Publishing, 1980.</bibl>
            <bibl xml:id="macpherson2014" label="Macpherson 2014"> Macpherson, Shaun. <title
                  rend="quotes">‘A Computer for the Rest of You’: Human-Computer Interaction in the
                  Eversion.</title> M.A. thesis, 2014. University of Victoria.</bibl>
            <bibl xml:id="martin2016" label="Martin and Runyon 2016"> Martin, John D. and Carolyn
               Runyon. <title rend="quotes">Digital Humanities, Digital Hegemony: Exploring Funding
                  Practices and Unequal Access in the Digital Humanities.</title>
               <title rend="italic">ACM SIGCAS Computers and Society</title> vol. 46.1 (2016). <ref
                  target="https://doi.org/10.1145/2908216.2908219"
                  >https://doi.org/10.1145/2908216.2908219</ref>.</bibl>
            <bibl xml:id="marx1976" label="Marx 1976"> Marx, Karl. <title rend="italic">Capital: A
                  Critique of Political Economy</title>, translated by Ben Fowkes. NY: Vintage,
               1976. </bibl>
            <bibl xml:id="mattern2018" label="Mattern 2018"> Mattern, Shannon. <title rend="quotes"
                  >Maintenance and Care.</title>
               <title rend="italic">Places Journal</title> (2018). <ref
                  target="https://doi.org/10.22269/181120"
               >https://doi.org/10.22269/181120</ref>.</bibl>
            <bibl xml:id="mcmillan2017" label="McMillan Cottom 2017"> McMillan Cottom, Tressie.
                  <title rend="italic">Lower Ed: The Troubling Rise of For-Profit Colleges in the
                  New Economy</title>. NY: The New Press, 2018.</bibl>
            <bibl xml:id="mcpherson2012" label="McPherson 2012"> McPherson, Tara. <title
                  rend="quotes">Why Are the Digital Humanities So White? or Thinking the Histories
                  of Race and Computation.</title> In <title rend="italic">Debates in the Digital
                  Humanities</title>, edited by Matthew K. Gold, 139-160. Minneapolis: University of
               Minnesota Press, 2012. <ref
                  target="https://dhdebates.gc.cuny.edu/read/untitled-88c11800-9446-469b-a3be-3fdb36bfbd1e/section/20df8acd-9ab9-4f35-8a5d-e91aa5f4a0ea"
                  >https://dhdebates.gc.cuny.edu/read/untitled-88c11800-9446-469b-a3be-3fdb36bfbd1e/section/20df8acd-9ab9-4f35-8a5d-e91aa5f4a0ea</ref>.</bibl>
            <bibl xml:id="meyer2001" label="Meyer 2001"> Meyer, James. <title rend="italic"
                  >Minimalism: Art and Polemics in the Sixties</title>. New Haven: Yale University
               Press, 2004.</bibl>
            <bibl xml:id="mita2018" label="Mita et al. 2018"> Mita, Amanda, Zachary Pelli, Kimberly
               Reamer, and Sharon Ince. <title rend="quotes">CONTENTdm to Digital Commons:
                  Considerations and Workflows.</title>
               <title rend="italic">Journal of Archival Organization</title> 15 (2018): 58-70. <ref
                  target="https://doi.org/10.1080/15332748.2019.1609308"
                  >https://doi.org/10.1080/15332748.2019.1609308</ref>.</bibl>
            <bibl xml:id="moraga1983" label="Moraga and Anzaldúa 1983"> Moraga, Cherríe and Gloria
               Anzaldúa. <title rend="italic">This Bridge Called My Back: Writings by Radical Women
                  of Color</title>. Latham, NY: Kitchen Table, Women of Color Press, 1983.</bibl>
            <bibl xml:id="murphy2012" label="Murphy 2012"> Murphy, Michelle. <title rend="italic"
                  >Seizing the Means of Reproduction: Entanglements of Feminism, Health, and
                  Technoscience</title>. Durham, NC: Duke University Press, 2012. </bibl>
            <bibl xml:id="nakamura2009" label="Nakamura 2009"> Nakamura, Lisa. <title rend="quotes"
                  >Don’t Hate the Player, Hate the Game: The Racialization of Labor in World of
                  Warcraft.</title>
               <title rend="italic">Critical Studies in Media Communication</title> vol. 26.2
               (2009): 128-44.</bibl>
            <bibl xml:id="obendorf2009" label="Obendorf 2009"> Obendorf, Hartmut. <title
                  rend="italic">Minimalism: Designing Simplicity</title>. London: Springer-Verlag,
               2009.</bibl>
            <bibl xml:id="onuoha2018" label="Onuoha and Mother Cyborg 2018"> Onuoha, Mimi and Mother
               Cyborg. <title rend="italic">A People’s Guide to AI</title>. Detroit, Allied Media
               Projects, 2018.</bibl>
            <bibl xml:id="oroza2006" label="Oroza 2006"> Oroza, Ernesto. <title rend="italic">For an
                  Architecture of Necessity and Disobedience</title>. Self-published (2006). <ref
                  target="http://architectureofnecessity.com"
                  >http://architectureofnecessity.com</ref>.</bibl>
            <bibl xml:id="oxford2007" label="Oxford 2007">
               <title rend="quotes">Minimalism.</title> In <title rend="italic">The Concise Oxford
                  English Dictionary of Music</title>, edited by Michael Kennedy and Joyce B.
                  Kennedy<title rend="italic">. </title>Oxford: Oxford University Press, 2007. <ref
                  target="https://doi.org/10.1093/acref/9780199203833.001.0001"
                  >https://doi.org/10.1093/acref/9780199203833.001.0001</ref>
            </bibl>
            <bibl xml:id="pbs1999" label="PBS 1999">
               <title rend="quotes">Richard Serra’s <title rend="italic">Tilted Arc</title>.</title>
               <title rend="italic">Culture Shock. </title>WGBH Interactive and the Public
               Broadcasting Service (PBS), 1999. <ref
                  target="https://www.pbs.org/wgbh/cultureshock/flashpoints/visualarts/tiltedarc.html"
                  >https://www.pbs.org/wgbh/cultureshock/flashpoints/visualarts/tiltedarc.html</ref>. </bibl>
            <bibl xml:id="plant1997" label="Plant 1997"> Plant, Sadie. <title rend="italic">Zeroes
                  and Ones: Digital Women and the New Technoculture</title>. NY: Doubleday,
               1997.</bibl>
            <bibl xml:id="posner2012" label="Posner 2012"> Posner, Miriam. <title rend="quotes">Some
                  Things to Think about before You Exhort Everyone to Code.</title>
               <title rend="italic">Miriam Posner’s Blog, </title>February 29, 2012. <ref
                  target="https://miriamposner.com/blog/some-things-to-think-about-before-you-exhort-everyone-to-code/"
                  >https://miriamposner.com/blog/some-things-to-think-about-before-you-exhort-everyone-to-code/</ref>.</bibl>
            <bibl xml:id="risam2018" label="Risam 2018"> Risam, Roopika. <title rend="quotes">What
                  Passes for Human?: Undermining the Universal Subject in Digital Humanities
                  Praxis.</title> In <title rend="italic">Bodies of Information: Intersectional
                  Feminism and Digital Humanities</title> edited by Jacqueline Wernimont and
               Elizabeth M. Losh, 39-56. Minneapolis: University of Minnesota Press, 2018. <ref
                  target="https://dhdebates.gc.cuny.edu/read/untitled-4e08b137-aec5-49a4-83c0-38258425f145/section/34d51cdb-2a89-4e4b-9762-bf6461cf0bb7#ch03"
                  >https://dhdebates.gc.cuny.edu/read/untitled-4e08b137-aec5-49a4-83c0-38258425f145/section/34d51cdb-2a89-4e4b-9762-bf6461cf0bb7#ch03</ref>.</bibl>
            <bibl xml:id="roberts2019" label="Roberts 2019"> Roberts, Sarah T. <title rend="italic"
                  >Behind the Screen: Content Moderation in the Shadows of Social Media</title>. New
               Haven: Yale University Press, 2019.</bibl>
            <bibl xml:id="rosner2014" label="Rosner and Ames 2014"> Rosner, Daniela K. and Morgan G.
               Ames. <title rend="quotes">Designing for Repair? Infrastructures and Materialities of
                  Breakdown.</title>
               <title rend="italic">Proceedings of the 17th ACM Conference on Computer Supported
                  Cooperative Work &amp; Social Computing</title>, Baltimore, Maryland, February
               2014. <ref target="https://doi.org/10.1145/2531602.2531692"
                  >https://doi.org/10.1145/2531602.2531692</ref>.</bibl>
            <bibl xml:id="russell2016" label="Russell and Vinsel 2016"> Russell, Andrew and Lee
               Vinsel. <title rend="quotes">Hail the Maintainers.</title>
               <title rend="italic">The Maintainers,</title> April 7, 2016. <ref
                  target="https://aeon.co/essays/innovation-is-overvalued-maintenance-often-matters-more"
                  >https://aeon.co/essays/innovation-is-overvalued-maintenance-often-matters-more</ref>.</bibl>
            <bibl xml:id="sample2010" label="Sample 2010"> Sample, Mark. <title rend="quotes">The
                  Archive or the Trace: Cultural Permanence and the Fugitive Text.</title>
               <title rend="italic">Sample Reality,</title> January 18, 2010. <ref
                  target="https://www.samplereality.com/2010/01/18/the-archive-or-the-trace-cultural-permanence-and-the-fugitive-text/"
                  >https://www.samplereality.com/2010/01/18/the-archive-or-the-trace-cultural-permanence-and-the-fugitive-text/</ref>. </bibl>
            <bibl xml:id="samvera2021" label="Samvera 2021">
               <title rend="quotes">Samvera Code of Conduct and Anti-Harassment Policy,</title>
               2021. <ref
                  target="https://samvera.org/home/samvera-code-of-conduct-and-anti-harassment-policy/"
                  >https://samvera.org/home/samvera-code-of-conduct-and-anti-harassment-policy/</ref>
            </bibl>
            <bibl xml:id="sayers2016" label="Sayers 2016"> Sayers, Jentery. <title rend="quotes"
                  >Minimal Definitions (tl;dr version).</title>
               <title rend="italic">GO::DH Minimal Computing Working Group,</title> October 3, 2016.
                  <ref target="https://go-dh.github.io/mincomp/thoughts/2016/10/03/tldr/"
                  >https://go-dh.github.io/mincomp/thoughts/2016/10/03/tldr/</ref>.</bibl>
            <bibl xml:id="sayers2017" label="Sayers 2017"> Sayers, Jentery. <title rend="quotes"
                  >Introduction: ‘I Don’t Know All the Circuitry.’</title> In <title rend="italic"
                  >Making Things and Drawing Boundaries: Experiments in the Digital
                  Humanities</title>, edited by Jentery Sayers, 1–18. Minneapolis: University of
               Minnesota Press, 2017. <ref
                  target="https://dhdebates.gc.cuny.edu/read/untitled-aa1769f2-6c55-485a-81af-ea82cce86966/section/7d8fca82-c6ca-480f-bf17-1df4a2cdb577"
                  >https://dhdebates.gc.cuny.edu/read/untitled-aa1769f2-6c55-485a-81af-ea82cce86966/section/7d8fca82-c6ca-480f-bf17-1df4a2cdb577</ref>. </bibl>
            <bibl xml:id="sayers2013" label="Sayers and Dietrich 2013"> Sayers, Jentery and Craig
               Dietrich. <title rend="quotes">After the Document Model for Scholarly Communication:
                  Some Considerations for Authoring with Rich Media.</title>
               <title rend="italic">Digital Studies/Le Champ Numérique</title> vol. 3.2 (2013). <ref
                  target="http://doi.org/10.16995/dscn.237"
               >http://doi.org/10.16995/dscn.237</ref>.</bibl>
            <bibl xml:id="scholz2013" label="Scholz 2013"> Scholz, Trebor (ed). <title rend="italic"
                  >Digital Labor: The Internet as Playground and Factory</title>. NY: Routledge,
               2013.</bibl>
            <bibl xml:id="shirazi2017" label="Shirazi 2017"> Shirazi, Roxanne. <title rend="quotes"
                  >Reproducing the Academy: Librarians and the Question of Service in the Digital
                  Humanities.</title> In <title rend="italic">Making Things and Drawing Boundaries:
                  Experiments in the Digital Humanities</title>, edited by Jentery Sayers, 86–94.
               Minneapolis: University of Minnesota Press, 2017. </bibl>
            <bibl xml:id="slade2006" label="Slade 2006"> Slade, Giles. <title rend="italic">Made to
                  Break: Technology and Obsolescence in America</title>. Cambridge, MA: Harvard
               University Press, 2006. </bibl>
            <bibl xml:id="smith2007" label="Smith 2007"> Smith, Martha Nell. <title rend="quotes"
                  >The Human Touch Software of the Highest Order: Revisiting Editing as
                  Interpretation.</title>
               <title rend="italic">Textual Cultures</title> vol. 2.1 (2007): 1–15.</bibl>
            <bibl xml:id="smithies2011" label="Smithies 2011"> Smithies, James. <title rend="quotes"
                  >A View from IT.</title>
               <title rend="italic">Digital Humanities Quarterly </title> vol. 5.3 (2011). <ref
                  target="http://digitalhumanities.org/dhq/vol/5/3/000107/000107.html"
                  >http://digitalhumanities.org/dhq/vol/5/3/000107/000107.html</ref>.</bibl>
            <bibl xml:id="smithies2018" label="Smithies 2018"> Smithies, James. <title rend="quotes"
                  >Full Stack DH: Building a Virtual Research Environment on a Raspberry Pi.</title>
               In <title rend="italic">Making Things and Drawing Boundaries: Experiments in the
                  Digital Humanities</title>, edited by Jentery Sayers, 102-114. Minneapolis:
               University of Minnesota Press, 2018. <ref
                  target="https://dhdebates.gc.cuny.edu/read/untitled-aa1769f2-6c55-485a-81af-ea82cce86966/section/859c8bb8-df9d-46e9-8372-334bbbb71926"
                  >https://dhdebates.gc.cuny.edu/read/untitled-aa1769f2-6c55-485a-81af-ea82cce86966/section/859c8bb8-df9d-46e9-8372-334bbbb71926</ref>.</bibl>
            <bibl xml:id="stella1995" label="Stella 1995">
               <title rend="quotes">Bruce Glaser: Questions to Stella and Judd.</title> In <title
                  rend="italic">Minimal Art: A Critical Anthology</title>, edited by Gregory
               Battcock, 148-164. Berkeley: University of California Press, 1995. </bibl>
            <bibl xml:id="sterne2007" label="Sterne 2007"> Sterne, Jonathan. <title rend="quotes"
                  >Out with the Trash: On the Future of New Media.</title> In <title rend="italic"
                  >Residual Media,</title> edited by Charles R. Acland, 16-31. Minneapolis:
               University of Minnesota Press, 2007. </bibl>
            <bibl xml:id="strickland1993" label="Strickland 1993"> Strickland, Edward. <title
                  rend="italic">Minimalism: Origins</title>. Bloomington, IN: Indiana University
               Press, 1993. </bibl>
            <bibl xml:id="takeda2018" label="Takeda 2018"> Takeda, Joseph. <title rend="quotes"
                  >Ending Your Digital Humanities Project from the Start.</title>
               <title rend="italic">projectEndings</title>, October 2, 2018. <ref
                  target="https://github.com/projectEndings/Endings/tree/master/presentations/UBC_DHMixer"
                  >https://github.com/projectEndings/Endings/tree/master/presentations/UBC_DHMixer</ref>.</bibl>
            <bibl xml:id="tenen2014" label="Tenen and Wythoff 2014"> Tenen, Dennis. and Grant
               Wythoff. <title rend="quotes">Sustainable Authorship in Plain Text using Pandoc and
                  Markdown.</title>
               <title rend="italic">The Programming Historian</title> 3 (2014). <ref
                  target="https://doi.org/10.46430/phen0041"
               >https://doi.org/10.46430/phen0041</ref>.</bibl>
            <bibl xml:id="truong2020" label="Truong 2020"> Truong, Kevin. <title rend="quotes">The
                  Open Source Community Is Calling on Github to ‘Drop ICE.’</title>
               <title rend="italic">Vice News: Motherboard,</title> July 20, 2020. <ref
                  target="https://www.vice.com/en_ca/article/m7jpgy/open-source-community-changing-github-avatars-drop-ice"
                  >https://www.vice.com/en_ca/article/m7jpgy/open-source-community-changing-github-avatars-drop-ice</ref>. </bibl>
            <bibl xml:id="wark2015" label="Wark 2015"> Wark, Mackenzie. <title rend="italic"
                  >Molecular Red: Theory for the Anthropocene</title>. London: Verso, 2015. </bibl>
            <bibl xml:id="wernimont2013" label="Wernimont 2013"> Wernimont, Jacqueline. <title
                  rend="quotes">Whence Feminism? Assessing Feminist Interventions in Digital
                  Literary Archives.</title>
               <title rend="italic">Digital Humanities Quarterly</title> vol. 7.1 (2003). <ref
                  target="http://www.digitalhumanities.org/dhq/vol/7/1/000156/000156.html"
                  >http://www.digitalhumanities.org/dhq/vol/7/1/000156/000156.html</ref>. </bibl>
            <bibl xml:id="wernimont2018a" label="Wernimont and Losh 2018a"> Wernimont, Jacqueline
               and Elizabeth M. Losh. <title rend="quotes">Wear and Care Feminisms at a Long Maker
                  Table.</title> In <title rend="italic">The Routledge Companion to Media Studies
                  and Digital Humanities</title>, edited by Jentery Sayers, 97-107. NY: Routledge,
               2018. <ref target="https://scholarworks.wm.edu/asbookchapters/5/"
                  >https://scholarworks.wm.edu/asbookchapters/5/</ref>.</bibl>
            <bibl xml:id="wernimont2018b" label="Wernimont and Losh 2018b"> Wernimont, Jacqueline
               and Elizabeth M. Losh (eds). <title rend="italic">Bodies of Information:
                  Intersectional Feminism and Digital Humanities</title>. Minneapolis: University of
               Minnesota Press, 2018.</bibl>
         </listBibl>
      </back>
   </text>
</TEI>
