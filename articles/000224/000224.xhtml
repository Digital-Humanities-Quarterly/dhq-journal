<html xmlns="http://www.w3.org/1999/xhtml">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <title>[PREVIEW] DHQ: Digital Humanities Quarterly: A Textual History of Mozilla: Using Topic Modeling to Trace Sociocultural
         Influences on Software Development
      </title>
      <link href="../../common/css/dhq.css" type="text/css" rel="stylesheet" />
      <link href="../../common/css/dhq_screen.css" media="screen" type="text/css" rel="stylesheet" />
      <link href="../../common/css/dhq_print.css" media="print" type="text/css" rel="stylesheet" /><style type="text/css">
        #mainContent {
          float: none;
          padding-top: 2em;
          padding-left: 4em;
          padding-right: 4em;
          margin-left: 225px;
           
        }</style></head>
   <body>
      <div id="mainContent">
         <div xmlns:dhqBiblio="http://digitalhumanities.org/dhq/ns/biblio" class="DHQarticle">
            <div id="pubInfo">Preview<br />Volume  Number 
            </div>
            <div class="toolbar">
               <form id="taporware" action="get">
                  <div><a href="/dhq/preview/index.html">Preview</a>
                      | 
                     <a rel="external" href="/dhq/vol///000224.xml">XML</a>
                     
                     | 
                     		   Discuss
                     			(<a href="/dhq/vol///000224/000224.html#disqus_thread" data-disqus-identifier="000224">
                        				Comments
                        			</a>)
                     
                  </div>
               </form>
            </div>
            
            <div class="DHQheader">
               
               
               
               
               <h1 class="articleTitle">A Textual History of Mozilla: Using Topic Modeling to Trace
                  Sociocultural Influences on Software Development
               </h1>
               
               <div class="author"><span style="color: grey">Michael L. Black</span> &lt;<a href="mailto:michael_black_at_uml_dot_edu" onclick="javascript:window.location.href='mailto:'+deobfuscate('michael_black_at_uml_dot_edu'); return false;" onkeypress="javascript:window.location.href='mailto:'+deobfuscate('michael_black_at_uml_dot_edu'); return false;">michael_black_at_uml_dot_edu</a>&gt;, University of Massachusetts Lowell
               </div>
               
               
               
               
               
               
               
               
               <span class="Z3988" title="url_ver=Z39.88-2004&amp;ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rfr_id=info%3Asid%2Fzotero.org%3A2&amp;rft.genre=article&amp;rft.atitle=A%20Textual%20History%20of%20Mozilla%3A%20Using%20Topic%20Modeling%20to%20Trace%20Sociocultural%20Influences%20on%20Software%20Development&amp;rft.jtitle=Digital%20Humanities%20Quarterly&amp;rft.stitle=DHQ&amp;rft.issn=1938-4122&amp;rft.date=&amp;rft.volume=&amp;rft.issue=&amp;rft.aulast=Black&amp;rft.aufirst=Michael L.&amp;rft.au=Michael L.%20Black"> </span></div>
            
            
            <div id="DHQtext">
               
               
               <div id="abstract">
                  <h2>Abstract</h2>
                  
                  
                  <p>This essay applies a digital humanities methodology to the study of digital media
                     by framing software history as a problem of big data and textual criticism.
                     While many scholars have already identified source code as an important site for
                     the cultural study of software, this essay proposes that close reading is not
                     suited to the scale and scope of modern application software. Applying text
                     analysis tools to large bodies of source code can help address these problems as
                     well as providing a basis for narrativizing its development and
                     contextualization amidst a complex network of economic, political, and other
                     sociocultural processes. Using source code produced over 15 years of development
                     by the Mozilla foundation, this essay argues that software interfaces act as an
                     extension of public relations narratives, often representing a developer's
                     idealized version of their software which may not necessarily correspond with
                     the state of the application's source code. Topic modeling Mozilla's source code
                     allows us to explore a more nuanced narrative of development that shows how
                     Mozilla negotiated between the political ideals of open source software and the
                     corporate ideology of its parent companies.
                  </p>
                  
               </div>
               
               
               
               
               
               <div class="div div0">
                  
                  <h1 class="head">I. Introduction</h1>
                  
                  <div class="counter"><a href="#p1">1</a></div>
                  <div class="ptext" id="p1">Despite a growing interest in the cultural study of source code, few scholars
                     have addressed the complex ways that programming’s inscriptive practices inform
                     the materiality of software. Among the earliest advocates for source code
                     studies in the humanities is technology historian Michael S. Mahoney (1996), who
                     argues that source code could support a style of historiography that escapes
                     from the "who did it first" questions that have been
                     a constant focus of the history of computing and instead permit scholars access
                     to the varying motivations, attitudes, and assumptions programmers have about
                     the processes they model and the users that manipulate them. Studying software
                     from the perspective of source code could also help us to avoid privileging a
                     programmer’s intended representation of software in the sense that we would not
                     be wholly reliant on the interface as a point of entry, allowing us to uncover
                     not just the complex algorithms it sublimates but also the contexts of labor it
                     effaces [<a class="ref" href="#markley1996">Markley 1996</a>, 77]. As an object of study, source
                     code offers us an alternate history, a textual narrative that can complement or
                     counter the ones provided by corporate insiders. Unsurprisingly, source code has
                     recently garnered the interest of scholars in literary studies who want to
                     explore entanglements between natural language and programming by enacting a
                     form of code review that incorporates aesthetic, cultural, and hermeneutic
                     inquiry [<a class="ref" href="#berry2011">Berry 2011</a>]
                     [<a class="ref" href="#black2012">Black 2012</a>]
                     [<a class="ref" href="#marino2006">Marino 2006</a>]
                     [<a class="ref" href="#sample2013">Sample 2013</a>]
                     [<a class="ref" href="#wardripfruin2009">Wardrip-Fruin 2009</a>]. This article is supportive of the belief that
                     source code can be a productive site of inquiry for software studies; however, I
                     contend that "close reading" source code as a methodology is
                     limited in its ability to describe the scale and scope of the sociocultural
                     processes that leave their marks on the iterative inscription of modern
                     application software.
                  </div>
                  
                  <div class="counter"><a href="#p2">2</a></div>
                  <div class="ptext" id="p2"> To address these limitations, I frame source code study as both a problem of
                     textual criticism and of big data. Software is often described as more fluid
                     than other media, but the programs we run on our desktops, laptops, tablets,
                     phones, and other devices represent a fixed moment in software’s development
                     when a continually revised body of coded text is frozen and transformed, or
                     "compiled," into an executable object. Programming can
                     continue but the compiled executable is effectively separated from the source
                     code used to produce it, representing only one edition or
                     "version" of that body of text. As defined by Jerome
                     McGann, the traditional goal of textual criticism has been to establish a single
                     text from multiple versions that represents an author’s final or original
                     intentions [<a class="ref" href="#mcgann1992">McGann 1992</a>, 15]. Yet more recently, textual
                     criticism has shifted towards a practice of documenting the material
                     transmission of a text and collating the various versions into
                     "critical editions". These critical editions allow
                     scholars to view the history of textual changes and interpret them through a
                     variety of historical and theoretical frameworks. Documenting and studying
                     changes to source code over the lifetime of a program’s development would afford
                     scholars similar opportunities in software studies. 
                  </div>
                  
                  <div class="counter"><a href="#p3">3</a></div>
                  <div class="ptext" id="p3">Scholars reviewing source code face the same logistical problems as developers
                     when working with large codebases: tracking and interpreting minute changes in a
                     complex, networked body of textual segments comprised of hundreds of thousands,
                     if not millions, of lines of code and composed by dozens of authors. Many
                     software development models in use today acknowledge these complexities and
                     assume that developers will have a necessarily limited understanding of the
                     software they work on. Developers have adapted to these conditions with the help
                     of semi-automated revision control software like git and Apache Subversion that
                     not only track changes across multiple simultaneously constructed
                     "branches" of inscription but also assist with merging
                     them into distinct "versions". Scholars in the humanities
                     must also turn towards semi-automated methods to engage with
                     "big" sources, and in this article I demonstrate that
                     topic modeling using the latent dirichlet allocation (LDA) algorithm can be
                     applied to source code in order to delineate the structural and textual
                     development of software. Yet when applying LDA to source code, or any form other
                     than cultural data, it is important to do so in ways that reflect the critical
                     and interpretive assumptions we would bring to texts using more traditional
                     humanities methodologies. This study therefore uses a workflow around LDA that,
                     as described below, demonstrates a tacit understanding of how software’s
                     textuality informs its materiality.
                  </div>
                  
                  <div class="counter"><a href="#p4">4</a></div>
                  <div class="ptext" id="p4">This study takes as its object software produced by the Mozilla Foundation.
                     Currently, Mozilla boasts over half a billion users of its software world-wide,
                     and Wikimedia estimates that 14.1% of all web traffic occurs through Mozilla
                     software, making the company the second most popular developer of non-mobile
                     browsers.<a class="noteRef" href="#d4e210">[1]</a> Unlike other web browser developers, Mozilla has a
                     comparatively long history of open source releases, resulting in a textual
                     ancestry that can be traced back nearly 20 years through publicly accessible
                     repositories years from the latest version of the Firefox browser to the open
                     source release of Netscape Communicator. Importantly, Netscape’s decision to
                     release its software as open source and form Mozilla as an office to manage
                     community-driven software development also makes Mozilla’s software an important
                     site to test the political promises of the free and open source software
                     movements. While Mozilla has worked to cultivate a public image of protecting
                     user freedom by maintaining transparency in its development process, this study
                     finds that Mozilla’s software leverages modularity in order to conceal elements
                     of its software from the interface that do not align with the development
                     narratives of its public relations campaigns. While modularity is often
                     discussed in programming as a technique for designing components independently,
                     here it more resembles the social strategy described by Tara McPherson of
                     partitioning off and hiding from view the undesirable <span class="error"><a class="ref" href="#mcpherson2011">#mcpherson2011</a></span>. The textual history of Mozilla’s software thus
                     demonstrates concerns voiced by free and open source software advocates [<a class="ref" href="#stallman2002">Stallman 2002</a>]
                     [<a class="ref" href="#torvalds2001">Torvalds and Diamond 2001</a>, 149], and echoed in broader public contexts
                     by political theorists and activists [<a class="ref" href="#fung2007">Fung et al. 2007</a>]
                     [<a class="ref" href="#lessig2009">Lessig 2009</a>], that making the development process visible alone
                     is not enough to protect the freedoms of users.
                  </div>
                  
                  <div class="counter"><a href="#p5">5</a></div>
                  <div class="ptext" id="p5">Following a brief review of scholarship in new media studies that highlights the
                     need for cultural histories of source code, this essay explains how LDA topic
                     modeling can help address the limitations of close reading if it is part of a
                     theoretically informed methodology. Because the LDA algorithm relies on Bayesian
                     probability to identify word distributions, it tends to favor static portions of
                     text when applied to multiple versions of the same documents. Addressing this
                     technical problem also acknowledges the complex bibliographic history that
                     underlies the materiality of software: a constantly shifting body of source code
                     that reflects assumptions about and reactions to the sociocultural context of an
                     application’s development. A textual history approach to source code allows us
                     to identify moments in software history where its production deviates from the
                     narratives its developers tell, allowing us to step outside of the rhetoric of
                     objectivity and instrumentality that envelopes technoscientific practice.
                     Specifically in this study, I show that textual histories of software can
                     provide a sense of context that allows us to distinguish between design
                     decisions that are made due to technological dependence on past software and
                     ones made due to other factors that technoscientific rhetoric tries to sublimate
                     such as corporate influence, social pressure, or political strategies of
                     self-representation.
                  </div>
                  
               </div>
               
               <div class="div div0">
                  
                  <h1 class="head">II. Background</h1>
                  
                  <div class="div div1">
                     
                     <h2 class="head">a) Using Source Code to Highlight the Cultural Work of Programming</h2>
                     
                     <div class="counter"><a href="#p6">6</a></div>
                     <div class="ptext" id="p6"> As an interdisciplinary field, software studies encompasses many different
                        methodologies; however, most research in this area focuses on describing how
                        users experience software or interact with each other through it. The
                        popularity of hypertext studies among literary scholars during the 1980s and
                        early 90s initially framed software as an interaction between users and
                        textual processes [<a class="ref" href="#aarseth1997">Aarseth 1997</a>]
                        [<a class="ref" href="#bolter1991">Bolter 1991</a>]
                        [<a class="ref" href="#mcgann2001">McGann 2001</a>]
                        [<a class="ref" href="#murray1997">Murray 1997</a>]. In this period, scholars often drew on familiar
                        literary terms related to narratology or semiotics to describe how users
                        could manipulate text in software systems. More recent studies moved away
                        from a focus on software as textual, describing use as an engagement with
                        complex multimodal rendering processes and reflecting the visual shift in
                        computing that accompanied the widespread adoption of graphic user
                        interfaces in the 1990s [<a class="ref" href="#galloway2004">Galloway 2004</a>]
                        [<a class="ref" href="#hayles2008">Hayles 2008</a>]
                        [<a class="ref" href="#manovich2001">Manovich 2001</a>]. In particular, Bolter and Grusin’s (2000)
                        idea that software "remediates" other media
                        within itself helped to open software studies to a wider array of cultural
                        and interpretive heuristics. Alongside close studies of software, research
                        on use practices and cultures of users have also broadened software studies
                        to include ethnographies of user communities [<a class="ref" href="#boellstorff2008">Boellstorff 2008</a>]
                        [<a class="ref" href="#nardi2010">Nardi 2010</a>] as well as projects examining more specifically
                        how race [<a class="ref" href="#nakamura2009">Nakamura 2009</a>], gender [<a class="ref" href="#jansz2010">Jansz et al. 2010</a>],
                        and sexuality [<a class="ref" href="#gray2009">Gray 2009</a>] are understood through software and
                        performed by its users. While this focus on how users interact with and
                        define themselves based on what they see on-screen has done an excellent job
                        of articulating how software is intervening in and altering the course of
                        long-standing sociocultural practices, a user-centric approach affords a
                        necessarily incomplete view of software’s materiality.
                     </div>
                     
                     <div class="counter"><a href="#p7">7</a></div>
                     <div class="ptext" id="p7">If one goal of software studies is to understand the assumptions and
                        motivations that shape programing, then we need a methodology that can
                        expose and map the inscriptive practices that comprise the earliest stages
                        of software’s production. As with other fields of technoscience, the
                        sociocultural assumptions of programmers are often sublimated by an
                        instrumental logic [<a class="ref" href="#latour1987">Latour 1987</a>]; however, placing source code
                        within a cultural context allows us to see how programmers respond to
                        particular cultural moments in ways that studying user experience cannot.
                        Following the theorization of user-friendly design in the 1980s, a primary
                        goal of software design has been to condense complex algorithmic operations
                        into cognitively simpler visual metaphors [<a class="ref" href="#norman1988">Norman 1988</a>]
                        [<a class="ref" href="#winograd1986">Winograd and Flores 1986</a>]. While this strategy has removed barriers of
                        access imposed by technological complexity, software now has a
                        "cryptographic" nature that not only obscures its
                        dependence on hardware but also hides the complex semiotic operations that
                        occur both in response to user input and independently of user input [<a class="ref" href="#kittler1997">Kittler 1997</a>]. Users see a proposed action, indicate that
                        they’d like to execute it, and then see only the results of that action.
                        They are often not allowed to observe the processes that select and execute
                        sets of incremental operations on their behalf nor those performed
                        automatically without notifying or asking permission of the user [<a class="ref" href="#bolter2003">Bolter and Gromala 2003</a>]. Modern software, in short, functions around a
                        "profound ignorance" in the sense that users
                        can perform complicated chains of precise commands without anything more
                        than a very abstract understanding of their actions [<a class="ref" href="#chun2011">Chun 2011</a>]. Whereas in the earliest years of personal computing, users had to act as
                        programmers to design and manage informational processes, there is now a
                        firm divide between the two roles, with programmers making assumptions about
                        how users want to structure and access their data and with users having
                        little choice but to accept these models of data access. If user-friendly
                        design conceals important structural assumptions about how the software we
                        use shapes our digital agency, source code offers an opportunity to expose
                        them, provided we can interpret it in ways that tease out the complex
                        relationships it establishes between users, programmers, and data.
                     </div>
                     
                     <div class="counter"><a href="#p8">8</a></div>
                     <div class="ptext" id="p8">The user interface is not a reliable site to study software change. While
                        software interfaces do often change over time, they serve as a form of
                        self-representation that allows developers to choose deliberately which
                        components to hide from or show to users. <a href="#figure01">Figure
                           1</a> illustrates the relatively static nature of Mozilla’s web
                        browser interface which remained largely unchanged for 13 years following
                        Netscape’s adoption of an open source model in 1998. While Mozilla has
                        adjusted elements of the browser’s visual aesthetic — changing the look of
                        the buttons, the thickness of dividing lines, or the obtrusiveness of its
                        side panel — the functional representation of the browser’s user interface
                        has remained largely static since the introduction of tabbed browsing in
                        version 0.9.5 in 2001. A significant feature addition for its time, the
                        change in user experience introduced by tabs was minor compared to the
                        minimalist re-envisioning of the interface presented by version 4.0 of
                        Firefox in 2011. In short, because the relationship between interface and
                        internals is largely arbitrary, Mozilla’s software outwardly reflects only
                        those internal changes that its developers choose to reveal. Users may
                        notice the browser’s rendering capabilities have increased continually to
                        support the increasingly complex web of HTML, CSS, and Javascript code that
                        comprise modern Internet sites, but these changes are also the result of web
                        developers updating and changing their websites and services. Studying
                        Mozilla’s software from the perspective of its source code could expose
                        changes invisible to users that make possible advances in web language
                        standards, opening them to sociocultural analysis in ways that studying the
                        terse notes developers provide in public changelogs or even those left in
                        their own internal documentation cannot. Already, scholars like those
                        associated with Critical Code Studies have argued that closely reading
                        source code can expose logics not visible in the interface [<a class="ref" href="#marino2006">Marino 2006</a>]; however, any attempt to critically read source
                        code faces limitations of scale and code when applied to modern application
                        software that is comprised of dozens of modules and millions of lines of
                        code.
                     </div>
                     
                     <div id="figure01" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure01.png" rel="external"><img src="resources/images/figure01.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 1. </div>With the exception of adding tabbed browsing in 2001, Mozilla’s
                           software maintained a relatively unchanging look and feel until 2011,
                           when Firefox’s interface was "streamlined". 
                        </div>
                     </div>
                     
                  </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">b) Addressing Problems of Scale with LDA Topic Modeling</h2>
                     
                     <div class="counter"><a href="#p9">9</a></div>
                     <div class="ptext" id="p9">Before considering how text analysis can help us trace software history, it’s
                        important to establish how iterative inscription informs the material
                        production of software. The Mozilla corpus illustrates this process well,
                        see <a href="#figure02">Figure 2</a>. After an initial flurry of large
                        updates that establish a basic core of components, programmers can turn to
                        smaller, incremental updates. Rather than releasing a final version that is
                        left unchanged, or lightly "patched" once or twice to
                        remove bugs, the source code to modern application software is often
                        continually revised and re-compiled, with each successive version
                        representing a fixed moment in that application’s textual history. The
                        expectation that personal computers are always online whenever they are
                        powered on allows developers to produce a steady stream of "rolling
                        releases" that update component periodically rather than
                        bundling them together into monolithic new versions released every year or
                        two years. As Cusumano and Yoffie note, Netscape was an early adopter of
                        this strategy, leveraging the flexibility of its smaller design team into
                        enacting an "agile" strategy that allowed it to
                        compete against Microsoft during the browser wars of the 1990s [<a class="ref" href="#cusumano1998">Cusumano and Yoffie 1998</a>]. Today, rolling release development is now the
                        norm among open source projects and increasingly common in commercial
                        development. Mozilla has even gone so far as to switch to a "once every six weeks" release schedule for Firefox
                        starting with version 5 in 2011. In the 22 months between Mozilla’s switch
                        to rolling release and the end of the data collection period for this study,
                        Mozilla released 15 versions of its browser, compared to 4 versions in the
                        22 months preceding the switch. <a href="#figure02">Figure 2</a> shows
                        how rolling releases encourage frequent, but small, revisions to source
                        code. While there are periods of significant change when the sum of tokens
                        added and removed between versions of Mozilla’s software is greater than 50%
                        of the number of unchanged tokens, the majority of the time that amount is
                        less than 25%. 
                     </div>
                     
                     <div id="figure02" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure02.png" rel="external"><img src="resources/images/figure02.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 2. </div>Graphs for Application Suite and Firefox of the total change in code
                           size over time, calculated as the sum of the tokens changed
                           (ABS(δ-remove) + δ-add) relative to the total number of tokens in the
                           previous version.
                        </div>
                     </div>
                     
                     <div class="counter"><a href="#p10">10</a></div>
                     <div class="ptext" id="p10">Computer scientists have already shown that studying large codebases using
                        automated or semi-automated algorithmic methods can highlight complex
                        patterns not easily traceable in software through close review of source
                        code even with assistance from semi-automated version management systems. In
                        a largely practical context, datamining software repositories can assist in
                        enriching human-written documentation [<a class="ref" href="#witte2008">Witte et al. 2008</a>], predicting
                        future allocation of development resources [<a class="ref" href="#lukins2008">Lukins et al. 2008</a>]
                        [<a class="ref" href="#ying2004">Ying et al. 2004</a>], or predicting the likeliness that bugs will be
                        identified in particular components [<a class="ref" href="#williams2005">Williams and Hollingsworth 2005</a>]. Recently,
                        textmining studies of source code have also shown that these methods can
                        address questions that fall outside of the normal purview of science and
                        engineering, such as identifying patterns of social relationships by tracing
                        source code contributions from developers on the same project [<a class="ref" href="#desouza2005">De Souza et al. 2005</a>]. Just as humanists and social scientists are
                        already adapting machine learning and informational retrieval techniques to
                        study traditional sources within their fields, so too can we draw on these
                        techniques to advance sociocultural studies of software [<a class="ref" href="#clement2013">Clement et al. 2013</a>]
                        [<a class="ref" href="#jockers2013">Jockers 2013</a>]
                        [<a class="ref" href="#underwood2012">Underwood and Sellers 2012</a>].
                     </div>
                     
                     <div class="counter"><a href="#p11">11</a></div>
                     <div class="ptext" id="p11"> In particular, topic modeling can perform the same keyword identification
                        and summarization functions on documents composed in source code that it
                        does when applied to those in natural language. Although there are
                        significant stylistic differences between the two, topic modeling uses a
                        "bag of words" approach that effectively collapses
                        them by ignoring word sequence. Source code documents thus can be
                        preprocessed similarly to natural language documents by treating frequently
                        used functions or flow control operations like "print", "for", or
                        "while" as stopwords; breaking compound variable, object, and
                        function names created through the practice of camel case into their
                        component words; and segmenting the corpus along basic units of composition
                        such as packages, classes, or methods instead of chapters, pages, or
                        paragraphs [<a class="ref" href="#kuhn2007">Kuhn et al. 2007</a>]. As with natural language corpora, the
                        results of a topic model performed on source code can be used to categorize
                        segments, make comparisons between them, and interpret chronological or
                        networked relationships among them [<a class="ref" href="#gethers2010">Gethers and Poshyvanyk 2010</a>]
                        [<a class="ref" href="#linstead2007">Linstead et al. 2007</a>].
                     </div>
                     
                     <div class="counter"><a href="#p12">12</a></div>
                     <div class="ptext" id="p12"> Yet as Thomas, et al. (2011) observes, LDA topic modeling is not well suited
                        to studying a versioned corpus due to the excessive repetition of text. When
                        applying LDA to several versions of source code of the same software, their
                        study found that those passages which remained relatively unchanged
                        effectively assimilated patterns of change emerging in later versions. As a
                        result, distinct patterns of additions and removals to the code base that
                        would be recognizable to human readers were often partially or totally
                        obscured by static passages. This problem, they observed, is due largely to
                        LDA’s reliance on Bayesian probability. LDA assumes that all documents are
                        distinct, and repetition across versions leads LDA to recognize static
                        passages as tokens with a higher probability of co-occurring in documents,
                        making those patterns of word distributions that emerge earlier in the
                        corpus more prominent than those which appear later. To account for this
                        repetition, Thomas, et al. (2011) recommends using the Unix utility "diff," or a similar tool, to isolate the added and
                        removed passages of texts in each successive version. This project
                        replicates their DiffLDA method, described in more detail below.
                     </div>
                     
                     <div class="counter"><a href="#p13">13</a></div>
                     <div class="ptext" id="p13">In addition to its practical benefits, DiffLDA also foregrounds the textual
                        practices that inform software’s material production. Rather than assuming
                        that a single version of software is authentic or final, DiffLDA
                        acknowledges not only that software is produced through the iterative
                        inscription of source code but also that no version should be privileged as
                        more authentic than others. As McGann notes, attempts to locate or
                        reconstruct an edition of a text that represented an author’s "final intentions" are problematic: "many works exist of which it can be said that their
                        authors demonstrated a number of different wishes and intentions about
                        what text they wanted to be presented to the public, and these
                        differences reflect accommodations to change circumstances, and
                        sometimes to changed publics"
                        <span class="error"><a class="ref" href="#mcgann1983">#mcgann1983</a></span>. Thomas, et al (2011) implicitly
                        acknowledges LDA’s algorithms privilege unchanged code from earlier versions
                        of an application as more authoritative than any code added later, even if
                        new contributions also remain static over time. While early source code
                        contributions are important to understanding the general role envisioned for
                        a piece of software, they cannot help us understand how the changing
                        circumstances of its development influenced its composition. As with
                        literary texts, the initial vision for a software project can and often is
                        revised according to the software’s changing role within digital culture. In
                        the case of Mozilla, its vision was and continues to be influenced by
                        changing web standards negotiated with the W3C, shifting corporate
                        relationships, a desire to protect the rights of users by implementing an
                        open source design philosophy, and competition from other browsers, both
                        closed and open source.
                     </div>
                     
                  </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">III. Methods</h2>
                     
                     <div class="counter"><a href="#p14">14</a></div>
                     <div class="ptext" id="p14"> Data collection for this project took place in May 2013. I retrieved all
                        source code related to "major versions" and "significant
                        revisions" of Netscape Communicator, Mozilla Application Suite, and
                        Mozilla Firefox available on Mozilla’s public repository. With the exception
                        of unnumbered and "milestone" early releases, Mozilla
                        follows the convention of using a sequence of three numbers to identify
                        major releases, significant revisions, and minor revisions, respectively
                        (e.g., 4.1.5). I also retrieved early unnumbered releases and milestones —
                        represented by Mozilla simply as M followed by a number — because Mozilla’s
                        press releases described each as a significant step towards the initial
                        public release of its software. Finally, in the interest of maintaining a
                        regular timeline, I did not begin retrieving versions of Firefox until after
                        the final major release of Application Suite when Mozilla’s development
                        resources shifted fully to the newer browser. The resulting corpus
                        represents sixty versions of Mozilla software produced over the course of 15
                        years. A complete list of versions comprising this corpus can be found in
                        <a href="#table01">Table 1</a>. Readers should also note that all
                        graphs in this essay show change over time based on index numbers rather
                        than a regular temporal scale and should therefore refer to <a href="#table01">Table 1</a> to match index number to version numbers
                        and release dates. This table also contains data about the changing corpus
                        size, specifically: the change in total size on disk of all files, the
                        change in size on disk of the C++ files used in topic modeling, as well as
                        the total number of words added or removed between each version.
                     </div>
                     
                     <div id="table01" class="table">
                        <table class="table">
                           <tr class="row">
                              
                              <td valign="top" class="cell">General information about the Mozilla Corpus. Note that the x-axes
                                 of other figures correspond to the Version Index Numbers provided in
                                 the leftmost column of this table.
                              </td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell"><span class="hi bold">Version Index</span></td>
                              
                              <td valign="top" class="cell"><span class="hi bold">Version Number</span></td>
                              
                              <td valign="top" class="cell"><span class="hi bold">Release Date</span></td>
                              
                              <td valign="top" class="cell"><span class="hi bold">Size (Bytes)</span></td>
                              
                              <td valign="top" class="cell"><span class="hi bold">Net Change (Bytes)</span></td>
                              
                              <td valign="top" class="cell"><span class="hi bold">C++ Change (Bytes)</span></td>
                              
                              <td valign="top" class="cell"><span class="hi bold">Total δ Tokens</span></td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell"><span class="hi bold">Netscape Communicator (Open Source)</span></td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">00</td>
                              
                              <td valign="top" class="cell">None</td>
                              
                              <td valign="top" class="cell">03/31/98</td>
                              
                              <td valign="top" class="cell">40203077</td>
                              
                              <td valign="top" class="cell">N/A</td>
                              
                              <td valign="top" class="cell">N/A</td>
                              
                              <td valign="top" class="cell">233285</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">01</td>
                              
                              <td valign="top" class="cell">None</td>
                              
                              <td valign="top" class="cell">04/08/98</td>
                              
                              <td valign="top" class="cell">59131622</td>
                              
                              <td valign="top" class="cell">18928545</td>
                              
                              <td valign="top" class="cell">9694228</td>
                              
                              <td valign="top" class="cell">692924</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">02</td>
                              
                              <td valign="top" class="cell">None</td>
                              
                              <td valign="top" class="cell">04/29/98</td>
                              
                              <td valign="top" class="cell">65089258</td>
                              
                              <td valign="top" class="cell">5957636</td>
                              
                              <td valign="top" class="cell">548493</td>
                              
                              <td valign="top" class="cell">714233</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">03</td>
                              
                              <td valign="top" class="cell">None</td>
                              
                              <td valign="top" class="cell">06/03/98</td>
                              
                              <td valign="top" class="cell">70166069</td>
                              
                              <td valign="top" class="cell">5076811</td>
                              
                              <td valign="top" class="cell">1223271</td>
                              
                              <td valign="top" class="cell">753252</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">04</td>
                              
                              <td valign="top" class="cell">None</td>
                              
                              <td valign="top" class="cell">07/28/98</td>
                              
                              <td valign="top" class="cell">84099725</td>
                              
                              <td valign="top" class="cell">13933656</td>
                              
                              <td valign="top" class="cell">8086869</td>
                              
                              <td valign="top" class="cell">1132744</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">05</td>
                              
                              <td valign="top" class="cell">None</td>
                              
                              <td valign="top" class="cell">09/04/98</td>
                              
                              <td valign="top" class="cell">90469752</td>
                              
                              <td valign="top" class="cell">6370027</td>
                              
                              <td valign="top" class="cell">330190</td>
                              
                              <td valign="top" class="cell">1144931</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">06</td>
                              
                              <td valign="top" class="cell">None</td>
                              
                              <td valign="top" class="cell">10/08/98</td>
                              
                              <td valign="top" class="cell">83588207</td>
                              
                              <td valign="top" class="cell">-6881545</td>
                              
                              <td valign="top" class="cell">-1708705</td>
                              
                              <td valign="top" class="cell">1048406</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell"><span class="hi bold">Mozilla Application Suite</span></td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">07</td>
                              
                              <td valign="top" class="cell">(M1?)</td>
                              
                              <td valign="top" class="cell">12/11/98</td>
                              
                              <td valign="top" class="cell">44647824</td>
                              
                              <td valign="top" class="cell">N/A</td>
                              
                              <td valign="top" class="cell">N/A</td>
                              
                              <td valign="top" class="cell">674816</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">08</td>
                              
                              <td valign="top" class="cell">(M2?)</td>
                              
                              <td valign="top" class="cell">01/28/99</td>
                              
                              <td valign="top" class="cell">55504133</td>
                              
                              <td valign="top" class="cell">10856309</td>
                              
                              <td valign="top" class="cell">4673001</td>
                              
                              <td valign="top" class="cell">865565</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">09</td>
                              
                              <td valign="top" class="cell">M3</td>
                              
                              <td valign="top" class="cell">03/19/99</td>
                              
                              <td valign="top" class="cell">65940062</td>
                              
                              <td valign="top" class="cell">10435929</td>
                              
                              <td valign="top" class="cell">4740616</td>
                              
                              <td valign="top" class="cell">959360</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">10</td>
                              
                              <td valign="top" class="cell">M4</td>
                              
                              <td valign="top" class="cell">04/15/99</td>
                              
                              <td valign="top" class="cell">70438485</td>
                              
                              <td valign="top" class="cell">4498423</td>
                              
                              <td valign="top" class="cell">2334716</td>
                              
                              <td valign="top" class="cell">1031601</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">11</td>
                              
                              <td valign="top" class="cell">M5</td>
                              
                              <td valign="top" class="cell">05/05/99</td>
                              
                              <td valign="top" class="cell">73321774</td>
                              
                              <td valign="top" class="cell">2883289</td>
                              
                              <td valign="top" class="cell">1766415</td>
                              
                              <td valign="top" class="cell">1113046</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">12</td>
                              
                              <td valign="top" class="cell">M6</td>
                              
                              <td valign="top" class="cell">05/29/99</td>
                              
                              <td valign="top" class="cell">85172946</td>
                              
                              <td valign="top" class="cell">11851172</td>
                              
                              <td valign="top" class="cell">2240285</td>
                              
                              <td valign="top" class="cell">1190649</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">13</td>
                              
                              <td valign="top" class="cell">M7</td>
                              
                              <td valign="top" class="cell">06/22/99</td>
                              
                              <td valign="top" class="cell">86226782</td>
                              
                              <td valign="top" class="cell">1053836</td>
                              
                              <td valign="top" class="cell">1453313</td>
                              
                              <td valign="top" class="cell">1269994</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">14</td>
                              
                              <td valign="top" class="cell">M8</td>
                              
                              <td valign="top" class="cell">07/16/99</td>
                              
                              <td valign="top" class="cell">90528214</td>
                              
                              <td valign="top" class="cell">4301432</td>
                              
                              <td valign="top" class="cell">2082572</td>
                              
                              <td valign="top" class="cell">1347142</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">15</td>
                              
                              <td valign="top" class="cell">M9</td>
                              
                              <td valign="top" class="cell">08/26/99</td>
                              
                              <td valign="top" class="cell">94343632</td>
                              
                              <td valign="top" class="cell">3815418</td>
                              
                              <td valign="top" class="cell">1752674</td>
                              
                              <td valign="top" class="cell">1342563</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">16</td>
                              
                              <td valign="top" class="cell">M10</td>
                              
                              <td valign="top" class="cell">10/08/99</td>
                              
                              <td valign="top" class="cell">99242381</td>
                              
                              <td valign="top" class="cell">4898749</td>
                              
                              <td valign="top" class="cell">413658</td>
                              
                              <td valign="top" class="cell">1393442</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">17</td>
                              
                              <td valign="top" class="cell">M11</td>
                              
                              <td valign="top" class="cell">11/16/99</td>
                              
                              <td valign="top" class="cell">105517092</td>
                              
                              <td valign="top" class="cell">6274711</td>
                              
                              <td valign="top" class="cell">1403584</td>
                              
                              <td valign="top" class="cell">1477091</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">18</td>
                              
                              <td valign="top" class="cell">M12</td>
                              
                              <td valign="top" class="cell">12/21/99</td>
                              
                              <td valign="top" class="cell">110274354</td>
                              
                              <td valign="top" class="cell">4757262</td>
                              
                              <td valign="top" class="cell">1731966</td>
                              
                              <td valign="top" class="cell">1464024</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">19</td>
                              
                              <td valign="top" class="cell">M13</td>
                              
                              <td valign="top" class="cell">01/26/00</td>
                              
                              <td valign="top" class="cell">108091563</td>
                              
                              <td valign="top" class="cell">-2182791</td>
                              
                              <td valign="top" class="cell">-216838</td>
                              
                              <td valign="top" class="cell">1540253</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">20</td>
                              
                              <td valign="top" class="cell">M14</td>
                              
                              <td valign="top" class="cell">03/01/00</td>
                              
                              <td valign="top" class="cell">112325279</td>
                              
                              <td valign="top" class="cell">4233716</td>
                              
                              <td valign="top" class="cell">1751420</td>
                              
                              <td valign="top" class="cell">1630439</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">21</td>
                              
                              <td valign="top" class="cell">M15</td>
                              
                              <td valign="top" class="cell">04/18/00</td>
                              
                              <td valign="top" class="cell">117337663</td>
                              
                              <td valign="top" class="cell">5012384</td>
                              
                              <td valign="top" class="cell">1845194</td>
                              
                              <td valign="top" class="cell">1783563</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">22</td>
                              
                              <td valign="top" class="cell">M16</td>
                              
                              <td valign="top" class="cell">06/13/00</td>
                              
                              <td valign="top" class="cell">123233166</td>
                              
                              <td valign="top" class="cell">5895503</td>
                              
                              <td valign="top" class="cell">3866597</td>
                              
                              <td valign="top" class="cell">1839983</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">23</td>
                              
                              <td valign="top" class="cell">M17</td>
                              
                              <td valign="top" class="cell">08/20/00</td>
                              
                              <td valign="top" class="cell">141779386</td>
                              
                              <td valign="top" class="cell">18546220</td>
                              
                              <td valign="top" class="cell">1289320</td>
                              
                              <td valign="top" class="cell">1882548</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">24</td>
                              
                              <td valign="top" class="cell">M18</td>
                              
                              <td valign="top" class="cell">10/12/00</td>
                              
                              <td valign="top" class="cell">145153396</td>
                              
                              <td valign="top" class="cell">3374010</td>
                              
                              <td valign="top" class="cell">903169</td>
                              
                              <td valign="top" class="cell">1896079</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">25</td>
                              
                              <td valign="top" class="cell">0.6</td>
                              
                              <td valign="top" class="cell">12/06/00</td>
                              
                              <td valign="top" class="cell">135022311</td>
                              
                              <td valign="top" class="cell">-10131085</td>
                              
                              <td valign="top" class="cell">271163</td>
                              
                              <td valign="top" class="cell">1917088</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">26</td>
                              
                              <td valign="top" class="cell">0.7</td>
                              
                              <td valign="top" class="cell">01/09/01</td>
                              
                              <td valign="top" class="cell">152227947</td>
                              
                              <td valign="top" class="cell">17205636</td>
                              
                              <td valign="top" class="cell">507036</td>
                              
                              <td valign="top" class="cell">1936538</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">27</td>
                              
                              <td valign="top" class="cell">0.8</td>
                              
                              <td valign="top" class="cell">02/14/01</td>
                              
                              <td valign="top" class="cell">152513233</td>
                              
                              <td valign="top" class="cell">285286</td>
                              
                              <td valign="top" class="cell">293603</td>
                              
                              <td valign="top" class="cell">2090149</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">28</td>
                              
                              <td valign="top" class="cell">0.9</td>
                              
                              <td valign="top" class="cell">05/07/01</td>
                              
                              <td valign="top" class="cell">170953881</td>
                              
                              <td valign="top" class="cell">18440648</td>
                              
                              <td valign="top" class="cell">3763559</td>
                              
                              <td valign="top" class="cell">2274789</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">29</td>
                              
                              <td valign="top" class="cell">1.0</td>
                              
                              <td valign="top" class="cell">06/05/02</td>
                              
                              <td valign="top" class="cell">224325235</td>
                              
                              <td valign="top" class="cell">53371354</td>
                              
                              <td valign="top" class="cell">6189989</td>
                              
                              <td valign="top" class="cell">2332033</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">30</td>
                              
                              <td valign="top" class="cell">1.1</td>
                              
                              <td valign="top" class="cell">08/26/02</td>
                              
                              <td valign="top" class="cell">228137982</td>
                              
                              <td valign="top" class="cell">3812747</td>
                              
                              <td valign="top" class="cell">1363139</td>
                              
                              <td valign="top" class="cell">2402289</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">31</td>
                              
                              <td valign="top" class="cell">1.2</td>
                              
                              <td valign="top" class="cell">11/26/02</td>
                              
                              <td valign="top" class="cell">228896289</td>
                              
                              <td valign="top" class="cell">758307</td>
                              
                              <td valign="top" class="cell">1737235</td>
                              
                              <td valign="top" class="cell">2433636</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">32</td>
                              
                              <td valign="top" class="cell">1.3</td>
                              
                              <td valign="top" class="cell">03/13/03</td>
                              
                              <td valign="top" class="cell">229003326</td>
                              
                              <td valign="top" class="cell">107037</td>
                              
                              <td valign="top" class="cell">725868</td>
                              
                              <td valign="top" class="cell">2436192</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">33</td>
                              
                              <td valign="top" class="cell">1.4</td>
                              
                              <td valign="top" class="cell">06/30/03</td>
                              
                              <td valign="top" class="cell">230873828</td>
                              
                              <td valign="top" class="cell">1870502</td>
                              
                              <td valign="top" class="cell">157801</td>
                              
                              <td valign="top" class="cell">2427898</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">34</td>
                              
                              <td valign="top" class="cell">1.5</td>
                              
                              <td valign="top" class="cell">10/15/03</td>
                              
                              <td valign="top" class="cell">184967631</td>
                              
                              <td valign="top" class="cell">-45906197</td>
                              
                              <td valign="top" class="cell">-68683</td>
                              
                              <td valign="top" class="cell">2447614</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">35</td>
                              
                              <td valign="top" class="cell">1.6</td>
                              
                              <td valign="top" class="cell">01/15/04</td>
                              
                              <td valign="top" class="cell">188991165</td>
                              
                              <td valign="top" class="cell">4023534</td>
                              
                              <td valign="top" class="cell">290254</td>
                              
                              <td valign="top" class="cell">2503244</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">36</td>
                              
                              <td valign="top" class="cell">1.7</td>
                              
                              <td valign="top" class="cell">06/17/04</td>
                              
                              <td valign="top" class="cell">206097164</td>
                              
                              <td valign="top" class="cell">17105999</td>
                              
                              <td valign="top" class="cell">1299795</td>
                              
                              <td valign="top" class="cell">2545786</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell"><span class="hi bold">Mozilla Firefox</span></td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">37</td>
                              
                              <td valign="top" class="cell">1.0</td>
                              
                              <td valign="top" class="cell">11/09/04</td>
                              
                              <td valign="top" class="cell">197018982</td>
                              
                              <td valign="top" class="cell">N/A</td>
                              
                              <td valign="top" class="cell">N/A</td>
                              
                              <td valign="top" class="cell">2809989</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">38</td>
                              
                              <td valign="top" class="cell">1.5</td>
                              
                              <td valign="top" class="cell">11/30/05</td>
                              
                              <td valign="top" class="cell">208257684</td>
                              
                              <td valign="top" class="cell">11238702</td>
                              
                              <td valign="top" class="cell">5285960</td>
                              
                              <td valign="top" class="cell">2155079</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">39</td>
                              
                              <td valign="top" class="cell">2.0</td>
                              
                              <td valign="top" class="cell">10/24/06</td>
                              
                              <td valign="top" class="cell">218235493</td>
                              
                              <td valign="top" class="cell">9977809</td>
                              
                              <td valign="top" class="cell">2380870</td>
                              
                              <td valign="top" class="cell">2237129</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">40</td>
                              
                              <td valign="top" class="cell">3.0</td>
                              
                              <td valign="top" class="cell">06/17/08</td>
                              
                              <td valign="top" class="cell">227187445</td>
                              
                              <td valign="top" class="cell">8951952</td>
                              
                              <td valign="top" class="cell">-15144818</td>
                              
                              <td valign="top" class="cell">2241148</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">41</td>
                              
                              <td valign="top" class="cell">3.5</td>
                              
                              <td valign="top" class="cell">06/30/09</td>
                              
                              <td valign="top" class="cell">278296889</td>
                              
                              <td valign="top" class="cell">51109444</td>
                              
                              <td valign="top" class="cell">2564959</td>
                              
                              <td valign="top" class="cell">2531559</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">42</td>
                              
                              <td valign="top" class="cell">3.6</td>
                              
                              <td valign="top" class="cell">01/21/10</td>
                              
                              <td valign="top" class="cell">280683836</td>
                              
                              <td valign="top" class="cell">2386947</td>
                              
                              <td valign="top" class="cell">690404</td>
                              
                              <td valign="top" class="cell">2504039</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">43</td>
                              
                              <td valign="top" class="cell">4.0</td>
                              
                              <td valign="top" class="cell">03/22/11</td>
                              
                              <td valign="top" class="cell">346351093</td>
                              
                              <td valign="top" class="cell">65667257</td>
                              
                              <td valign="top" class="cell">5805397</td>
                              
                              <td valign="top" class="cell">2483528</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">44</td>
                              
                              <td valign="top" class="cell">5.0*</td>
                              
                              <td valign="top" class="cell">06/21/11</td>
                              
                              <td valign="top" class="cell">352386092</td>
                              
                              <td valign="top" class="cell">6034999</td>
                              
                              <td valign="top" class="cell">-729812</td>
                              
                              <td valign="top" class="cell">2469320</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">45</td>
                              
                              <td valign="top" class="cell">6.0</td>
                              
                              <td valign="top" class="cell">08/16/11</td>
                              
                              <td valign="top" class="cell">347554884</td>
                              
                              <td valign="top" class="cell">-4831208</td>
                              
                              <td valign="top" class="cell">-516552</td>
                              
                              <td valign="top" class="cell">2456907</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">46</td>
                              
                              <td valign="top" class="cell">7.0</td>
                              
                              <td valign="top" class="cell">09/27/11</td>
                              
                              <td valign="top" class="cell">349362417</td>
                              
                              <td valign="top" class="cell">1807533</td>
                              
                              <td valign="top" class="cell">-769400</td>
                              
                              <td valign="top" class="cell">2511091</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">47</td>
                              
                              <td valign="top" class="cell">8.0</td>
                              
                              <td valign="top" class="cell">11/08/11</td>
                              
                              <td valign="top" class="cell">354846376</td>
                              
                              <td valign="top" class="cell">5483959</td>
                              
                              <td valign="top" class="cell">-253822</td>
                              
                              <td valign="top" class="cell">2686495</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">48</td>
                              
                              <td valign="top" class="cell">9.0</td>
                              
                              <td valign="top" class="cell">12/20/11</td>
                              
                              <td valign="top" class="cell">364515482</td>
                              
                              <td valign="top" class="cell">9669106</td>
                              
                              <td valign="top" class="cell">1535342</td>
                              
                              <td valign="top" class="cell">2694930</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">49</td>
                              
                              <td valign="top" class="cell">10.0</td>
                              
                              <td valign="top" class="cell">01/31/12</td>
                              
                              <td valign="top" class="cell">372937453</td>
                              
                              <td valign="top" class="cell">8421971</td>
                              
                              <td valign="top" class="cell">4338895</td>
                              
                              <td valign="top" class="cell">2714671</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">50</td>
                              
                              <td valign="top" class="cell">11.0</td>
                              
                              <td valign="top" class="cell">03/13/12</td>
                              
                              <td valign="top" class="cell">385911428</td>
                              
                              <td valign="top" class="cell">12973975</td>
                              
                              <td valign="top" class="cell">-55856</td>
                              
                              <td valign="top" class="cell">2740373</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">51</td>
                              
                              <td valign="top" class="cell">12.0</td>
                              
                              <td valign="top" class="cell">04/24/12</td>
                              
                              <td valign="top" class="cell">388876784</td>
                              
                              <td valign="top" class="cell">2965356</td>
                              
                              <td valign="top" class="cell">472535</td>
                              
                              <td valign="top" class="cell">2790036</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">52</td>
                              
                              <td valign="top" class="cell">13.0</td>
                              
                              <td valign="top" class="cell">06/05/12</td>
                              
                              <td valign="top" class="cell">393197798</td>
                              
                              <td valign="top" class="cell">4321014</td>
                              
                              <td valign="top" class="cell">576292</td>
                              
                              <td valign="top" class="cell">2864587</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">53</td>
                              
                              <td valign="top" class="cell">14.0.1</td>
                              
                              <td valign="top" class="cell">07/17/12</td>
                              
                              <td valign="top" class="cell">407165259</td>
                              
                              <td valign="top" class="cell">13967461</td>
                              
                              <td valign="top" class="cell">1061975</td>
                              
                              <td valign="top" class="cell">2891327</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">54</td>
                              
                              <td valign="top" class="cell">15.0</td>
                              
                              <td valign="top" class="cell">08/24/12</td>
                              
                              <td valign="top" class="cell">395983732</td>
                              
                              <td valign="top" class="cell">-11181527</td>
                              
                              <td valign="top" class="cell">-2924526</td>
                              
                              <td valign="top" class="cell">2976568</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">55</td>
                              
                              <td valign="top" class="cell">16.0</td>
                              
                              <td valign="top" class="cell">10/09/12</td>
                              
                              <td valign="top" class="cell">429430729</td>
                              
                              <td valign="top" class="cell">33446997</td>
                              
                              <td valign="top" class="cell">552219</td>
                              
                              <td valign="top" class="cell">3167788</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">56</td>
                              
                              <td valign="top" class="cell">17.0</td>
                              
                              <td valign="top" class="cell">11/20/12</td>
                              
                              <td valign="top" class="cell">435263141</td>
                              
                              <td valign="top" class="cell">5832412</td>
                              
                              <td valign="top" class="cell">1455213</td>
                              
                              <td valign="top" class="cell">3182711</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">57</td>
                              
                              <td valign="top" class="cell">18.0</td>
                              
                              <td valign="top" class="cell">01/08/13</td>
                              
                              <td valign="top" class="cell">465517793</td>
                              
                              <td valign="top" class="cell">30254652</td>
                              
                              <td valign="top" class="cell">4674165</td>
                              
                              <td valign="top" class="cell">3216161</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">58</td>
                              
                              <td valign="top" class="cell">19.0</td>
                              
                              <td valign="top" class="cell">02/19/13</td>
                              
                              <td valign="top" class="cell">471549259</td>
                              
                              <td valign="top" class="cell">6031466</td>
                              
                              <td valign="top" class="cell">292543</td>
                              
                              <td valign="top" class="cell">233285</td>
                              
                           </tr>
                           <tr class="row">
                              
                              <td valign="top" class="cell">59</td>
                              
                              <td valign="top" class="cell">20.0</td>
                              
                              <td valign="top" class="cell">04/02/13</td>
                              
                              <td valign="top" class="cell">476262707</td>
                              
                              <td valign="top" class="cell">4713448</td>
                              
                              <td valign="top" class="cell">774360</td>
                              
                              <td valign="top" class="cell">692924</td>
                              
                           </tr>
                        </table>
                        <div class="caption">
                           <div class="label">Table 1. </div>* Mozilla begins its rolling release, "every six
                           weeks," model.
                        </div>
                     </div>
                     
                     <div class="counter"><a href="#p15">15</a></div>
                     <div class="ptext" id="p15"> To implement DiffLDA on the Mozilla corpus, I used Python to capture the
                        output of the diff command on the extracted C++ source code for each pair of
                        successive versions. Following the recommendations of Thomas, et al (2011),
                        my scripts parsed the output into a pair of δ-add and a δ-remove documents
                        for each cpp implementation file, thereby removing all repeated text and
                        reducing each version to a record of its changes. In the event that entire
                        cpp files were added or removed between versions, the entire file would be
                        parsed as a δ-add or δ-remove document, respectively. At points of
                        transition between Communicator, Application Suite, and Firefox, all cpp
                        files from the older browsers were parsed as δ-remove and all cpp files from
                        the new browsers were parsed as δ-add documents. Once all cpp files were
                        processed through diff, I tokenized the resulting documents following the
                        recommendations of Kuhn, et al (2007) by splitting all camel case and
                        underscore compound method and variables names, removing all non-alphabetic
                        types, and filtering out both standard English stopwords as well as variable
                        type declarations, flow control commands, object type declarations, and
                        commonly used commands. 
                     </div>
                     
                     <div class="counter"><a href="#p16">16</a></div>
                     <div class="ptext" id="p16"> Thus prepared, I performed LDA on the corpus using MALLET’s ParallelLDA
                        implementation in order to transform every file in each version into a pair
                        of δ-add and δ-remove feature vectors and sum them into virtual
                        representations of each version. For example, if there are 10 files in
                        version Y, diff processing makes note of the changes since version X in 20
                        files: pairs of documents that list the additions or removals for each of
                        the 10 files. The records of changes for all documents are then pooled
                        together into a corpus for LDA. Following LDA, the record of changes in
                        version Y is now represented by 20 feature vectors with each column value in
                        the vectors representing the total number of tokens assigned to each topic
                        in the records of additions or removals. The resulting topic assignment
                        vectors for all documents are then transformed into virtual representations
                        of each version by cumulatively summing each column, producing a vector for
                        each version wherein all columns are the sum of all previous δ-add values
                        less the sum of all previous δ-remove values. Column 1 in the virtual vector
                        for version 4, for example, is the sum of all additions minus the sum of all
                        removals in column 1 of versions 1, 2, and 3. These summed vectors thus
                        represent the net tokens assigned to each topic in each version. After
                        several initial trials, I settled on a topic model size of 60 because it
                        produced topic key terms lists that could both be traced to specific
                        descriptions of components in Mozilla’s own documentation while maintaining
                        continuity across the three software applications included in the corpus. As
                        shown in <a href="#figure04">Figure 3</a>, I noticed that topic
                        modeling would re-create distinct trends regardless of the number of topics
                        chosen. Using a larger number of topics generally produced
                        "new" topics that reflected the normal narrative of
                        object-oriented programming, described below, rather than highlighting
                        further trends of interest to this study.
                     </div>
                     
                     <div id="figure04" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure04.png" rel="external"><img src="resources/images/figure04.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 3. </div>Distinct trends are visible regardless of the number of topics chosen.
                           The top image is from a model that uses 60 topics and the right from one
                           that uses 100 topics.
                        </div>
                     </div>
                     
                     
                     <div class="counter"><a href="#p17">17</a></div>
                     <div class="ptext" id="p17"> While my implementation of DiffLDA is largely faithful to the process
                        described by Thomas, et al [<a class="ref" href="#thomas2011">Thomas et al. 2011</a>], I did make two
                        changes to account for irregularities I noticed in the initial results. Like
                        Thomas, et al [<a class="ref" href="#thomas2011">Thomas et al. 2011</a>], I did notice that the
                        probabilistic calculations underlying the LDA process could be overly
                        sensitive to change, resulting in a version having less than zero tokens
                        assigned to a topic after cumulatively summing the δ-add or δ-remove
                        documents. I noticed that these negative sums tend to occur during periods
                        of large textual change, particularly when Mozilla decided to change or
                        revise its license agreements. In open source projects, a licensing
                        statement typically occupies the first several dozen lines of a source code
                        document and will be identical across all documents it appears within.
                        Changes to a project’s licensing therefore results in broad patterns of
                        change affecting all documents, often producing a sudden drop in token
                        counts that would lead to a net total of several hundred or even over a
                        thousand tokens below zero due to the "fuzziness" of
                        LDA’s Bayesian probability assignments. To avoid this problem, I removed all
                        licensing statements during preprocessing. Additionally, because the Mozilla
                        corpus includes three distinct web browsers, I restarted DiffLDA parsing at
                        the transition from the open sourced Communicator to Application Suite and
                        from Application Suite to Firefox, as described above, by setting the values
                        of all topics to zero and treating all documents from the newer software as
                        δ-add documents. The points of transition between these browsers is noted in
                        all topic graphs by vertical dotted lines. Together, I found that these two
                        modifications eliminated almost entirely the need for norming that Thomas,
                        et al [<a class="ref" href="#thomas2011">Thomas et al. 2011</a>] propose to address problems of
                        sensitivity.
                     </div>
                     
                  </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">IV. Results &amp; Discussion</h2>
                     
                     <div class="counter"><a href="#p18">18</a></div>
                     <div class="ptext" id="p18"> For most topics, graphing the net tokens as a percentage of total tokens
                        over time produces either a gradual increase or decrease across at least two
                        of the three applications in this collection. This trend resembles the
                        typical object-oriented development narrative, showing components developed
                        steadily at regular intervals according to a design plan, with many reaching
                        a point of standardization. Object-oriented programming languages like C++
                        encourage a highly modular development model, not just in the interest of
                        dividing complex software into discrete components that can be distributed
                        among programmer workloads but also so that the basic components that more
                        complex components will depend upon can be written once and then left alone,
                        or modified only slightly to account for any unanticipated needs. Relatively
                        unchanged components would therefore show a steady decline over time
                        relative to the rest of a continually expanding corpus. Furthermore, periods
                        of stability and moments where components appear to be revisited can be
                        traced to Mozilla’s internal "Bugzilla" reporting system.
                     </div>
                     
                     <div class="counter"><a href="#p19">19</a></div>
                     <div class="ptext" id="p19"> On the other hand, there are also a significant number of topics which do
                        not reflect this ideal narrative and instead show sudden spikes, drops, or
                        other irregularities. These topics represent development decisions made in
                        response to the demands of their users, changing Internet standards, and
                        other extra-technical influences on the development process. Here, in other
                        words, topic modeling source code exposes software’s relationship to its
                        sociocultural context, removing it from the technoscientific narratives that
                        sublimate process in favor of presenting only finished products and proven
                        theories [<a class="ref" href="#latour1987">Latour 1987</a>]. The remainder of this section
                        interprets two of the trends that deviate from the expected shape of the
                        typical object-oriented development narrative, contextualizing the traces of
                        material production visible in the textual history of Mozilla’s source code
                        by reading them alongside public relations material, blog posts written by
                        Netscape and Mozilla employees, technical white papers, and corporate
                        histories.<a class="noteRef" href="#d4e2075">[2]</a></div>
                     
                     <div class="div div2">
                        
                        <h3 class="head">a) E-mail</h3>
                        
                        <div class="counter"><a href="#p20">20</a></div>
                        <div class="ptext" id="p20">Mozilla’s negotiation of corporate and open source principles is visible
                           in the topics representing e-mail components, a function bundled into
                           Communicator and Application Suite but not included in Firefox. <a href="#figure05">Figure 4</a> shows the graph for topic 23,
                           which is associated with the key terms "header", "line",
                           "mime", "attach", "part", and "field". These
                           terms refer both to the standardized code that e-mail servers wrap
                           messages in to help route them — the message "header" and
                           Multi-purpose Internet Mail Extensions ("mime") standard — as well
                           as Mozilla’s internal abstract representation of the information
                           included in that code as "fields". Aside from the erratic
                           Communicator period, the graph for topic 23’s membership shows a steady
                           decline over time, suggesting that the e-mail components reached a state
                           of completion and were left alone. Given that e-mail protocols have not
                           changed significantly in the last decade, this is not surprising.
                           Shortly after the transition to Firefox, however, topic membership drops
                           off almost entirely, indicating that e-mail related components were
                           removed from the source code. Topics comprised of other e-mail related
                           keywords like "msg", "mail", "folder", "server",
                           "download", "account", and "pop" like topic 4 and
                           topic 54 exhibit similar trends. In short, the topics related to e-mail
                           highlight a trend visible across many topics that the Application Suite
                           is largely a recreation of Netscape’s original design. Given Mozilla’s
                           announcements of a fresh start surrounding its formal separation from
                           Netscape and the first glimpses of Firefox, both in 2003, it is
                           surprising that this recreation and continuation of Netscape’s design is
                           visible in the source code as late as 2008. The comparatively seamless
                           transition visible in these graphs between the Suite and Firefox periods
                           shows that despite a rhetoric of renewal and fresh approaches, there was
                           considerable lag between Mozilla’s vision of reinvention and the
                           implementation of its new designs.
                        </div>
                        
                        <div id="figure05" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure05.png" rel="external"><img src="resources/images/figure05.png" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 4. </div>This topic is representative of "e-mail" related components.
                              It exhibits a similar trend to topics 4 and 54 (not
                              pictured).
                           </div>
                        </div>
                        
                        <div class="counter"><a href="#p21">21</a></div>
                        <div class="ptext" id="p21"> Mozilla began as an office within Netscape, formed in 1998 just before
                           the company’s purchase by America Online. Mozilla’s mission was to
                           transition development of Netscape’s browser technology from a small
                           corporate team into an open source, community driven project. Netscape’s
                           browsers from this point forward more or less were re-branded versions
                           of Mozilla’s Application Suite with features added or removed to appeal
                           to Netscape’s corporate clientele. Despite having more independent
                           control over development than any of Netscape’s other departments,
                           Mozilla appears to have continued its parent company’s former strategy
                           of positioning its software as an all-encompassing gateway to Internet
                           activity. Interviews with Netscape employees conducted during the
                           "browser wars" period prior to the formation of
                           Mozilla describe a dual-voiced approach to marketing [<a class="ref" href="#cusumano1998">Cusumano and Yoffie 1998</a>]. On the one hand, Netscape represented its
                           software to users as solutions to common Internet tasks, a one-stop hub
                           for browsing, e-mail, chat, and webpage design. Yet Netscape also
                           pitched its software to corporate clients as "platform independent" and a hub for "network centric" application development [<a class="ref" href="#andreesen1996">Andreesen 1996</a>]. Netscape gave its browser away for free
                           to users, but it charged corporate clients for software development
                           kits. Implicitly, Netscape’s corporate partners were thus buying access
                           to the browser’s users. Even in Mozilla’s own later press releases, this
                           dual-representation of its software remained: one that highlights the
                           user experience of its browser and e-mail functions and another aimed at
                           corporate audiences that described the software as a "cross-platform toolkit"
                            [<a class="ref" href="#mozilla2002">Mozilla 2002</a>]. It was not until 2003, when AOL moved to dissolve Netscape and
                           the majority of its development teams left to form the Mozilla
                           Foundation, that Mozilla abandoned this model. Formally announcing work
                           on a new browser later that year — initially named "Phoenix" and later "Firefox" —
                           Mozilla claimed that it would split its software suite into separate
                           applications, focusing its efforts on enhancing the user experience of
                           each component. This division of its software and team was presented as
                           a symbol of the foundation’s rebirth and a renewed commitment to the
                           needs of its users over those of corporate partners.
                        </div>
                        
                        <div class="counter"><a href="#p22">22</a></div>
                        <div class="ptext" id="p22"> While many elements of this insider history comprised of employee
                           interviews and company press releases are also visible in the topic
                           graphs, a textual approach allows for a more nuanced narrative. Although
                           there are a handful of components that demonstrate some sort of
                           continuity across the two applications, most resemble the transition in
                           <a href="#figure05">Figure 4</a>, showing either a sharp drop
                           in the first version of Application Suite and/or exhibiting a much
                           different trend in subsequent versions (e.g., a sudden rise in topic
                           membership during the earliest versions of Application Suite following a
                           steady drop in Communicator). Generally, the transition between
                           Communicator and Application Suite is not smooth across all topics,
                           suggesting that even though Netscape’s corporate strategy shaped design
                           decisions behind Mozilla’s software the company’s earlier source code
                           introduced few if any technological constraints shaping future browsers.
                           In other words, Mozilla’s decision to continue the dual-voiced strategy
                           was not the result of having to work within the structural limitations
                           imposed by re-using components from the older Communicator browser.
                           Rather, this decision was made at least in part for extra-technical
                           reasons such as AOL exerting control over Netscape/Mozilla, a continued
                           belief that Netscape/Mozilla could supplant Microsoft’s control over
                           personal computing by making users dependent on its software for all
                           Internet related tasks, or a desire by Netscape/AOL executives to
                           maintain the corporate partnerships that Netscape had established before
                           the buyout. 
                        </div>
                        
                        <div class="counter"><a href="#p23">23</a></div>
                        <div class="ptext" id="p23">Importantly, the lack of a technical obligation for continuing this
                           strategy points to concerns raised by free software advocates [<a class="ref" href="#stallman2002">Stallman 2002</a>] and academics [<a class="ref" href="#golumbia2009">Golumbia 2009</a>]
                           that "open source" is often a term used to impose corporate policy
                           over volunteer communities. While Netscape’s original open source
                           announcement of Mozilla and its new open source policy explains that it
                           will give its community of users complete access to its software, "ignite[ing] the creative energies of the entire Net
                           community and fuel unprecedented levels of innovation in the browser
                           market," there is also considerable reference to "new services" that will "reinforce Netscape's strategy of leveraging
                           market penetration"
                            [<a class="ref" href="#netscape1998">Netscape 1998</a>]. In short, the recreation of most components visible in the topic
                           graphs and the resumption of its dual-voiced strategy following the move
                           to an open source format suggests that Mozilla, at least at its outset,
                           was not simply a gesture of good will on Netscape’s part to its users.
                           Perhaps with the move to open source Netscape felt that making the
                           source code available to all, and accepting community contributions,
                           would paradoxically allow them more control over their software,
                           preventing or slowing any attempts by AOL to impose its own designs.
                           Regardless of the exact reasons, the abruptness of the transition to
                           Application Suite shows that little, if any, of the Communicator code
                           was retained in later browsers, making Netscape’s initial foray into
                           open source more important symbolically and/or politically than
                           technologically with respect to the rest of the corpus.
                        </div>
                        
                        <div class="counter"><a href="#p24">24</a></div>
                        <div class="ptext" id="p24"> By comparison, the transition from Application Suite to Firefox is
                           smooth across most topic graphs. Mozilla explains this trend in white
                           papers as the result of wanting to maintain Application Suite during
                           Firefox’s initial development so as not to disrupt users who depended on
                           their software. However, the duration of technological influence that
                           Application Suite exerts over Firefox visible in the graphs is
                           unexpected given the efforts that Mozilla later made to distance itself
                           publically from Netscape’s software. Like the open source announcement,
                           Firefox was initially presented in 2003 as a renewal of Mozilla’s image,
                           coinciding with Mozilla’s formal and legal split from Netscape into an
                           independent, non-profit foundation [<a class="ref" href="#mozilla2003">Mozilla 2003</a>]. Unlike
                           the transition from Communicator, however, the source code to
                           Application Suite was not abandoned by Firefox during or immediately
                           after this transition. The topic models indicate that Firefox shares a
                           substantial amount of source code with its immediate predecessor and
                           thus has a considerable dependence on the previous application’s
                           technology. Components related to e-mail, for example, are still present
                           in Firefox source code packages even though those components are not
                           accessible to users. The revised development roadmap that Mozilla
                           released in 2003 describes Firefox as an effort to further modularize
                           Application Suite, disentangling the individual components while still
                           maintaining a shared core that would allow them to communicate with one
                           another through intermediating "extensions". Mail
                           components remain in the web browser’s code packages as late as 2008 and
                           are finally removed following a new initiative announced by Mitchell
                           Baker, then CEO of Mozilla’s for-profit arm, to increase funding and
                           administrative support for e-mail client development [<a class="ref" href="#baker2007">Baker 2007</a>]. Mozilla, in short, proposed modularizing its
                           technology so that Application Suite could be divided into independent
                           applications; yet before this actually occurred, it simply hid those
                           components from users that were not part of the user experience they
                           intended. While Mozilla intended Firefox to represent another break from
                           its past, and altered the browser’s interface to give the appearance of
                           such a break, significant technological influence of past technology
                           remained in place for at least 5 years.
                        </div>
                        
                     </div>
                     
                     <div class="div div2">
                        
                        <h3 class="head">b) Windows</h3>
                        
                        <div class="counter"><a href="#p25">25</a></div>
                        <div class="ptext" id="p25"> Considering that modularity is a core principle of object-oriented
                           programming, it is more accurate to say that all components are
                           partitioned off by default and that the interface includes only those
                           components that developers choose to represent their software with to
                           users. The gap between interface and algorithm that allows developers to
                           hide components ahead of stripping them out therefore also permits
                           developers to alter large portions of an application, potentially even
                           restructuring it entirely, while maintaining a seamless, largely
                           unchanging external appearance to users. Although all topics show to
                           varying degrees the amount of change modern software undergoes over time
                           through iterative inscription, its shifting materiality is most visible
                           in those topics related to drawing and managing the user interface.
                           While the e-mail topics point to a specific publicity strategy, the
                           restructured user interface components suggest a much more pervasive
                           corporate influence from Mozilla’s earliest days that continues into
                           Firefox’s development. 
                        </div>
                        
                        <div class="counter"><a href="#p26">26</a></div>
                        <div class="ptext" id="p26"> As <a href="#figure01">Figure 1</a> illustrated above, Mozilla’s
                           software maintained a similar user interface for over a decade.
                           Presumably, maintaining a uniform look and feel across all major
                           operating system platforms represented one aspect of the Netscape
                           strategy to produce a universal Internet toolkit that would behave
                           identically all major operating system platforms; however, as <a href="#figure06">Figure 5</a> shows, there appears to be
                           considerably more programming labor devoted to maintaining the interface
                           during the Communicator period than in either the Suite or Firefox
                           periods. Topic 18 is comprised of the key terms "window",
                           "win", "icon", and "dialog", referring to components
                           related to interactive browser components like windows, icons, and
                           buttons, as well as the "dialog" boxes that contain
                           menus, file browsers, or more complex operations requiring a combination
                           of inputs from users. Topic 18 alone sustains approximately 10% of total
                           token membership over five versions of Communicator, rivaled only by the
                           mail related components described above over two versions during that
                           same period. At its peak topic 18 has a membership of over 100,000
                           tokens, a number not exceeded in any other topic for nearly 10 years.
                           Those few Firefox components which do eventually exceed the token
                           membership of topic 18 represent abstract graphics drawing tools. Topic
                           48, for example, is comprised of abstract visual keywords like
                           "rectangle", "frame", "style", and "region"
                           rather than specific user interface elements like "window" or
                           "icon". Given that web languages and HTML have in recent years
                           supported more advanced graphics rendering techniques, this latter trend
                           is not surprising; however, because Mozilla maintained a similar look
                           and feel across all of its software until the release of Firefox 4.0 in
                           2011, topic 18 suggests Firefox has a substantial structural difference
                           from Communicator: the algorithms defining components of the user
                           interface have been stripped away, leaving only the more primitive
                           components used to draw those objects.
                        </div>
                        
                        <div id="figure06" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure06.png" rel="external"><img src="resources/images/figure06.png" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 5. </div>Topics representing user interface components (18) and primitive
                              drawing components (48). Despite the organization of user interface
                              and the addition of new features, the amount of code devoted to
                              describing it has decreased. The amount of code devoted to new
                              graphics, on the other hand, has increased as expected to support
                              the changes visible to users.
                           </div>
                        </div>
                        
                        <div class="counter"><a href="#p27">27</a></div>
                        <div class="ptext" id="p27"> There are two explanations for the trend exhibited in topic 18. First,
                           while Mozilla was rewriting the basic interface components that were
                           abandoned with the rest of the Communicator code, its developers were
                           able to implement a much more compact and efficient design. This
                           possibility is visible in the Application Suite period as topic 18 and
                           related components exhibit a long period of stabilization before being
                           revisited late in the software’s lifetime. During the Firefox period,
                           however, topic 18 is actually reduced in size significantly. The second
                           possibility is that these functions were handled elsewhere in the
                           Mozilla source code, yet none of the components describing user
                           interface objects show increases that offset the source code removed
                           after the release of Firefox 3.0 in 2008 (index number 40).<a class="noteRef" href="#d4e2288">[3]</a> If anything, Firefox’s interface has become more
                           complex than the two previous applications, supporting a wider variety
                           of visual styles and allowing for more complicated forms of interaction
                           than just button pushing or simple text entry. The sudden drop in user
                           interface components in topic 18 considered alongside an increase in the
                           complexity of the browser’s graphics libraries in topic 48 is
                           surprising; at the very least, the user interface logic should have
                           remained constant, even if the rise in graphics rendering algorithms
                           were just added window dressing. In other words, the components
                           represented in these two and similar topics shows that Firefox underwent
                           a significant structural change with respect to the relationship of its
                           interface to the rest of its components. 
                        </div>
                        
                        <div class="counter"><a href="#p28">28</a></div>
                        <div class="ptext" id="p28"> Returning to the unprocessed source code collected for this study shows
                           that these functions were likely evacuated from the C++ codebase and
                           rewritten in another language. As <a href="#figure07">Figure 6</a>
                           shows, there is a steady rise in JavaScript code beginning early in the
                           Suite period that suddenly increases during the Firefox period at
                           version 40, quickly reaching a point at which over 40% of the source
                           code for the browser is no longer in C++. Mozilla’s changing user
                           interface, in other words, was preceded by a substantial material change
                           to the relationship between the browser’s user interface and core
                           components. Without topic modeling the JavaScript code, the exact nature
                           of the relationship between the two sets of source code cannot be
                           determined; however, this trend does help to highlight a narrative
                           present in developer documentation that does not appear in Mozilla’s
                           public announcements, blogs, or other avenues used to advertise its
                           software.
                        </div>
                        
                        <div id="figure07" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure07.png" rel="external"><img src="resources/images/figure07.png" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 6. </div>Amount of source code from major languages used in the Mozilla
                              Corpus. XML includes all known variants used by Netscape/Mozilla
                              (XML, XUL, RDF).
                           </div>
                        </div>
                        
                        <div class="counter"><a href="#p29">29</a></div>
                        <div class="ptext" id="p29"> The initial drop in user interface component between Communicator and
                           Suite reflects Mozilla’s recovery and re-envisioning of the
                           cross-platform toolkit strategy. As Mozilla’s lead designers note in the
                           2003 developer roadmap, abandoning Netscape’s code "allowed [them] to write a cross-platform
                           application front end once, instead of writing
                           native-OS-toolkit-based front ends for at least three
                           platforms"
                            [<a class="ref" href="#eich2004">Eich and Hyatt 2004</a>]. Collectively, Figure 5 and 6’s graph give us a way to visualize
                           the scope of this change and its impact on the structure of Mozilla’s
                           software. In short, Netscape’s original insistence on having an
                           <em class="emph">exactly</em> replicated user experience across Windows,
                           MacOS, and Linux, meant that its software could not simply draw user
                           interfaces using native graphics libraries. Instead, there would be
                           three versions of each component, one for each operating system that
                           would on the surface look and feel identical to its counterparts. A
                           universal interface, in other words, would only be possible by
                           suppressing the defining features of each platform that Netscape’s
                           toolkit was built for, marking the desktop as a site of struggle between
                           Netscape, Apple, Microsoft, and the UNIX community. Users, of course,
                           had little role in this struggle aside from Netscape’s hope that they
                           would more readily associate tasks with its visual signifiers rather
                           than those of its competitors.
                        </div>
                        
                        <div class="counter"><a href="#p30">30</a></div>
                        <div class="ptext" id="p30"> Even though Mozilla would abandon Netscape’s totalizing desire to erase
                           from the desktop all visual signifiers other than its own, the
                           alternative would exert a lasting influence on later software. Rather
                           than produce multiple logically separate, yet visually identical,
                           interfaces, Mozilla elected to build a flexible cross platform support
                           structure for interfaces. Because the content rendered within web
                           browser would look the same on every platform in order to fulfill the
                           shared standards for HTML, CSS, and JavaScript, Mozilla began to rewrite
                           its user interface logic in those languages. The interface would no
                           longer be a static design, written in C++ and frozen in place during
                           compilation; rather, it would exist separately from the browser code and
                           be handled by the same core components that managed web content,
                           referred to within Mozilla as the GECKO engine. Because Firefox’s
                           interfaces are now separate from the C++ code base and loaded at runtime
                           into the GECKO engine, they could in theory be modified any time to
                           almost any degree. By Version 3.0 of Firefox (index number 40), the
                           browser is less a distinct application, with components that are
                           essentially frozen in place via compilation until the next version’s
                           release, as it is a highly malleable configuration of the GECKO engine
                           shaped around those tasks that Mozilla determines comprise "web
                           browsing". Here, the results of Mozilla’s plan to break up
                           and modularize Application Suite becomes clearer. Rather than abandoning
                           the cross platform toolkit entirely, Mozilla would pare down its toolkit
                           to a minimal core set of components and distribute its applications in
                           the form of separate, highly specific configurations of GECKO. While
                           Mozilla has succeeded in rebranding itself through a narrative of open
                           source independence, a textual history of its software shows that a
                           kernel of Netscape’s corporate influence remains tightly knit into the
                           core of its software, continuing to shape its production.
                        </div>
                        
                     </div>
                     
                  </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">V. Conclusions</h2>
                     
                     <div class="counter"><a href="#p31">31</a></div>
                     <div class="ptext" id="p31"> This project shows the value of cross disciplinary dialog between digital
                        media studies and the digital humanities. In addition to digital humanities
                        methods assisting in the study of an increasingly complicated information
                        culture, digital media’s interrogation of computer science can help us find
                        new ways to shape analytic algorithms around the methodological and
                        theoretical goals of the humanities beyond investigations of formalism of
                        structuralist principles. In particular, text analytics can help provide a
                        sense of narrative in what Matthew Fuller and Andrew Goffey refer to as "grey media"
                         [<a class="ref" href="#fuller2012">Fuller and Goffey 2012</a>], or software that appears to resist hermeneutics because it provides
                        little in the way of aesthetic, narratological, or cultural engagement. Even
                        in those digital genres that do invite hermeneutic and cultural readings,
                        text analytics could add another dimension of analysis by opening up the
                        grey software that support interactive components. A game’s internal logics
                        could be examined for cultural or political assumptions about the game world
                        or its players through modding and data extraction tools. Additionally,
                        textual approaches to software history and LDA in particular are capable of
                        providing a sense of scale and scope not accessible via paratextual sources
                        like developer interviews or documentation. While many of the moments
                        discussed in this essay can be traced to developer documentation, references
                        to "a new interface" or "a
                        more streamlined JavaScript interpreter" don’t reflect the amount
                        of code changed or give any indication of the steps taken to make possible
                        such alterations. Methods like DiffLDA may even be capable of identifying
                        patterns that aren’t well documented by developers. The trends shown in <a href="#figure04">Figure 3</a> are beyond the scope of the narrative
                        presented in this article, but it’s worth noting that they highlight a
                        significant change in source code that was not presented by developers in
                        documentation and only traceable through careful review of the notes they
                        kept internally via their Bugzilla tracking system. 
                     </div>
                     
                     <div class="counter"><a href="#p32">32</a></div>
                     <div class="ptext" id="p32">Beyond methodological considerations, this case study reminds us that
                        software is often produced within a corporate and commercial space. A
                        commitment to openness and transparency does not necessarily produce an
                        environment in which users are free to use software or data as they see fit.
                        Openness for the sake of openness accomplishes little, especially if those
                        in control of an open resource institute changes that users may object to
                        without their consent. In regards to software studies, scholars should be
                        treat all interfaces — even to open access databases or open source software
                        — with suspicion. The textual history of Mozilla highlights the arbitrary
                        nature of the linkages between the interface and the core components of a
                        software system. Interfaces not only represent the developer’s intended use
                        for their software but also how they want their software represented within
                        the broader information economy. Developers can represent their algorithms
                        in any way they choose provided their software appears to be working
                        "correctly" to its users. The aesthetic dimension of
                        the "representational gap"
                         [<a class="ref" href="#black2012">Black 2012</a>] described by Black here becomes political: programmers can wrap their
                        software in interfaces that suit the narratives or personas they wish to be
                        seen through even if their software contains elements which may not align
                        with those self-representations. Scholars in digital media should therefore
                        approach interfaces with suspicion in much the same way that literary
                        scholars tend to disregard authorial intent as a form of prima facie
                        evidence. Programmers can also hide components which monitor and record
                        information about use activities such as digital rights management tools
                        that restrict access to data or behavior analytics that can double both as
                        technical data used to enhance user experience and as socioeconomic or
                        political data to be sold or shared with non-technical entities. While
                        digital humanists should continue to commit to principles of openness, we
                        should also be aware that a rhetoric of openness can be co-opted in the
                        service of exclusionary practices and take care to consider the implications
                        of any access policy we institute over the public face of our projects. The
                        care that free software advocates take to distinguish their principles from
                        those of the open source community is a good example in this regard.
                     </div>
                     
                     <div class="counter"><a href="#p33">33</a></div>
                     <div class="ptext" id="p33"> Importantly, adapting LDA to work within the constraints of textual history
                        shows that analytics algorithms can and should be examined closely for the
                        ways in which the implicit theoretical assumptions they make about
                        interpretive practices conflict or complement humanities critical practices.
                        Although this study still leaves much to be done, it nonetheless does show
                        how digital humanists can begin to bring critical theory into an algorithmic
                        space. Every step in a workflow — from preprocessing to statistical measures
                        to postprocessing — should be understood as a critical and interpretive move
                        because each will inevitably shape the scholarship performed before, during,
                        and following analysis. Whereas the scientists and engineers who produce
                        these algorithms are concerned primarily with their instrumental value,
                        humanists can fulfill a much needed role in exploring how these algorithms
                        change data in ways that privilege one form of interpretation over another.
                        Digital humanists have a richer, more complex, and nuanced understanding of
                        cultural sources and have more experience at applying heuristics to them
                        than data scientists. We should not be afraid to explore the critical
                        possibilities of these algorithms even if only to be able to talk back to
                        them in substantive ways.
                     </div>
                     
                  </div>
                  
               </div>
               
               
               
               
               
               
            </div>
            
            <div id="notes">
               <h2>Notes</h2>
               <div class="endnote" id="d4e210"><span class="noteRef">[1]</span> These numbers were taken from Mozilla’s "At a Glance: Fast Facts" and Wikimedia’s "Traffic Analysis Report for March 2015" on August 14, 2015. They
                  can be found at <a class="ref" href="https://blog.mozilla.org/press/ataglance/" onclick="window.open('https://blog.mozilla.org/press/ataglance/'); return false">https://blog.mozilla.org/press/ataglance/</a> and <a class="ref" href="http://stats.wikimedia.org/archive/squid_reports/2015-03/SquidReportClients.htm" onclick="window.open('http://stats.wikimedia.org/archive/squid_reports/2015-03/SquidReportClients.htm'); return false">http://stats.wikimedia.org/archive/squid_reports/2015-03/SquidReportClients.htm</a>,
                  respectively.
               </div>
               <div class="endnote" id="d4e2075"><span class="noteRef">[2]</span> Readers are welcome to view the complete gallery of
                  topic graphs at <a class="ref" href="http://mblack.us/moztm-data/index.html" onclick="window.open('http://mblack.us/moztm-data/index.html'); return false">http://mblack.us/moztm-data/index.html</a></div>
               <div class="endnote" id="d4e2288"><span class="noteRef">[3]</span> The
                  raw token counts show a very gradual increase over time during the
                  dip on the graph prior to version 30, indicating that almost nothing
                  was added rather than that something was removed. By contrast, the
                  raw token counts following version 40 show a significant
                  decrease.
               </div>
            </div>
            <div id="worksCited">
               <h2>Works Cited</h2>
               <div class="bibl"><span class="ref" id="aarseth1997">
                     <!-- close -->Aarseth 1997</span> Aarseth, E. J. Cybertext:
                  perspectives on ergodic literature. Johns Hopkins University Press, Baltimore
                  (1997).
               </div>
               <div class="bibl"><span class="ref" id="andreesen1996">
                     <!-- close -->Andreesen 1996</span> Andreesen, M. ONE for All
                  (1996). Available from . [4 September 2004]
               </div>
               <div class="bibl"><span class="ref" id="baker2007">
                     <!-- close -->Baker 2007</span> Baker, M. Mozilla’s New Focus on
                  Thunderbird and Internet Communications (2007). Available from . [31 August
                  2014]
               </div>
               <div class="bibl"><span class="ref" id="berry2011">
                     <!-- close -->Berry 2011</span> Berry, D. M. The philosophy of software.
                  Palgrave Macmillan, London (2011).
               </div>
               <div class="bibl"><span class="ref" id="black2012">
                     <!-- close -->Black 2012</span> Black, M. L. "Narrative and Spatial Form in Digital Media A Platform Study of the SCUMM
                  Engine and Ron Gilbert’s The Secret of Monkey Island." Games and
                  Culture, 7.3 (2012): 209-237.
               </div>
               <div class="bibl"><span class="ref" id="boellstorff2008">
                     <!-- close -->Boellstorff 2008</span> Boellstorff, T. Coming of
                  age in Second Life: An anthropologist explores the virtually human. Princeton
                  University Press, Princeton (2008).
               </div>
               <div class="bibl"><span class="ref" id="bolter1991">
                     <!-- close -->Bolter 1991</span> Bolter, J. D. Writing space: The
                  computer, hypertext, and the history of writing. Lawrence Erlbaum Associates,
                  Hillsdale (1991).
               </div>
               <div class="bibl"><span class="ref" id="bolter2003">
                     <!-- close -->Bolter and Gromala 2003</span> Bolter, J. D. and Gromala,
                  D. Windows and mirrors: Interaction design, digital art, and the myth of
                  transparency. MIT Press, Cambridge (2003).
               </div>
               <div class="bibl"><span class="ref" id="bolter2000">
                     <!-- close -->Bolter and Grusin 2000</span> Bolter, J. D. and Grusin,
                  R. A. Remediation: Understanding new media. MIT Press, Cambridge (2000).
               </div>
               <div class="bibl"><span class="ref" id="chun2011">
                     <!-- close -->Chun 2011</span> Chun, W. H. K. Programmed visions:
                  Software and memory. MIT Press, Cambridge (2011).
               </div>
               <div class="bibl"><span class="ref" id="clement2013">
                     <!-- close -->Clement et al. 2013</span> Clement, T. Tcheng, D.,
                  Auvil, L. Capitanu, B., and Monroe, M. "Sounding for
                  Meaning: Using Theories of Knowledge Representation to Analyze Aural
                  Patterns in Texts", Digital Humanities Quarterly 7.1 (2013).
                  Available from . [29 August 2014].
               </div>
               <div class="bibl"><span class="ref" id="cusumano1998">
                     <!-- close -->Cusumano and Yoffie 1998</span> Cusumano, M. A., and
                  Yoffie, D. B. Competing on Internet Time: Lessons from Netscape and its Battle
                  with Microsoft. Simon and Schuster, New York (1998).
               </div>
               <div class="bibl"><span class="ref" id="desouza2005">
                     <!-- close -->De Souza et al. 2005</span> De Souza, C., Froehlich, J.,
                  and Dourish, P. "Seeking the source: software source code as
                  a social and technical artifact." Proceedings of the 2005
                  international ACM SIGGROUP conference on supporting group work (2005):
                  197-206.
               </div>
               <div class="bibl"><span class="ref" id="eich2004">
                     <!-- close -->Eich and Hyatt 2004</span> Eich, B. and Hyatt, D. Mozilla
                  Development Roadmap (2004). Available from . [5 September 2014]
               </div>
               <div class="bibl"><span class="ref" id="fuller2012">
                     <!-- close -->Fuller and Goffey 2012</span> Fuller, M., and Goffey, A.
                  Evil Media. MIT Press, Cambridge (2012).
               </div>
               <div class="bibl"><span class="ref" id="fung2007">
                     <!-- close -->Fung et al. 2007</span> Fung, A., Graham, M., and Weil, D.
                  Full Disclosure: The Perils and Promise of Transparency. Cambridge University
                  Press, Cambridge (2007).
               </div>
               <div class="bibl"><span class="ref" id="galloway2004">
                     <!-- close -->Galloway 2004</span> Galloway, A. R. Protocol: how
                  control exists after decentralization. MIT Press, Cambridge (2004).
               </div>
               <div class="bibl"><span class="ref" id="gethers2010">
                     <!-- close -->Gethers and Poshyvanyk 2010</span> Gethers, M., and
                  Poshyvanyk, D. "Using relational topic models to capture
                  coupling among classes in object-oriented software systems." Software
                  Maintenance (ICSM), 2010 IEEE International Conference (2010): 1-10.
               </div>
               <div class="bibl"><span class="ref" id="golumbia2009">
                     <!-- close -->Golumbia 2009</span> Golumbia, D. The cultural logic of
                  computation. Harvard University Press, Cambridge (2009).
               </div>
               <div class="bibl"><span class="ref" id="gray2009">
                     <!-- close -->Gray 2009</span> Gray, M. L. Out in the country: Youth,
                  media, and queer visibility in rural America. NYU Press, New York (2009).
               </div>
               <div class="bibl"><span class="ref" id="hayles2008">
                     <!-- close -->Hayles 2008</span> Hayles, N. K. How we became posthuman:
                  Virtual bodies in cybernetics, literature, and informatics. University of
                  Chicago Press, Chicago (2008).
               </div>
               <div class="bibl"><span class="ref" id="jansz2010">
                     <!-- close -->Jansz et al. 2010</span> Jansz, J., Avis, C., and Vosmeer,
                  M. "Playing The Sims 2: An exploration of gender differences
                  in players’ motivations and patterns of play." New Media and Society,
                  12.2 (2010): 235-251.
               </div>
               <div class="bibl"><span class="ref" id="jockers2013">
                     <!-- close -->Jockers 2013</span> Jockers, M. L. Macroanalysis:
                  Digital methods and literary history. University of Illinois Press, Champaign
                  (2013).
               </div>
               <div class="bibl"><span class="ref" id="kittler1997">
                     <!-- close -->Kittler 1997</span> Kittler, F. A. "There is No Software." Literature, Media, Information Systems. G + B
                  Arts, Amsterdam (1997), pp 147-155.
               </div>
               <div class="bibl"><span class="ref" id="kuhn2007">
                     <!-- close -->Kuhn et al. 2007</span> Kuhn, A., Ducasse, S., and Gírba,
                  T. "Semantic clustering: Identifying topics in source
                  code." Information and Software Technology, 49.3 (2007):
                  230-243.
               </div>
               <div class="bibl"><span class="ref" id="latour1987">
                     <!-- close -->Latour 1987</span> Latour, B. Science in action: How to
                  follow scientists and engineers through society. Harvard University Press,
                  Cambridge (1987).
               </div>
               <div class="bibl"><span class="ref" id="lessig2009">
                     <!-- close -->Lessig 2009</span> Lessig, L. "Against Transparency." The New Republic (2009). Available from <a class="ref" href="http://www.newrepublic.com/article/books-and-arts/against-transparency" onclick="window.open('http://www.newrepublic.com/article/books-and-arts/against-transparency'); return false">http://www.newrepublic.com/article/books-and-arts/against-transparency</a>
                  [15 August 2015]
               </div>
               <div class="bibl"><span class="ref" id="linstead2007">
                     <!-- close -->Linstead et al. 2007</span> Linstead, E., Rigor, P.,
                  Bajracharya, S., Lopes, C., and Baldi, P. "Mining concepts
                  from code with probabilistic topic models." Proceedings of the
                  twenty-second IEEE/ACM international conference on Automated software
                  engineering (2007): 461-464.
               </div>
               <div class="bibl"><span class="ref" id="lukins2008">
                     <!-- close -->Lukins et al. 2008</span> Lukins, S. K., Kraft, N. A.,
                  and Etzkorn, L. H. "Source code retrieval for bug
                  localization using latent dirichlet allocation." Reverse Engineering,
                  2008. WCRE'08. 15th Working Conference (2008): 155-164.
               </div>
               <div class="bibl"><span class="ref" id="mahoney1996">
                     <!-- close -->Mahoney 1996</span> Mahoney, M. S. "Issues in the History of Computing." History of programming
                  languages---II. ACM Press, New York (1996), pp. 772-781.
               </div>
               <div class="bibl"><span class="ref" id="manovich2001">
                     <!-- close -->Manovich 2001</span> Manovich, L. (2001). The language
                  of new media. MIT Press, Cambridge (2001).
               </div>
               <div class="bibl"><span class="ref" id="marino2006">
                     <!-- close -->Marino 2006</span> Marino, M. C. "Critical code studies." Electronic book review 4 (2006). Available
                  from [4 July 2014]
               </div>
               <div class="bibl"><span class="ref" id="markley1996">
                     <!-- close -->Markley 1996</span> Markley, R. "Boundaries: Mathematics, Alienation, and the Metaphysics of
                  Cyberspace." In R. Markley (ed), Virtual Realities and Their
                  Discontents. Johns Hopkins University Press, Baltimore (1996), pp. 55-78.
               </div>
               <div class="bibl"><span class="ref" id="mcgann1992">
                     <!-- close -->McGann 1992</span> McGann, J. J. A critique of modern
                  textual criticism. University Press of Virginia, Charlottesville (1992).
               </div>
               <div class="bibl"><span class="ref" id="mcgann2001">
                     <!-- close -->McGann 2001</span> McGann, J. J. Radiant textuality:
                  Literature after the world wide web. Palgrave, New York (2001).
               </div>
               <div class="bibl"><span class="ref" id="mcpherson2012">
                     <!-- close -->McPherson 2012</span> McPherson, T. "US Operating System at Mid-Century: The Intertwining of Race
                  and UNIX." In L. Nakamura and P. Chow White (eds), Race after the
                  Internet. Routledge, New York (2012), pp. 21-37.
               </div>
               <div class="bibl"><span class="ref" id="mozilla2002">
                     <!-- close -->Mozilla 2002</span> Mozilla Launches Mozilla 1.0 (2002).
                  Available from . [2 September 2014].
               </div>
               <div class="bibl"><span class="ref" id="mozilla2003">
                     <!-- close -->Mozilla 2003</span> Mozilla.org Announces Launch of the
                  Mozilla Foundation to Lead Open-Source Browsers Efforts (2003). Available from
                  <a class="ref" href="https://web.archive.org/web/20030719114119/http:/www.mozillafoundation.org/press/mozilla-foundation.html" onclick="window.open('https://web.archive.org/web/20030719114119/http:/www.mozillafoundation.org/press/mozilla-foundation.html'); return false">https://web.archive.org/web/20030719114119/http:/www.mozillafoundation.org/press/mozilla-foundation.html</a>
                  [2 September 2014]
               </div>
               <div class="bibl"><span class="ref" id="murray1997">
                     <!-- close -->Murray 1997</span> Murray, J. H. Hamlet on the holodeck:
                  The future of narrative in cyberspace. MIT Press, Cambridge (1997).
               </div>
               <div class="bibl"><span class="ref" id="nakamura2009">
                     <!-- close -->Nakamura 2009</span> Nakamura, L. "Don't hate the player, hate the game: The racialization of labor in World
                  of Warcraft." Critical Studies in Media Communication, 26.2 (2009):
                  128-144.
               </div>
               <div class="bibl"><span class="ref" id="nardi2010">
                     <!-- close -->Nardi 2010</span> Nardi, B. My life as a night elf priest:
                  An anthropological account of World of Warcraft. University of Michigan Press,
                  Ann Arbor (2010).
               </div>
               <div class="bibl"><span class="ref" id="netscape1998">
                     <!-- close -->Netscape 1998</span> Netscape Announces Plan to Make
                  Next-Generation Communicator Source Code Available for Free on the Net (1998).
                  Available from <a class="ref" href="http://web.archive.org/web/20021001071727/wp.netscape.com/newsref/pr/newsrelease558.html" onclick="window.open('http://web.archive.org/web/20021001071727/wp.netscape.com/newsref/pr/newsrelease558.html'); return false">http://web.archive.org/web/20021001071727/wp.netscape.com/newsref/pr/newsrelease558.html</a>
                  [4 September 2014]
               </div>
               <div class="bibl"><span class="ref" id="norman1988">
                     <!-- close -->Norman 1988</span> Norman, D. A. The psychology of
                  everyday things. Basic books, New York (1988).
               </div>
               <div class="bibl"><span class="ref" id="sample2013">
                     <!-- close -->Sample 2013</span> Sample, M. "Criminal Code: Procedural Logic and Rhetorical Excess in Video
                  Games." Digital Humanities Quarterly, 7.1 (2013). Available from [6
                  August 2014]
               </div>
               <div class="bibl"><span class="ref" id="stallman2002">
                     <!-- close -->Stallman 2002</span> Stallman, R. M. "Why 'Free Software' is Better than
                  'Open Source.'" In J. Gray (ed), Free
                  Software, Free Society: The Selected Essays of Richard M. Stallman. GNU Press,
                  Boston (2002), pp. 57-62.
               </div>
               <div class="bibl"><span class="ref" id="thomas2011">
                     <!-- close -->Thomas et al. 2011</span> Thomas, S. W., Adams, B.,
                  Hassan, A. E., and Blostein, D. "Modeling the evolution of
                  topics in source code histories." Proceedings of the 8th working
                  conference on mining software repositories (2011): 173-182.
               </div>
               <div class="bibl"><span class="ref" id="torvalds2001">
                     <!-- close -->Torvalds and Diamond 2001</span> Torvalds, L and
                  Diamond, D. Just For Fun: The Story of an Accidental Revolutionary.
                  HarperCollins, New York (2001).
               </div>
               <div class="bibl"><span class="ref" id="underwood2012">
                     <!-- close -->Underwood and Sellers 2012</span> Underwood, T., and
                  Sellers, J. "The emergence of literary diction."
                  Journal of Digital Humanities, 1.2 (2012). Available from <a class="ref" href="http://journalofdigitalhumanities.org/1-2/the-emergence-of-literary-diction-by-ted-underwood-and-jordan-sellers/" onclick="window.open('http://journalofdigitalhumanities.org/1-2/the-emergence-of-literary-diction-by-ted-underwood-and-jordan-sellers/'); return false">http://journalofdigitalhumanities.org/1-2/the-emergence-of-literary-diction-by-ted-underwood-and-jordan-sellers/</a>
                  [7 August 2014]
               </div>
               <div class="bibl"><span class="ref" id="wardripfruin2009">
                     <!-- close -->Wardrip-Fruin 2009</span> Wardrip-Fruin, N.
                  Expressive Processing: Digital fictions, computer games, and software studies.
                  MIT Press, Cambridge (2009).
               </div>
               <div class="bibl"><span class="ref" id="williams2005">
                     <!-- close -->Williams and Hollingsworth 2005</span> Williams, C. C.,
                  and Hollingsworth, J. K. "Automatic mining of source code
                  repositories to improve bug finding techniques." Software
                  Engineering, 31.6 (2005): 466-480.
               </div>
               <div class="bibl"><span class="ref" id="winograd1986">
                     <!-- close -->Winograd and Flores 1986</span> Winograd, T. and Flores
                  F. Understanding computers and cognition: A new foundation for design. Intellect
                  Books, Addison-Wesley, Reading (1986).
               </div>
               <div class="bibl"><span class="ref" id="witte2008">
                     <!-- close -->Witte et al. 2008</span> Witte, R., Li, Q., Zhang, Y., and
                  Rilling, J. "Text mining and software engineering: an
                  integrated source code and document analysis approach." IET software,
                  2.1 (2008): 3-16.
               </div>
               <div class="bibl"><span class="ref" id="ying2004">
                     <!-- close -->Ying et al. 2004</span> Ying, A. T., Murphy, G. C., Ng, R.,
                  and Chu-Carroll, M. C. "Predicting source code changes by
                  mining change history." Software Engineering 30.9 (2004):
                  574-586.
               </div>
            </div>
            <div class="toolbar"><a href="#">Preview</a>  |  <span style="color: grey">XML</span> |  <a href="#" onclick="javascript:window.print();" title="Click for print friendly version">Print Article</a></div>
         </div>
      </div>
   </body>
</html>