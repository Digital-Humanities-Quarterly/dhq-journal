<html xmlns="http://www.w3.org/1999/xhtml">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <title>[PREVIEW] DHQ: Digital Humanities Quarterly: Continuous Integration and Unit Testing of Digital Editions</title>
      <link href="../../common/css/dhq.css" type="text/css" rel="stylesheet" />
      <link href="../../common/css/dhq_screen.css" media="screen" type="text/css" rel="stylesheet" />
      <link href="../../common/css/dhq_print.css" media="print" type="text/css" rel="stylesheet" /><style type="text/css">
        #mainContent {
          float: none;
          padding-top: 2em;
          padding-left: 4em;
          padding-right: 4em;
          margin-left: 225px;
           
        }</style></head>
   <body>
      <div id="mainContent">
         <div xmlns:dhqBiblio="http://digitalhumanities.org/dhq/ns/biblio" class="DHQarticle">
            <div id="pubInfo">Preview<br />Volume 011 Number 4
            </div>
            <div class="toolbar">
               <form id="taporware" action="get">
                  <div><a href="//preview/index.html">Preview</a>
                      | 
                     <a rel="external" href="//vol/11/4/000350.xml">XML</a>
                     
                     | 
                     		   Discuss
                     			(<a href="/dhq/vol/11/4/000350/000350.html#disqus_thread" data-disqus-identifier="000350">
                        				Comments
                        			</a>)
                     
                  </div>
               </form>
            </div>
            
            <div class="DHQheader">
               
               
               
               
               <h1 class="articleTitle">Continuous Integration and Unit Testing of
                  Digital Editions
               </h1>
               
               
               <div class="author"><span style="color: grey">Bridget Almas</span> &lt;<a href="mailto:balmas_at_gmail_dot_com" onclick="javascript:window.location.href='mailto:'+deobfuscate('balmas_at_gmail_dot_com'); return false;" onkeypress="javascript:window.location.href='mailto:'+deobfuscate('balmas_at_gmail_dot_com'); return false;">balmas_at_gmail_dot_com</a>&gt;, The Alpheios Project, Ltd.
               </div>
               
               <div class="author"><span style="color: grey">Thibault Clérice</span> &lt;<a href="mailto:tthibault_dot_clerice_at_enc-sorbonne_dot_fr" onclick="javascript:window.location.href='mailto:'+deobfuscate('tthibault_dot_clerice_at_enc-sorbonne_dot_fr'); return false;" onkeypress="javascript:window.location.href='mailto:'+deobfuscate('tthibault_dot_clerice_at_enc-sorbonne_dot_fr'); return false;">tthibault_dot_clerice_at_enc-sorbonne_dot_fr</a>&gt;, Centre Jean-Mabillon (École des chartes) -
                  PSL
               </div>
               
               
               
               
               
               
               
               
               <span class="Z3988" title="url_ver=Z39.88-2004&amp;ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rfr_id=info%3Asid%2Fzotero.org%3A2&amp;rft.genre=article&amp;rft.atitle=Continuous%20Integration%20and%20Unit%20Testing%20of%20Digital%20Editions&amp;rft.jtitle=Digital%20Humanities%20Quarterly&amp;rft.stitle=DHQ&amp;rft.issn=1938-4122&amp;rft.date=&amp;rft.volume=011&amp;rft.issue=4&amp;rft.aulast=Almas&amp;rft.aufirst=Bridget&amp;rft.au=Bridget%20Almas&amp;rft.au=Thibault%20Clérice"> </span></div>
            
            
            <div id="DHQtext">
               
               
               <div id="abstract">
                  <h2>Abstract</h2>
                  
                  <p>Over the last few years, the Perseus Digital Library (PDL) and the Open Philology
                     Project (OPP) have been moving towards enabling better interoperability and
                     citability of their texts by implementing the Canonical Text Services URN
                     standard and the Epidoc subset of the TEI P5 guidelines. This is a
                     resource-intensive effort necessitating a scalable workflow centered on
                     continuous curation of these texts, from both within and outside the PDL/OPP
                     ecosystem. Key requirements for such a workflow are ease of maintenance and
                     speed of deployment of texts for use by a wide variety of analytical services
                     and user interfaces. Drawing on software engineering best practices, we have
                     designed an architecture meant for continuous integration with customizable
                     services that test individual files upon each contribution made to our public
                     git repositories. The services can be configured to test and report status on a
                     variety of checkpoints from schema compliance to CTS-ready markup designed for
                     flexibility and interoperability.
                  </p>
                  
               </div>
               
               
               
               
               
               <div class="div div0">
                  
                  <h1 class="head">Introduction</h1>
                  
                  <div class="counter"><a href="#p1">1</a></div>
                  <div class="ptext" id="p1">In 2012, the <cite class="title">Perseus Digital Library (PDL)</cite>
                     [<a class="ref" href="#perseuscts">Almas 2013</a>] decided to apply a nascent norm in the digital
                     classics world, the <em class="term">Canonical Text Services</em> (CTS) protocol [<a class="ref" href="#cts">Smith and Blackwell 2012</a>], to its corpus of primary source Greek and Latin texts (<a href="#figure01">see Figure 1</a>). This effort coincided with a rather
                     aggressive <em class="term">Optical Character Recognition</em> (OCR) campaign by its
                     sister project, the <cite class="title">Open Philology Project</cite> (OPP) in Leipzig,
                     aimed "at providing at least one version for all Greek and
                     Latin sources produced during antiquity". Through this effort OPP is
                     adding thousands of new Greek and Latin texts to open access repositories, with
                     a focus on post-classical corpora available online [<a class="ref" href="#opp">Crane et al 2013</a>]. With
                     hundreds of pre-existing <cite class="title">PDL</cite> texts needing to be made
                     <em class="term">CTS</em> compliant as well as upgraded from the <em class="term">Text Encoding
                        Initiative (TEI) P4</em> Guidelines [<a class="ref" href="#teip4">TEI-Consortium 2002</a>] to the
                     <em class="term">Epidoc</em>
                     [<a class="ref" href="#epidoc">Elliott, Bodard, Cayless et al. 2006</a>] subset of <em class="term">TEI P5</em>
                     [<a class="ref" href="#teip5">TEI-Consortium 2007</a>], together with the incoming hundreds or thousands of
                     texts coming out of the <cite class="title">OPP</cite> pipeline, the work of a curator would
                     require much tedious checking of technical details.
                  </div>
                  
                  <div class="counter"><a href="#p2">2</a></div>
                  <div class="ptext" id="p2">In addition, management of resources needs to be scaled within the context of a
                     non-uniform corpus. Both the conversion process of pre-existing <em class="term">TEI
                        XML</em> files and the integration of new files needs to be validated
                     against the agreed upon norms. While the <em class="term">TEI</em> norm and any of its
                     subsets are a good first step towards unification of resources, norms like
                     <em class="term">CTS</em> and digital libraries like <cite class="title">Perseus</cite> require
                     some specific technical solutions that can be both scalable and
                     cost-efficient.
                  </div>
                  
                  <div id="figure01" class="figure">
                     
                     
                     <div class="ptext"><a href="./resources/images/figure01.png" rel="external"><img src="./resources/images/figure01.png" alt="" /></a></div>
                     
                     <div class="caption">
                        <div class="label">Figure 1. </div>CTS API Requests Explanation Diagram
                     </div>
                  </div>
                  
               </div>
               
               <div class="div div0">
                  
                  <h1 class="head">Motivating Factors, Decisions and History</h1>
                  
                  <div class="counter"><a href="#p3">3</a></div>
                  <div class="ptext" id="p3">Lessons learned from the long history of managing the Perseus corpus and its
                     supporting applications drove some of the technical decisions of this project.
                     Ingesting new and updated texts in the legacy <cite class="title">Perseus 4.0</cite>
                     application is a tedious process. <cite class="title">Perseus 4.0</cite> is a traditional
                     3-tier Java web application which is deployed under <em class="term">Tomcat</em>. The
                     views it presents the users combine the results of relational database queries
                     of a <em class="term">MySQL</em> database [<a class="ref" href="#mysql">MySQL 2004</a>] with static data served
                     directly from the filesystem. Much of the runtime analytical functionality
                     (frequency calculations, word lookups, entity identification) relies on textual
                     data being parsed and pre-loaded into tables in the supporting
                     <em class="term">MySQL</em> database. The binary offset location of text within the
                     <em class="term">XML</em> source files is used to synchronize the relational data
                     with the <em class="term">XML</em> source. This tight coupling between application code,
                     database and raw data means that any time a text is touched, the entire database
                     needs to be reloaded. A more scalable solution was needed that would enable
                     Perseus to serve new and updated texts in real time as they became available,
                     with the confidence that they would work correctly and not break other parts of
                     the application. This requires a distributed architecture. Implementation of
                     <em class="term">CTS</em> is one step in this direction, as it allows us to identify
                     and serve text passages by their canonical identifiers, using persistent stable
                     identifiers and a technology-independent <em class="term">API</em>.
                  </div>
                  
                  <div class="counter"><a href="#p4">4</a></div>
                  <div class="ptext" id="p4">Another primary objective for the <cite class="title">Perseus</cite> and <cite class="title">OPP</cite>
                     projects is to provide a fully open-access and self-describing corpus of texts
                     which can stand on its own and support a wide variety of scholarly needs. Any
                     solution which embeds knowledge of text content or structure in software
                     application or database code is antithetical to this goal.
                  </div>
                  
               </div>
               
               <div class="div div0">
                  
                  <h1 class="head">Structural Markup Guidelines</h1>
                  
                  <div class="counter"><a href="#p5">5</a></div>
                  <div class="ptext" id="p5">As previously noted, the <em class="term">CTS</em> service protocol allows us to identify
                     and serve text passages by their canonical identifiers, using persistent stable
                     identifiers and a technology-independent API. The <em class="term">CTS URN</em> notation
                     is based on a strict hierarchical concept of the text, where its passages are
                     sub-ordered down to the word level with no limitations applied to the depth of
                     the passages tree. In this context, <em class="term">XML</em> fits the technical
                     requirements. But to implement <em class="term">CTS</em> we must decide upon a single
                     "canonical" hierarchical <em class="term">XML</em> markup
                     structure for each text. External indices and transformations can be used to
                     present alternative schemes or visualizations, in addition to or instead of
                     relying upon embedded milestones to deal with issues of overlapping citation
                     hierarchies.
                  </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">From scholarly tradition to <em class="term">XML</em> encoding
                     </h2>
                     
                     <div class="counter"><a href="#p6">6</a></div>
                     <div class="ptext" id="p6">Most scholarly tradition is easily transferred from text to tree [<a class="ref" href="#ohco">Renear, Mylonas and Durang 1993</a>]: hierarchical models of lines, verses, books or
                        chapters are easily expressed using traditional <em class="term">TEI</em><a class="noteRef" href="#d4e404">[1]</a>. Verses (in the context of
                        Antiquity, poetry and theater) and paragraph-based citation
                        schemes translate perfectly to a tree system. Use of the <span class="monospace">tei:n</span>
                        attribute to denote the identifier of a passage allows for a fast, real-time
                        traversing of the tree, with technologies such as <em class="term">XPath</em> and
                        <em class="term">XQuery</em>, to reconstitute passages such as <a class="ref" href="http://data.perseus.org/citations/urn:cts:greekLit:tlg0012.tlg001:1.1" onclick="window.open('http://data.perseus.org/citations/urn:cts:greekLit:tlg0012.tlg001:1.1'); return false">Homer's <cite class="title italic">Iliad</cite> 1.1</a>. Identification of
                        passages becomes scalable and encoder-friendly and respects both
                        <em class="term">TEI</em> guidelines and the scholarly tradition.
                     </div>
                     
                     <div class="counter"><a href="#p7">7</a></div>
                     <div class="ptext" id="p7">However, a complex situation emerges from another tradition: page-based
                        citation schemes. Most of Perseus’ prose resources, whose
                        citation schemes are inherited from scholarly traditions, are quoted by
                        semantical unit (book, chapter, section, etc.) whereas some systems have
                        preferred topological ones (mostly pages). Cicero's and
                        Plato's work, two of the most studied authors in Greek and
                        Latin, follow a page based scheme [<a class="ref" href="#readinglist">Franzini and Foradi 2014</a>]. In this
                        context, we find ourselves with two concurrent trees: one that reflects
                        paragraphs and divisions through markup; a second one that embodies the
                        topographical citation scheme. This leads to the use of the fairly common
                        <span class="monospace">&lt;tei:pb&gt;</span> or <span class="monospace">&lt;tei:milestone&gt;</span>, identifying the name and the
                        identifier of the canonical citation scheme if required. With the constraint
                        of an <em class="term">XML</em> based delivery of passages, however, this structure
                        fails and collides with the tree oriented query system of XML, namely
                        <em class="term">XPath</em>.
                     </div>
                     
                     <div class="counter"><a href="#p8">8</a></div>
                     <div class="ptext" id="p8">The <cite class="title">Perseus Digital Library</cite> needs not only to be scalable in
                        terms of speed but also in terms of code efficiency. Ideally a single
                        technical implementation of the <em class="term">CTS protocol</em> should be able to
                        support the entire corpus. And to deliver a rather fast response to the
                        <em class="term">GetValidReff</em> request for passages in the <cite class="title italic">Iliad</cite> - which, without refinement, can necessitate
                        the transfer and the identification of the 15,693 <em class="term">URNs</em>
                        corresponding to the complete set of line identifiers available in the text <a class="noteRef" href="#d4e491">[2]</a>-
                        the XPATH for passage retrieval needs to be cost-efficient. The first
                        solution to this problem is a shift from the traditional citation scheme to
                        a more logical one, with the publication of an equivalences registry between
                        one scheme and another. A second one is the manipulation of the markup
                        rules, with attributes which would indicate that one paragraph and its
                        sibling actually belong to a common unit.
                     </div>
                     
                  </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">Self-containing text vs. outer metadata: <cite class="title italic">CapiTainS Guidelines</cite></h2>
                     
                     <div class="counter"><a href="#p9">9</a></div>
                     <div class="ptext" id="p9"><em class="term">CTS</em> is built around three major sets of information which are
                        covered by its guidelines and which come from three different sources:
                        metadata from the library, with authorship and edition information, metadata
                        from the data repository, including the object identifier, and metadata from
                        scholarship, as embodied by the citation scheme. The <cite class="title italic">CapiTainS Guidelines</cite>
                        [<a class="ref" href="#capitains">Almas, Clérice and Munson 2017</a>] are designed specifically for a <em class="term">XML</em>
                        based implementation of the <em class="term">CTS protocol</em>. They supplement the
                        core <em class="term">CTS specification</em> and provide a solution to the challenges
                        of enabling reuse and scalability. The <cite class="title italic">CapiTainS Guidelines</cite> include : 
                        <ul class="list">
                           <li class="item">a directory and file naming convention (<a href="#figure02">see Figure 2</a>),
                           </li>
                           <li class="item">expression of the <em class="term">CTS citation scheme</em> and edition
                              specific metadata inside the edition <em class="term">XML</em> file,
                           </li>
                           <li class="item">shared metadata files at the textgroup and notional work
                              level
                           </li>
                        </ul>
                     </div>
                     
                     <div id="figure02" class="figure">
                        
                        
                        <div class="ptext"><a href="./resources/images/figure02.png" rel="external"><img src="./resources/images/figure02.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 2. </div>Directory structure
                        </div>
                     </div>
                     
                     <div class="counter"><a href="#p10">10</a></div>
                     <div class="ptext" id="p10">The rationale behind this approach is to avoid unnecessary duplication of
                        information while still allowing for a completely self-describing corpus
                        structure. Texts adhering to the guidelines can then be integrated into the
                        corpus with a much lighter dependency on the current implementation of the
                        services and tools built to support it, while shared metadata can be of use
                        separately from the text itself.
                     </div>
                     
                     <div class="counter"><a href="#p11">11</a></div>
                     <div class="ptext" id="p11">To facilitate text identification, the identifier of the text should be
                        accessible from both inside and outside the markup. While the naming
                        convention of files does cover external identification using the work
                        identifier, a simple query on the text should also be able to return its
                        full <em class="term">URN</em>. In <em class="term">TEI P5</em>, the deepest required common
                        node is the <span class="monospace">&lt;tei:body&gt;</span>. In the subset commonly used in
                        <em class="term">Epidoc</em>, the deepest required node is one level deeper, the
                        first <span class="monospace">&lt;tei:div&gt;</span> inside one text, which identifies the text as being
                        of <span class="monospace">@type</span>
                        translation or edition. The <cite class="title italic">CapiTainS Guidelines</cite> add to this a required
                        <span class="monospace">@n</span> attribute containing the <em class="term">CTS URN</em> of the text.
                        This is enough for the <em class="term">CTS API</em> to identify the author, the work
                        and the edition or translation specific metadata from internal markup or
                        external databases. We use the <span class="monospace">@n</span> attribute on the div enclosing
                        the text or translation, rather than metadata in the <em class="term">TEI</em>
                        <span class="monospace">&lt;header&gt;</span>, because the <em class="term">TEI P5</em> (and the
                        <em class="term">Epidoc</em> subset) allow for multiple editions or translations
                        to be included in one file, and we want the <em class="term">URN</em> to be
                        unambiguously associated with the text it identifies.
                     </div>
                     
                     <div class="counter"><a href="#p12">12</a></div>
                     <div class="ptext" id="p12">In addition to the individual file naming convention, applying a similar
                        approach to the hierarchical directory structure allows us to easily support
                        human browsing of the resources in the source repository [<a class="ref" href="#pdlLatin">Crane et al. 2015</a>]. Our guidelines call for the first level of the
                        directory structure to be named for the <em class="term">CTS textgroup</em> and to
                        include a file containing the <em class="term">CTS</em> metadata for the textgroup,
                        named as "__cts__.xml". The second level of the directory structure is
                        named after the identifier of the notional work and itself contains a
                        metadata file which contains the <em class="term">CTS</em> metadata for the work,
                        edition and translation. These metadata files can be used by the service
                        application to dynamically construct a complete <em class="term">CTS
                           TextInventory</em>, a required output of the applications implementing
                        the <em class="term">CTS API</em>.
                     </div>
                     
                     <div class="counter"><a href="#p13">13</a></div>
                     <div class="ptext" id="p13">As for the citation scheme, the <em class="term">TEI P5</em> specifically already
                        defines a set of nodes, the <span class="monospace">&lt;tei:cRefPattern&gt;</span>, as children of
                        <span class="monospace">&lt;tei:refsDecl&gt;</span>, that are built for this specific task:
                        identifying references through the traversal of the tree using <em class="term">regular
                           expressions</em> and <em class="term">XPath</em>. The <cite class="title italic"><em class="term">CapiTainS</em> Guidelines</cite> call for implementation
                        of this <span class="monospace">&lt;tei:refsDecl&gt;</span> structure, using the <span class="monospace">@n</span> attribute to
                        identify it as the CTS reference declaration and the definition
                        of <span class="monospace">&lt;cRefPattern&gt;</span> for each level of citation to allow for the internal
                        description to perform information retrieval (<a href="#code01">see Code
                           Sample 1</a>). Applications which serve the corpus and which want to
                        implement the <em class="term">CTS API</em> can aggregate this information with that
                        provided by the external <em class="term">CTS metadata</em> files to dynamically
                        report the citation scheme as part of the <em class="term">TextInventory</em>. 
                     </div>
                     
                     <div id="code01" class="example">
                        
                        
                        <blockquote class="eg"><pre><tt>
                            
&lt;refsDecl n="CTS"&gt;
 &lt;cRefPattern n="line" matchPattern="(.+).(.+)"
   replacementPattern="#xpath(/tei:TEI/tei:text/tei:body/tei:div[&lt;att&gt;@n&lt;/att&gt;='$1']//tei:l[&lt;att&gt;@n&lt;/att&gt;='$2'])"&gt;
  &lt;p&gt;This pointer pattern extracts book and line&lt;/p&gt;
 &lt;/cRefPattern&gt;
 &lt;cRefPattern n="book" matchPattern="(.+)"
   replacementPattern="#xpath(/tei:TEI/tei:text/tei:body/tei:div[&lt;att&gt;@n&lt;/att&gt;='$1'])"&gt;
  &lt;p&gt;This pointer pattern extracts book.&lt;/p&gt;
 &lt;/cRefPattern&gt;
&lt;/refsDecl&gt;
                            
                        </tt></pre></blockquote>
                        
                        <div class="caption">
                           <div class="label">Example 1. </div>Implementation of <em class="term">CTS</em>
                           <span class="monospace">&lt;refsDecl&gt;</span> for an edition of the Iliad
                        </div>
                     </div>
                     
                  </div>
                  
               </div>
               
               <div class="div div0">
                  
                  <h1 class="head">
                     <em class="term">Unit Tests</em>
                     
                  </h1>
                  
                  <div class="div div1">
                     
                     <h2 class="head">From text to software : defining properties and functions</h2>
                     
                     <div class="counter"><a href="#p14">14</a></div>
                     <div class="ptext" id="p14"><em class="term">Unit testing</em> is a software engineering practice which focuses on
                        ensuring the functional capacity of software following changes to it by
                        running tests on the smallest unit in a non-deployment environment to
                        prevent propagation of errors in the software base [<a class="ref" href="#unittest">Huizinga and Kolawa 2007</a>, 75]. Test results can be expressed in many different ways :
                        through percentage relative to the last test, or absolutely, or in a simple
                        binary fashion with a passed/not passed information. Tests can generally be
                        developed automatically but might be expanded once specific bugs needing
                        testing surface. Unit tests are intended to check the valid output and/or
                        the consistency of resources, whether they are compute-free or not.
                        (Constants and properties are examples of compute-free resources, whereas
                        functions and objects are examples of the opposite, because a specific input
                        should give a specific output.) Unit tests on <em class="term">XML</em> documents are
                        focused on testing properties of the document against a schema such as
                        <em class="term">TEI</em> using <em class="term">RelaxNG</em>
                        [<a class="ref" href="#relaxng">Clark 2001</a>]. <em class="term">RelaxNG</em> is a description language for
                        <em class="term">XML</em> that specifies how an <em class="term">XML</em> document should
                        be structured, such as what values are acceptable for attributes and what
                        nodes allow or require as their descendants. The scope of what we can test
                        with a <em class="term">RelaxNG</em> schema is limited to these tests and the content
                        and structure of a given document. It has no external data access and is not
                        designed for computing variable document structures.
                     </div>
                     
                     <div class="counter"><a href="#p15">15</a></div>
                     <div class="ptext" id="p15">The first step to properly apply <em class="term">unit testing</em> in this context is
                        to define, for an encoded text, the parts which are "properties" and
                        the parts which are "functions". Identifying these parts helps design
                        the general test scenario by grouping resources which are less compute
                        intensive. In a CTS corpus, we can think of metadata such as the <em class="term">CTS
                           URN</em> identifier and the text markup as properties, i.e. they
                        should be present and respected but they are not to be computed upon.
                        Additional testable properties, given the <cite class="title italic">CapiTainS Guidelines</cite>, include information from
                        the outer metadata files about the work and author, along with their
                        translations.
                     </div>
                     
                     <div class="counter"><a href="#p16">16</a></div>
                     <div class="ptext" id="p16">Adherence to and application of a specific text encoding scheme falls in
                        between function and property. In the context of <em class="term">Object Oriented
                           Programming (OOP)</em>
                        [<a class="ref" href="#oop">Pierce 2002</a>, 225], the <em class="term">TEI</em> Encoding, and its
                        subsets, represents the architecture of the <em class="term">proto-object</em> or the
                        <em class="term">parent class</em>. Objects derived from this class should
                        respect the parent structure. In this context, <em class="term">XML</em> compliance,
                        and moreover, schema and <em class="term">DTD</em> compliance, can be thought of as
                        required properties of those objects.
                     </div>
                     
                     <div class="counter"><a href="#p17">17</a></div>
                     <div class="ptext" id="p17">Passage retrieval is the only specific function that one encounters in
                        <em class="term">CTS</em>. The presence of the <span class="monospace">&lt;refsDecl&gt;</span> in the
                        <em class="term">XML</em> file of a text is a property, but the accuracy of the
                        <span class="monospace">&lt;refsDecl&gt;</span> and the presence within the text of at least one
                        element for each level of citation is a requirement for the text to be
                        functional. In addition, for any text, the <span class="monospace">@replacementPattern</span>
                        given for any level of citation should not, when completed, resolve to more
                        than one passage for any given identifier at any level of the hierarchy
                     </div>
                     
                     <div class="counter"><a href="#p18">18</a></div>
                     <div class="ptext" id="p18">These then are the base cases for our tests (<a href="#figure03">see
                           Figure 3</a>), but experience tells us that additional properties and
                        tests will likely be discovered to be necessary, and need to be added to the
                        existing texts. For example, with the expansion to semitic languages, the
                        existence of right-to-left markers should be checked against language
                        rules.
                     </div>
                     
                     <div id="figure03" class="figure">
                        
                        
                        <div class="ptext"><a href="./resources/images/figure03.png" rel="external"><img src="./resources/images/figure03.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 3. </div>Base Test Diagram
                        </div>
                     </div>
                     
                  </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">Reuse, present and future development</h2>
                     
                     <div class="counter"><a href="#p19">19</a></div>
                     <div class="ptext" id="p19">Taking the software engineering paradigm further, we can treat the corpora as
                        a whole as a set of software packages, where each text is a unit
                        representing an individual code base. The test should happen in three
                        different steps: <em class="term">object discovery</em>, <em class="term">test
                           attribution</em>, and <em class="term">unit tests</em>. Within this context,
                        test discovery means detection of <em class="term">XML</em> files. Then in the test
                        attribution step, objects are dispatched by a type detector: here, metadata
                        files adhering to the __cts__.xml name are automatically sent to a specific
                        metadata test class while others are sent to a text test class. Finally,
                        objects are dealt with in a test object whose output is sent back to the
                        main test process. In case the results are needed for further tests, such as
                        the presence of metadata about author and <em class="term">notional work</em>, those
                        are made available in this process.
                     </div>
                     
                     <div class="counter"><a href="#p20">20</a></div>
                     <div class="ptext" id="p20">Tests rely on different technical resources, and some do not require custom
                        coding: for example, schemes are tested against <em class="term">TEI</em> or
                        <em class="term">Epidoc</em> using jingtrang [<a class="ref" href="#jingtrang">Clark 2001 (2)</a>] and the
                        respective <em class="term">RelaxNG</em> resources. Other tests, such as those which
                        check the naming conventions, are implemented simply as regular expressions.
                        And finally, the <cite class="title">CapiTainS Guidelines</cite> for the
                        definition and resolution of <em class="term">CTS</em> passages are exercised through
                        tests written in <em class="term">Python</em>.
                     </div>
                     
                     <div class="counter"><a href="#p21">21</a></div>
                     <div class="ptext" id="p21">The open source software for this test framework is designed to enable
                        extensibility and reuse. An entirely different type of document, for
                        example, a repository of Treebank data (<a href="#code02">see Code
                           Sample 2</a>), could be tested through reuse of the archetypal test
                        class objects and coding of new rules for the the file resolver. The
                        <em class="term">archetypal unit test class</em> takes a path, a "parsable"
                        method for testing ingestion, a "logs" property and a "test"
                        method for starting the tests. This class also has two constants which need
                        to be supplied: "test", which contains the list of method names to be
                        used for tests, and "readable", which should provide human readable
                        explanation of the tests.
                     </div>
                     
                     <div id="code02" class="example">
                        
                        
                        <blockquote class="eg"><pre><tt>
class TreebankUnit(HookTest.units.TESTUnit):
    tests = ["parsable", "has_root"]
    readable = {
        "parsable": "File parsing",
        "has_root": "Root declared"
    }
    
    def __init__(self, path):
        super(HookTest.units.TESTUnit, self).__init__(path)
    
    def has_root(self):
        # Process
        self.log("If something needs to be verbose")
        has_root = True  # Assign result as a boolean
        yield has_root
    
    def test(self, scheme):
        tests = [] + CTSUnit.tests
        tests.append(scheme)
        
        for testname in tests:
            # Show the logs and return the status
            for status in getattr(self, testname)():
                yield (
                   TreebankUnit.readable[testname],
                   status,
                   self.logs
                )
        self.flush()</tt></pre></blockquote>
                        
                        <div class="caption">
                           <div class="label">Example 2. </div>Code sample, Pseudo-python sample integration of Treebank Unit Test
                           class
                        </div>
                     </div>
                     
                  </div>
                  
               </div>
               
               <div class="div div0">
                  
                  <h1 class="head">Continuous Integration</h1>
                  
                  <div class="div div1">
                     
                     <h2 class="head">Context and architecture</h2>
                     
                     <div class="counter"><a href="#p22">22</a></div>
                     <div class="ptext" id="p22"><em class="term">Continuous Integration</em> is a software development practice in
                        which programmers sharing the same project commit different changes to a
                        code base. These commits lead to the running of a series of tests to check
                        on compatibility of the new code and finally to the delivery of the
                        community accepted changes to a production or a stage environment [<a class="ref" href="#ci">Fowler 2006</a>].
                     </div>
                     
                     <div class="counter"><a href="#p23">23</a></div>
                     <div class="ptext" id="p23">Perseus data has been hosted on GitHub since July,
                        26th 2013. Before this, Perseus resources were hosted
                        internally and distributed at release points only on
                        SourceForge. This made incorporating contributions of
                        corrections from external sources difficult. Opening the data of Perseus had
                        two goals. The first one is simply openness. Hosting resources and giving
                        access to them in a raw fashion not dependent on any application or
                        <em class="term">API</em> has been a best practice espoused by numerous projects
                        in the Humanities, such as the Pleiades project [<a class="ref" href="#pleiades">Ragnall, Talbert, Horne and Elliott 2008</a>].
                        The second point of giving access to the data on these collaboration
                        platforms is to allow for citizen scientists, fellow researchers and
                        classical studies enthusiasts, to participate in the correction of
                        Perseus resources the same way.
                     </div>
                     
                     <div class="counter"><a href="#p24">24</a></div>
                     <div class="ptext" id="p24">In this context, the library curator finds themselves in a situation where
                        they should ensure that changes proposed, made in the form of <em class="term">pull
                           requests</em>, are correct from both the technical and the
                        philological perspective ( <a href="#figure04">see Figure 4</a>).
                        Developing a <em class="term">webhook</em> to check on technical validity, built on
                        the capacity of GitHub to ping services when changes are
                        proposed, has allowed us to significantly lighten the work required of the
                        curator. It also allows us to measure and report on progress, from the
                        highest level (the percentage of the entire repository which is fully CTS
                        CapiTainS Compliant) to the individual object test result (percentage of
                        tests passed). Results of these tests can then also be checked automatically
                        by deployment scripts for the CTS-enabled applications serving the
                        texts.
                     </div>
                     
                     <div id="figure04" class="figure">
                        
                        
                        <div class="ptext"><a href="./resources/images/figure04.png" rel="external"><img src="./resources/images/figure04.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 4. </div>Continuous integration workflow
                        </div>
                     </div>
                     
                  </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">Scalability and deployment</h2>
                     
                     <div class="counter"><a href="#p25">25</a></div>
                     <div class="ptext" id="p25">The tool suite used for this continuous integration environment makes use of
                        free online services and is divided into two separate code bases, each
                        presenting its own set of challenges. The user interface, <cite class="title italic">Hook</cite> ([<a class="ref" href="#hook">Almas and Clérice 2017</a>]), needs to offer an
                        <em class="term">API</em> endpoint for the test results and user management for
                        registering <em class="term">API</em> access to the GitHub repositories.
                        <cite class="title italic">Hook</cite> acts as the archival service,
                        listening for test results and annotating pull requests or commits on the
                        source repositories with a summary. On each transaction between
                        Github and <cite class="title italic">Hook</cite>,
                        identification tokens are exchanged along the required data via the <cite class="title italic">oAuth protocol</cite>
                        [<a class="ref" href="#oauth">Hardt 2012</a>]. The user interface is itself a lightweight Python
                        <cite class="title italic">Flask</cite> web application [<a class="ref" href="#flask">Ronachter 2010</a>].
                     </div>
                     
                     <div id="figure05" class="figure">
                        
                        
                        <div class="ptext"><a href="./resources/images/figure05.png" rel="external"><img src="./resources/images/figure05.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 5. </div>Hook Testing Architecture
                        </div>
                     </div>
                     
                     <div class="counter"><a href="#p26">26</a></div>
                     <div class="ptext" id="p26">The second application, <cite class="title italic">HookTest</cite>
                        [<a class="ref" href="#hooktest">Almas, Clérice and Munson 2017 b</a>], is the testing software that actually runs the
                        tests. <cite class="title italic">HookTest</cite> has been designed for its
                        stable release 1.0.0 as a tool that can be both run on local machines or on
                        free services for <em class="term">Continuous Integration</em> such as
                        Travis-CI. Depending on the size of the corpus, different
                        types of verbosity of the results are made available so text status messages
                        are manageable even on really large corpora. <cite class="title italic">HookTest</cite> also provides a second set of optional services to
                        package the corpus into a set of only valid files (i.e. files passing tests)
                        and push this package back as a release to Github.
                     </div>
                     
                     <div id="figure06" class="figure">
                        
                        
                        <div class="ptext"><a href="./resources/images/figure06.png" rel="external"><img src="./resources/images/figure06.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 6. </div>Continuous Integration Workflow Sequence
                        </div>
                     </div>
                     
                     <div class="counter"><a href="#p27">27</a></div>
                     <div class="ptext" id="p27">In a configuration which leverages both <cite class="title italic">Hook</cite> and
                        <cite class="title italic">HookTest</cite> together with the
                        Travis-CI service there are two steps to the feedback
                        process. At the end of the test, <cite class="title italic">HookTest</cite>
                        displays on Travis the results of the tests in a table (<a href="#figure06">see Figure 6</a>) and dispatches the results to
                        <cite class="title italic">Hook</cite><a class="noteRef" href="#d4e1106">[3]</a>. The <cite class="title italic">Hook</cite> application adds a comment to the resource on
                        Github (i.e. the <em class="term">Pull Request</em> or the
                        <em class="term">Commit</em> which triggered the test) with a score, a binary
                        result (passed/failed) and a difference status (New text passings, number of
                        new nodes, etc.). In addition to the code comments, <cite class="title italic">Hook</cite> creates and serves icons, in the form of badges which can
                        be referenced from the <em class="term">README</em> of the repository, for the users
                        of the repository and the application to be able to quickly access
                        information and status from the GitHub repository home page
                        (<a href="#figure07">see Figure 7</a>)
                     </div>
                     
                     <div id="figure07" class="figure">
                        
                        
                        <div class="ptext"><a href="./resources/images/figure07.png" rel="external"><img src="./resources/images/figure07.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 7. </div>PerseusDL/canonical-latinLit GitHub homepage
                        </div>
                     </div>
                     
                     <div class="counter"><a href="#p28">28</a></div>
                     <div class="ptext" id="p28">If the release packaging service is enabled, each new version of the corpus
                        that has been released can then automatically be deployed into production
                        and test environments, in the same manner as a software update (<a href="#figure08">see Figure 8</a>). 
                     </div>
                     
                     <div id="figure08" class="figure">
                        
                        
                        <div class="ptext"><a href="./resources/images/figure08.png" rel="external"><img src="./resources/images/figure08.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 8. </div>Hook Update/Integration Architecture
                        </div>
                     </div>
                     
                     <div class="counter"><a href="#p29">29</a></div>
                     <div class="ptext" id="p29">The comments added by <cite class="title italic">Hook</cite> to <em class="term">Pull
                           Requests</em> and <em class="term">Commits</em> on the GitHub
                        repository enables the curator to easily assess changes made by other
                        contributors. The test results can be found on the GitHub
                        resources, and also activate GitHub-managed notifications (mail
                        or web) that states the summary results of the tests with links back to the
                        detailed results in Travis. These notices are sent to the
                        curator owners of the GitHub repository and issuers of the Pull
                        Request or Commit, and also can be subscribed to by other interested
                        parties.
                     </div>
                     
                     <div class="counter"><a href="#p30">30</a></div>
                     <div class="ptext" id="p30">Whether working on a new corpus or converting an existing corpus to comply
                        with the <cite class="title italic">CapiTainS</cite> specification, the tests
                        allow for detection of errors that could not be easily caught by schema
                        validation with RelaxNG or Schematron. One common
                        example of an error of this sort is the duplication of passage identifiers.
                        Because passage identifiers are built by combining identifiers of elements
                        at different levels of the hierarchy, this cannot be done without a
                        programmatic test. These errors are identified in the <cite class="title italic">HookTest</cite> results. When a text conversion is done and the push
                        request made, <cite class="title italic">Hook</cite> provides a list of duplicate
                        passages and writes in the summary on the <em class="term">Pull Request</em>. If
                        there is no new text passing, the curator and the contributor can check the
                        output and could find the report written by <cite class="title">HookTest</cite> on
                        Travis (<a href="#figure09">see Figure 9</a>).
                     </div>
                     
                     <div id="figure09" class="figure">
                        
                        
                        <div class="ptext"><a href="./resources/images/figure09.png" rel="external"><img src="./resources/images/figure09.png" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 9. </div>Logs example for PerseusDL/canonical-latinLit
                        </div>
                     </div>
                     
                  </div>
                  
               </div>
               
               <div class="div div0">
                  
                  <h1 class="head">Conclusion</h1>
                  
                  <div class="counter"><a href="#p31">31</a></div>
                  <div class="ptext" id="p31">With around 100 million words available on PDL, and millions more
                     words still to come through OPP, in a context of opening
                     contributions up to wide ranging communities of users, dealing with ingestion of
                     new texts scalably is a matter of security, flexibility and efficiency.
                     Developing stronger and more flexible guidelines has helped the project move
                     towards generalization of its norms and reduced the cost to encode, develop and
                     curate.
                  </div>
                  
                  <div class="counter"><a href="#p32">32</a></div>
                  <div class="ptext" id="p32">With a strong continuous integration service in place, we can now support not
                     only a wider range of genres and languages, but also a wider diversity of
                     contributors. We can delegate the tedious tasks of checking markup to the
                     machine, leaving curators free to focus on the scholarship. We also expect that
                     automating checks on the integrity and the adaptability of textual objects for
                     specific frameworks can reduce the error rate and allow for shorter feedback
                     loops to contributors and users of our corpora.
                  </div>
                  
               </div>
               
               
               
               
               
               
            </div>
            
            <div id="notes">
               <h2>Notes</h2>
               <div class="endnote" id="d4e404"><span class="noteRef">[1]</span> Tree,
                  or as put by [<a class="ref" href="#ohco">Renear, Mylonas and Durang 1993</a>]
                  "Ordered hierarchy of content objects
                  (OHCO)", is a model that many texts of western classical
                  literature can fit. This modelization is the same that supports the real
                  bases of <em class="term">TEI</em>. See "Complicating the
                  Issue" in the <cite class="title italic">TEI Guidelines</cite>
                  [<a class="ref" href="#complicating">TEI-C 2007</a>]
               </div>
               <div class="endnote" id="d4e491"><span class="noteRef">[2]</span>
                  <em class="term">GetValidReff</em> for Homer's <cite class="title">Iliad</cite>, with a level
                  parameter set to 2, should return identifiers for all 15,693 lines to
                  the <em class="term">API</em> client. See <a class="ref" href="http://www.perseus.tufts.edu/hopper/CTS?request=GetValidReff&amp;urn=urn:cts:greekLit:tlg0012.tlg001.perseus-grc1" onclick="window.open('http://www.perseus.tufts.edu/hopper/CTS?request=GetValidReff&amp;urn=urn:cts:greekLit:tlg0012.tlg001.perseus-grc1'); return false">http://www.perseus.tufts.edu/hopper/CTS?request=GetValidReff&amp;urn=urn:cts:greekLit:tlg0012.tlg001.perseus-grc1</a></div>
               <div class="endnote" id="d4e1106"><span class="noteRef">[3]</span> In a local-only configuration,
                  <cite class="title italic">HookTest</cite> displays results of tests on
                  the console or a local log file.
               </div>
            </div>
            <div id="worksCited">
               <h2>Works Cited</h2>
               <div class="bibl"><span class="ref" id="perseuscts">
                     <!-- close -->Almas 2013</span> 
                  2013-05-01
                  <cite class="title">Perseus CTS API</cite>
                  Bridget Almas
                  
               </div>
               <div class="bibl"><span class="ref" id="hook">
                     <!-- close -->Almas and Clérice 2017</span> 
                  Bridget Almas
                  Thibault Clérice
                  <cite class="title">Hook</cite>
                  <cite class="title">Hook</cite>
                  2017-06-19
                  Zenodo
                  
               </div>
               <div class="bibl"><span class="ref" id="capitains">
                     <!-- close -->Almas, Clérice and Munson 2017</span> 
                  Bridget Almas
                  Thibault Clérice
                  Matthew Munson
                  <cite class="title">CapiTainS Guidelines
                     2.0.0</cite>
                  2017-05-02
                  
               </div>
               <div class="bibl"><span class="ref" id="hooktest">
                     <!-- close -->Almas, Clérice and Munson 2017 b</span> 
                  Bridget Almas
                  Thibault Clérice
                  Matthew Munson
                  <cite class="title">HookTest: 1.1.2</cite>
                  2017-06-23
                  Zenodo
               </div>
               <div class="bibl"><span class="ref" id="relaxng">
                     <!-- close -->Clark 2001</span> 
                  Clark James
                  <cite class="title">The Design of
                     RelaxNG</cite>
                  2001
                  
               </div>
               <div class="bibl"><span class="ref" id="jingtrang">
                     <!-- close -->Clark 2001 (2)</span> 
                  Clark James
                  <cite class="title">JingTrang</cite>
                  2001
                  
               </div>
               <div class="bibl"><span class="ref" id="opp">
                     <!-- close -->Crane et al 2013</span> 
                  Gregory R. Crane
                  <cite class="title">Open Greek and Latin Project</cite>
                  Humboldt Chair of Digital Humanities
                  2013-12-13
                  
               </div>
               <div class="bibl"><span class="ref" id="pdlLatin">
                     <!-- close -->Crane et al. 2015</span> 
                  Gregory R. Crane
                  <cite class="title">Perseus Digital
                     Library Canonical Latin Literature Repository</cite>
                  2015
                  
               </div>
               <div class="bibl"><span class="ref" id="epidoc">
                     <!-- close -->Elliott, Bodard, Cayless et al. 2006</span> 
                  2006-2016
                  Tom Elliott
                  Gabriel Bodard
                  Hugh Cayless
                  <cite class="title">EpiDoc: Epigraphic Documents in TEI
                     XML</cite>
                  
               </div>
               <div class="bibl"><span class="ref" id="ci">
                     <!-- close -->Fowler 2006</span> 
                  Martin Fowler
                  <cite class="title">Continuous Integration</cite>
                  2006-05-01
                  
               </div>
               <div class="bibl"><span class="ref" id="readinglist">
                     <!-- close -->Franzini and Foradi 2014</span> 
                  Elena Franzini
                  Maryam Foradi
                  <cite class="title">Latin and Greek Texts: What Are We Reading in Schools and
                     Universities?</cite>
                  Humboldt Chair of Digital Humanities
                  2014-09-10
                  
               </div>
               <div class="bibl"><span class="ref" id="oauth">
                     <!-- close -->Hardt 2012</span> 
                  2012
                  Dick Hardt
                  <cite class="title">The OAuth 2.0 authorization framework</cite>
                  
               </div>
               <div class="bibl"><span class="ref" id="unittest">
                     <!-- close -->Huizinga and Kolawa 2007</span> 
                  <cite class="title">Automated defect prevention: best practices in software
                     management</cite>
                  Dorota Huizinga
                  Adam Kolawa
                  2007-01-22
                  Wiley-IEEE Computer Society Pr
                  
               </div>
               <div class="bibl"><span class="ref" id="mysql">
                     <!-- close -->MySQL 2004</span> 
                  2004
                  MySQL AB
                  <cite class="title">MySQL database server</cite>
                  
               </div>
               <div class="bibl"><span class="ref" id="oop">
                     <!-- close -->Pierce 2002</span> 
                  Benjamin C. Pierce
                  <cite class="title">Types and Programming Languages</cite>
                  2002
                  MIT Press
                  
               </div>
               <div class="bibl"><span class="ref" id="pleiades">
                     <!-- close -->Ragnall, Talbert, Horne and Elliott 2008</span> 
                  Roger Bagnall
                  2008
                  Richard Talbert
                  Ryan Horne
                  Tom Elliott
                  <cite class="title">PLEIADES, A community-built gazetteer and
                     graph of ancient places</cite>
                  
               </div>
               <div class="bibl"><span class="ref" id="ohco">
                     <!-- close -->Renear, Mylonas and Durang 1993</span> 
                  <cite class="title">Refining our notion of what text really is: The problem of overlapping
                     hierarchies.</cite>
                  1993-01-06
                  Allen Renear
                  Elli Mylonas
                  David Durand
                  
               </div>
               <div class="bibl"><span class="ref" id="flask">
                     <!-- close -->Ronachter 2010</span> 
                  <cite class="title">Flask (A Python Microframework)</cite>
                  Armin Ronachter
                  
               </div>
               <div class="bibl"><span class="ref" id="cts">
                     <!-- close -->Smith and Blackwell 2012</span> 
                  Neel Smith
                  Christopher Blackwell
                  2012
                  <cite class="title">An overview of the CTS URN notation</cite>
                  Homer Multitext project
                  
               </div>
               <div class="bibl"><span class="ref" id="complicating">
                     <!-- close -->TEI-C 2007</span> 
                  TEI Consortium
                  <cite class="title">Complicating the Issue</cite>
                  2007
                  
               </div>
               <div class="bibl"><span class="ref" id="teip4">
                     <!-- close -->TEI-Consortium 2002</span> 
                  TEI Consortium
                  <cite class="title">TEI: P5 Guidelines</cite>
                  2002
                  
               </div>
               <div class="bibl"><span class="ref" id="teip5">
                     <!-- close -->TEI-Consortium 2007</span> 
                  TEI Consortium
                  <cite class="title">TEI: P4 Guidelines</cite>
                  University of Virginia Press
                  2002
                  
               </div>
            </div>
            <div class="toolbar"><a href="#">Preview</a>  |  <span style="color: grey">XML</span> |  <a href="#" onclick="javascript:window.print();" title="Click for print friendly version">Print Article</a></div>
         </div>
      </div>
   </body>
</html>