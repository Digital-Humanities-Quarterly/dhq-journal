<html xmlns="http://www.w3.org/1999/xhtml">
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
      <title>[PREVIEW] DHQ: Digital Humanities Quarterly: </title>
      <link href="../../common/css/dhq.css" type="text/css" rel="stylesheet" />
      <link href="../../common/css/dhq_screen.css" media="screen" type="text/css" rel="stylesheet" />
      <link href="../../common/css/dhq_print.css" media="print" type="text/css" rel="stylesheet" />
      <style type="text/css">
        #mainContent {
          float: none;
          padding-top: 2em;
          padding-left: 4em;
          padding-right: 4em;
          margin-left: 225px;
           
        }</style>
   </head>
   <body>
      <div id="mainContent">
         <div class="DHQarticle">
            <div id="pubInfo">Preview<br />Volume 015 Number 4</div>
            <div class="toolbar"><a href="#">Preview</a>  |  <span style="color: grey">XML</span> |  <a href="#" onclick="javascript:window.print();" title="Click for print friendly version">Print Article</a></div>
            
            <div class="DHQheader">
               
               
               
               
               <h1 class="articleTitle lang en">Layers of Variation: a Computational Approach to
                  Collating Texts with Revisions</h1>
               
               
               <div class="author"><span style="color: grey">Elli Bleeker
                     </span> &lt;<a href="mailto:elli_dot_bleeker_at_huygens_dot_knaw_dot_nl" onclick="javascript:window.location.href='mailto:'+deobfuscate('elli_dot_bleeker_at_huygens_dot_knaw_dot_nl'); return false;" onkeypress="javascript:window.location.href='mailto:'+deobfuscate('elli_dot_bleeker_at_huygens_dot_knaw_dot_nl'); return false;">elli_dot_bleeker_at_huygens_dot_knaw_dot_nl</a>&gt;,  Huygens Institute for Dutch History and Culture</div>
               
               <div class="author"><span style="color: grey">Bram Buitendijk
                     </span> &lt;<a href="mailto:bram_dot_buitendijk_at_di_dot_huc_dot_knaw_dot_nl" onclick="javascript:window.location.href='mailto:'+deobfuscate('bram_dot_buitendijk_at_di_dot_huc_dot_knaw_dot_nl'); return false;" onkeypress="javascript:window.location.href='mailto:'+deobfuscate('bram_dot_buitendijk_at_di_dot_huc_dot_knaw_dot_nl'); return false;">bram_dot_buitendijk_at_di_dot_huc_dot_knaw_dot_nl</a>&gt;, Royal Netherlands Academy of Arts and Sciences - Humanities Cluster,
                  Digital Infrastructure department.</div>
               
               <div class="author"><span style="color: grey">Ronald Haentjens Dekker
                     </span> &lt;<a href="mailto:ronald_dot_dekker_at_di_dot_huc_dot_knaw_dot_nl" onclick="javascript:window.location.href='mailto:'+deobfuscate('ronald_dot_dekker_at_di_dot_huc_dot_knaw_dot_nl'); return false;" onkeypress="javascript:window.location.href='mailto:'+deobfuscate('ronald_dot_dekker_at_di_dot_huc_dot_knaw_dot_nl'); return false;">ronald_dot_dekker_at_di_dot_huc_dot_knaw_dot_nl</a>&gt;, Huygens Institute for Dutch History and Culture</div>
               
               <div class="author"><span style="color: grey">Vincent Neyt
                     </span> &lt;<a href="mailto:vincent_dot_neyt_at_uantwerpen_dot_be" onclick="javascript:window.location.href='mailto:'+deobfuscate('vincent_dot_neyt_at_uantwerpen_dot_be'); return false;" onkeypress="javascript:window.location.href='mailto:'+deobfuscate('vincent_dot_neyt_at_uantwerpen_dot_be'); return false;">vincent_dot_neyt_at_uantwerpen_dot_be</a>&gt;, University of Antwerp</div>
               
               <div class="author"><span style="color: grey">Dirk Van Hulle
                     </span> &lt;<a href="mailto:dirk_dot_vanhulle_at_ell_dot_ox_dot_ac_dot_uk" onclick="javascript:window.location.href='mailto:'+deobfuscate('dirk_dot_vanhulle_at_ell_dot_ox_dot_ac_dot_uk'); return false;" onkeypress="javascript:window.location.href='mailto:'+deobfuscate('dirk_dot_vanhulle_at_ell_dot_ox_dot_ac_dot_uk'); return false;">dirk_dot_vanhulle_at_ell_dot_ox_dot_ac_dot_uk</a>&gt;, University of Oxford</div>
               
               
               
               
               
               
               
               <span class="Z3988" title="url_ver=Z39.88-2004&amp;ctx_ver=Z39.88-2004&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rfr_id=info%3Asid%2Fzotero.org%3A2&amp;rft.genre=article&amp;rft.atitle=Layers%20of%20Variation%3A%20a%20Computational%20Approach%20to%20Collating%20Texts%20with%20Revisions&amp;rft.jtitle=Digital%20Humanities%20Quarterly&amp;rft.stitle=DHQ&amp;rft.issn=1938-4122&amp;rft.date=&amp;rft.volume=015&amp;rft.issue=4&amp;rft.aulast=Bleeker&amp;rft.aufirst=Elli&amp;rft.au=Elli%20Bleeker&amp;rft.au=Bram%20Buitendijk&amp;rft.au=Ronald Haentjens%20Dekker&amp;rft.au=Vincent%20Neyt&amp;rft.au=Dirk Van%20Hulle"> </span></div>
            
            <div id="DHQtext">
               
               
               <div id="abstract">
                  <h2>Abstract</h2>
                  
                  
                  <p>The article describes research into the automatic comparison of texts with revisions.
                     The authors argue that in-text variation can best be modelled as nonlinear text, and
                     that a collation tool needs to treat in-text variation differently from the way
                     linear text is treated. They describe in detail how the modelling choices they made
                     influence the development of HyperCollate, a collation software that is able to
                     process TEI-XML transcriptions of texts with variation. Consequently, HyperCollate
                     produces a more refined collation output that corresponds with a human interpretation
                     of textual variance.</p>
                  </div>
               
               
               
               
               <div id="section1" class="div div0">
                  
                  <h1 class="head">1. Introduction</h1>
                  
                  <div class="counter"><a href="#p1">1</a></div>
                  <div class="ptext" id="p1">The act of comparing textual versions has always been central to textual criticism
                     and manuscript research. The importance of this type of collation has only increased
                     in the digital age. Most scholarly editors no longer produce collations by hand; they
                     use the output generated by software, either as is, or as the starting point for
                     manual correction. Still, in more complex cases such as manuscripts with revisions
                     –
                     i.e., textual variation within one text version – it remains difficult to have the
                     collation software produce a result that corresponds with what a scholarly editor
                     would produce. The reason for this is, simply put, that the collation software treats
                     the input as linear text, whereas text with revisions is not completely linear. As
                     a
                     consequence, scholarly editors still need to do quite some manual work, such as
                     preparing the input texts or adjusting the collation output. What is more, they lose
                     information about the multilayered nature of the document and the physical traces
                     of
                     the writing process or transmission history. </div>
                  
                  <div class="counter"><a href="#p2">2</a></div>
                  <div class="ptext" id="p2">We therefore set out to create collation software that is able to compare texts with
                     revisions. When working on this challenge, we soon realized that conveying our human
                     interpretation of text with revisions to the computer is not merely a technical
                     matter. It is, in fact, deeply rooted in philological questions: what do we
                     understand by text with revisions? What type of revisions can we discern? And how
                     do
                     we expect the collation software to deal with them? Designing and developing a
                     collation tool that understands in-text variation in a way similar to how scholarly
                     editors understand it requires us to formalize our understanding of in-text
                     variation. We argue that in-text variation can best be modelled as nonlinear text,
                     and that a collation tool needs to treat this nonlinear text differently from the
                     way
                     linear text is treated. This will produce a more refined collation output that
                     corresponds with a human interpretation of the textual variance.</div>
                  
                  <div class="counter"><a href="#p3">3</a></div>
                  <div class="ptext" id="p3">For the purposes of this article, we focus on in-text variation resulting from
                     authorial revisions on modern manuscripts; revisions by multiple textual agents are
                     not within the scope of this article. As a test-corpus we took small examples from
                     a
                     modern manuscript of Samuel Beckett featuring numerous deletions and additions that
                     Beckett made at various stages in the writing process.<a class="noteRef" href="#d4e241">[1]</a> Evidently, the feature of in-text variation is not
                     unique to modern manuscripts: medieval and older manuscripts often contain
                     indistinguishable layers of in-text revisions as well. When in-text revisions are
                     made with the same writing tool they cannot be easily divided into separate revision
                     campaigns. The challenges of automatically collating such multi-layered texts are,
                     then, twofold: first, to adequately process a textual version that contains one or
                     more revisions, and second, to return a collation output that corresponds with what
                     a
                     scholarly editor would intuitively produce. We will discuss our approach to these
                     challenges in the context of HyperCollate, an automatic collation tool developed to
                     take in-text revisions into account when calculating the best match between two
                     textual versions.</div>
                  
                  <div class="counter"><a href="#p4">4</a></div>
                  <div class="ptext" id="p4"><a href="#section2">Section 2</a> provides a theoretical background for the
                     concepts and practices under discussion: versions, witnesses, in-text revision, and
                     (non)linear text. It also provides a brief overview of the existing approaches to
                     collating texts with in-text variation. <a href="#section3">Section 3</a>
                     presents the collation tool HyperCollate. We describe its underlying data model –
                     a
                     hypergraph for textual variation – and how this data model differs from XML tree
                     structures and regular variant graphs. A hypergraph for textual variation offers more
                     flexibility in storing and processing information that is relevant to the study of
                     textual variance. Subsequently, we single out two instances of in-text variation that
                     occur frequently in manuscript texts – single deletions or additions and
                     substitutions – and we describe for each type of variation what we, as human
                     scholars, expect of the collation output (<a href="#section3-2">section
                        3.2</a>). How do we wantt the collation tool to handle immediate revisions in a
                     textual version? What do we expect to see in the output? The answer to such
                     questions, i.e., our expectations, inform the rules for the collation program.
                     HyperCollate’s performance with each type of variation is discussed in <a href="#section3-3">section 3.3</a>. The evaluation (<a href="#section3-4">section 3.4</a>) includes the question of visualization, as existing
                     visualizations could turn out to be inadequate in displaying the additional
                     information in an insightful way. <a href="#section4">Section 4</a>, finally,
                     discusses a number of areas in need of further research.</div>
                  
                  <div class="counter"><a href="#p5">5</a></div>
                  <div class="ptext" id="p5">As the development and use of collation tools requires us to clearly articulate what
                     we understand by textual variation and what we expect from the collation, automated
                     collation tools can provide us with a heightened awareness of, and confront us with
                     our assumptions about, the notion of <em class="term">text</em>. The workflow of a scholarly
                     editor using an automated collation tool consists of seemingly straightforward steps
                     (transcription ⇒ collation ⇒ visualization) but each step implies decision-making
                     at
                     several stages and substages (selection, tagging, tokenization, normalization, a
                     definition of a match, etc.). The decisions made at one stage influence the outcome
                     of a subsequent stage. Recognizing and understanding this heuristic process will
                     prompt us to rethink our theories of text (cf. <a href="#ciula2014">Ciula and Eide 2014, 36</a>) and how these theories correspond to the workings
                     of a text analysis tool. </div>
                  
                  <div class="counter"><a href="#p6">6</a></div>
                  <div class="ptext" id="p6">By demonstrating, first, how we made our human definition of in-text variation
                     computer-understandable and, subsequently, how this definition influences the
                     operations as well as the results of a collation tool, we hope to provide our readers
                     with a deeper understanding of the process of modeling textual variation. We intend
                     to show how the development of a collation program has both a philological and a
                     computational perspective. Accordingly, our study reflects a fruitful collaboration
                     between textual scholars and software architects: their respective knowledge is
                     essential in order to successfully store, process, and analyse text. It thus proves
                     a
                     worthy partnership for manuscript research and modelling textual variance.</div>
                  </div>
               
               <div id="section2" class="div div0">
                  
                  <h1 class="head">2. Theoretical and Methodological Background</h1>
                  
                  <div class="counter"><a href="#p7">7</a></div>
                  <div class="ptext" id="p7">In what follows we give an overview of the discussion around textual versions and
                     witnesses (section 2.1), of the challenges of transcribing and modeling in-text
                     variation (section 2.2 and 2.3), and of the current approaches to collating texts
                     with internal revisions (section 2.4). </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">2.1. Text, Work, Versions, Witnesses, and In-text Revision</h2>
                     
                     <div class="counter"><a href="#p8">8</a></div>
                     <div class="ptext" id="p8">A few working definitions of the terms <em class="term">document,</em>
                        <em class="term">version,</em>
                        <em class="term">witness,</em>
                        <em class="term">work,</em> and <em class="term">text</em> are in order. Following Peter
                        Shillingsburg, we define a <em class="term">document</em> as the “physical vessel” that carries information [<a class="ref" href="#shillingsburg1996">Shillingsburg 1996</a>, 174]. A <em class="term">version</em> has “no substantial existence” as Shillingsburg puts it [<a class="ref" href="#shillingsburg1996">Shillingsburg 1996</a>, 44]. As a theoretical construct, it implies
                        that there are at least two textual representations of the work. A
                        <em class="term">witness</em> is a “written document that witnesses
                        a text’s genesis” according to Almuth Grésillon [<a class="ref" href="#gresillon1994">Grésillon 1994</a>, 246].<a class="noteRef" href="#d4e321">[2]</a> A witness is therefore a physical object. Whereas the
                        term <em class="term">document</em> considers the object in and of itself, the term
                        <em class="term">witness</em> considers it in relation to a work. Different documents
                        that relate to the same work are witnesses of it. According to Siegfried Scheibe,
                        “Textual versions are achieved or unachieved elaborations
                        of the text that diverge from one another. They are related through textual
                        identity and distinct through variation.”
                        [<a class="ref" href="#scheibe1995">Scheibe 1995</a>, 207]. In principle, this implies that a single
                        revision suffices to speak of two versions, or as Hans Zeller noted: “In the most extreme case a version is constituted by a single
                        variant. A holograph with one alteration which does not simply correct an error
                        thus represents two versions of the text”
                        [<a class="ref" href="#zeller1975">Zeller 1975</a>, 236]. The notion of the <em class="term">work</em> is used
                        in the sense of the “experience implied by the authoritative
                        versions of literary writing”
                        [<a class="ref" href="#shillingsburg1996">Shillingsburg 1996</a>, 176], a non-material concept that “serves as a minimal denominator to identify its remaining
                        physical manifestations”
                        [<a class="ref" href="#bordalejo2013">Bordalejo 2013</a>, 71]. In the context of this article, the term
                        <em class="term">text</em> will be employed to indicate not so much “the text of the work,” but “the text of the
                        document,” that is, the sequence of marks present in one particular
                        document [<a class="ref" href="#bordalejo2013">Bordalejo 2013</a>, 67].</div>
                     
                     <div class="counter"><a href="#p9">9</a></div>
                     <div class="ptext" id="p9">In textual scholarship, the notion of <em class="term">version,</em>
                        <em class="term">textual version</em> or <span class="foreign i">Textfassung</span>
                        usually implies the entirety of a work, as in Peter Shillingsburg’s definition:
                        “A version is one specific form of the work – the one the
                        author intended at some particular moment in time”
                        [<a class="ref" href="#shillingsburg1996">Shillingsburg 1996</a>, 44]. The problem, however, is that this
                        “moment in time” is hard to define. If the work is a long novel, it takes
                        a while for an author to revise the entire manuscript or to proofread the page
                        proofs. The revision may consist of more than one phase, or more than one revision
                        campaign (<span class="foreign i">campagne de révision</span>). There may be
                        only two versions of the opening chapter, but a dozen versions of the closing
                        chapter. Moreover, the unit of revision may vary considerably. Some writers’
                        preferred writing unit is a chapter, others tend to work and think in terms of
                        paragraphs.</div>
                     
                     <div class="counter"><a href="#p10">10</a></div>
                     <div class="ptext" id="p10">This reality makes it difficult to establish a general rule on which we can base
                        the collation algorithm. For the purposes of this article, we work with the
                        sentence as a relatively small unit of revision. Our examples are based on the
                        manuscripts of Samuel Beckett and the transcriptions in the Beckett Digital
                        Manuscript Project (BDMP).<a class="noteRef" href="#d4e398">[3]</a> These documents constitute what is usually referred to as “modern”
                        manuscripts, to distinguish these autographs from ancient and medieval
                        manuscripts, many of which were produced by scribes. Indeed the majority of
                        medieval manuscripts are copies and not autographs, but that does not mean that
                        all medieval manuscripts are copies. Medieval autographs do exist, and it is
                        perfectly possible to apply automatic collation to them. Instead of using the term
                        <em class="term">modern manuscripts</em> we will therefore speak of “manuscripts with
                        revisions” or even more generally of “texts with revisions.”
                        <em class="term">In-text</em> implies that we focus on textual variation within one version
                        of a text.</div>
                     </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">2.2. Transcribing Linearity and Nonlinearity</h2>
                     
                     <div class="counter"><a href="#p11">11</a></div>
                     <div class="ptext" id="p11">As mentioned in the introduction, studying manuscripts with revisions is
                        intrinsically linked to the act of linearizing text. Even when we read a text, we
                        mentally arrange the characters in a linear order; vertically or horizontally,
                        from left to right or vice versa, depending on the language. This perhaps
                        subconscious act of linearization is more striking when we make a transcription of
                        a complex text with revisions. Since the goal of a transcription is, in the first
                        place, to render a text more readable, linearizing the text on the document is
                        desirable – but not without cost. Texts with revisions contain traces of a writing
                        process over time; so when words and characters are placed in a linear order, the
                        manuscript page loses that diachronic aspect. The desire to preserve the nonlinear
                        nature of the text coupled with the need to make it readable (and processable)
                        confronts textual scholars with a dilemma. Accordingly, linearization has been the
                        topic of long debates in genetic criticism and textual scholarship [<a class="ref" href="#gresillon1994">Grésillon 1994</a>]
                        [<a class="ref" href="#lebrave1992">Lebrave 1992</a>]
                        [<a class="ref" href="#vanhulle1999">Van Hulle 1999</a>]
                        [<a class="ref" href="#vanhulle2004">Van Hulle 2004</a>]
                        [<a class="ref" href="#ferrer2014">Ferrer 2014</a>]. The “flattening” or “de-manuscripting” of a
                        text is generally accepted as a necessary evil, although it is lamented that the
                        most typical feature of a written draft – its nonlinearity – is reduced to a
                        straightforward sequence of text. </div>
                     
                     <div class="counter"><a href="#p12">12</a></div>
                     <div class="ptext" id="p12">In print, nonlinear text can be indicated with certain diacritical marks or forms
                        of layout; in digital transcriptions the revisions can be captured with markup
                        elements and visualized with HTML and/or CSS.<a class="noteRef" href="#d4e438">[4]</a> The TEI Guidelines suggest
                        two ways of expressing an instance of nonlinear text: substitutions can be
                        recorded (1) by means of a <span class="monospace">&lt;subst&gt;</span> element grouping one or more
                        <span class="monospace">&lt;del&gt;</span> and <span class="monospace">&lt;add&gt;</span> elements,<a class="noteRef" href="#d4e454">[5]</a> or (2) by means of an
                        <span class="monospace">&lt;app&gt;</span> element containing two or more
                        <span class="monospace">&lt;rdg&gt;</span> elements.<a class="noteRef" href="#d4e468">[6]</a>
                        </div>
                     
                     <div class="counter"><a href="#p13">13</a></div>
                     <div class="ptext" id="p13">In both cases, a human encoder will think of these TEI elements as indicating the
                        momentary suspension of the linear sequence of text characters. The text stream
                        runs from left to right, diverges at the points where variation occurs (indicated
                        with an open tag <span class="monospace">&lt;subst&gt;</span> or <span class="monospace">&lt;app&gt;</span>) and
                        converges when the variation ends (indicated with a closing tag
                        <span class="monospace">&lt;/subst&gt;</span> or <span class="monospace">&lt;/app&gt;</span>). We can say that
                        there are multiple coexisting, simultaneous paths through the text. The start of
                        each path is marked with a <span class="monospace">&lt;del&gt;</span>, an <span class="monospace">&lt;add&gt;</span>,
                        or a <span class="monospace">&lt;rdg&gt;</span> element; the end of each path with the corresponding
                        <span class="monospace">&lt;/del&gt;</span>, <span class="monospace">&lt;/add&gt;</span>, or
                        <span class="monospace">&lt;/rdg&gt;</span>. By “coexisting” we mean that the textual
                        content of the <span class="monospace">&lt;del&gt;</span>, <span class="monospace">&lt;add&gt;</span>, or
                        <span class="monospace">&lt;rdg&gt;</span> is in the same location in the sentence. This
                        corresponds with the TEI Guidelines’ remark that “Since the
                        purpose of this [the <span class="monospace">&lt;subst&gt;</span>] element is solely to group its
                        child elements together, the order in which they are presented is not
                        significant.”<a class="noteRef" href="#d4e514">[7]</a>
                        </div>
                     
                     <div class="counter"><a href="#p14">14</a></div>
                     <div class="ptext" id="p14">As described in <a href="#section2-4">section 2.4</a>, a current approach to
                        the automated collation of in-text revisions is to flatten the TEI-XML
                        transcription to a stream of plain text characters, thereby ignoring the TEI-XML
                        markup elements that indicate nonlinear text. In order to fully understand the
                        challenges that arise when we <span class="hi italic">do</span> wish to avoid flattening
                        and instead take a text’s nonlinear features into account, we first need to take a
                        closer look at how in-text revisions can be modelled in TEI-XML. </div>
                     </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">2.3. Modeling Nonlinearity</h2>
                     
                     <div class="counter"><a href="#p15">15</a></div>
                     <div class="ptext" id="p15">A TEI-XML transcription of a straightforward text consists typically of “fully
                        ordered” data. For textual scholars, the value and meaning of this data are
                        primarily in the textual content, not in the TEI-XML elements. As a consequence,
                        the order of the TEI-XML elements is meaningful. In the TEI-XML expert below,
                        changing the order of the two <span class="monospace">&lt;s&gt;</span> elements with their textual
                        content would alter the meaning of the text:
                        
                        <blockquote class="eg">
                           <pre><code class="xml">
                        
&lt;p&gt;
   &lt;s&gt;The sun shone, having no alternative, on the nothing new.&lt;/s&gt;
   &lt;s&gt;Murphy sat out of it, as though he were free, in a mew in West Brompton.&lt;/s&gt;
&lt;/p&gt;</code></pre>
                        </blockquote>
                     </div>
                     
                     <div class="counter"><a href="#p16">16</a></div>
                     <div class="ptext" id="p16">We have argued in the previous section that the textual data of a TEI-XML
                        transcription of a manuscript with in-text revisions can be understood as an
                        ordered stream of text characters, which splits into two or more paths when
                        textual variation occurs. Or, put metaphorically by Michael Sperberg-McQueen, this
                        type of text forms “curves that intersect, run together for a
                        while, and then split apart again, like the channels in a river delta”
                        [<a class="ref" href="#sperberg-mcqueen1989">Sperberg-McQueen 1989</a>]. By way of illustration, let’s take the
                        following TEI-XML example: 
                        
                        <blockquote class="eg">
                           <pre><code class="xml">
&lt;p&gt;
   &lt;s&gt;The
      &lt;subst&gt;
         &lt;del&gt;quick&lt;/del&gt;
         &lt;add&gt;brown&lt;/add&gt;
      &lt;/subst&gt; fox.
   &lt;/s&gt;
&lt;/p&gt;</code></pre>
                        </blockquote>
                     </div>
                     
                     <div class="counter"><a href="#p17">17</a></div>
                     <div class="ptext" id="p17">The stream of textual data starts by being fully ordered with “The.” At the
                        point in the text where variation occurs (marked with <span class="monospace">&lt;subst&gt;</span>),
                        the stream splits into two paths that run parallel to one another. The textual
                        data <em class="emph">within</em> the two <span class="monospace">&lt;del&gt;</span> and
                        <span class="monospace">&lt;add&gt;</span> paths is again fully ordered as each path contains a
                        linear stream of text characters. From a purely informational perspective, the
                        deleted word “quick” is on the same level in the XML tree as the added word
                        “brown”: they are both the textual content of the child elements of the
                        <span class="monospace">&lt;subst&gt;</span> element and they occur in the same place in the
                        text. In other words, their position vis-à-vis their parent element is the same.
                        At the end of the variation (marked with <span class="monospace">&lt;/subst&gt;</span>) the two
                        paths converge again into one stream.</div>
                     
                     <div class="counter"><a href="#p18">18</a></div>
                     <div class="ptext" id="p18">The order in which TEI-XML elements are placed also carries philological or
                        semantic value. In the field of digital scholarly editing it is generally
                        acknowledged that markup represents valuable editorial knowledge and that the tags
                        reflect an interpretation of the inscriptions on the source document. Compare for
                        instance 
                        <blockquote class="eg">
                           <pre><code class="xml">
                     
                     &lt;s&gt;The 
                        &lt;subst&gt;
                           &lt;del&gt;quick&lt;/del&gt;
                           &lt;add&gt;brown&lt;/add&gt;
                        &lt;/subst&gt; fox.
                     &lt;/s&gt;</code></pre>
                        </blockquote> and 
                        <blockquote class="eg">
                           <pre><code class="xml">
                     
                     &lt;s&gt;The 
                        &lt;del&gt;quick&lt;/del&gt;
                        &lt;add&gt;brown&lt;/add&gt; fox.
                     &lt;/s&gt;</code></pre>
                        </blockquote>In the first case, the encoder groups together the deletion and the
                        addition as part of one and the same revision. The elements
                        <span class="monospace">&lt;del&gt;</span> and <span class="monospace">&lt;add&gt;</span> are in the same
                        hierarchical location in the XML tree (again, both are children of the
                        <span class="monospace">&lt;subst&gt;</span> element).<a class="noteRef" href="#d4e594">[8]</a> In the second case, the deletion and
                        the addition are interpreted as seperate interventions. The
                        <span class="monospace">&lt;del&gt;</span> element precedes the <span class="monospace">&lt;add&gt;</span> element,
                        which denotes a chronological order: first the word “quick” was deleted, then
                        the word “brown” was added. In order for a collation tool to produce an
                        output that corresponds with this interpretation of in-text revision, it should
                        both recognize the start of parallel paths marked with <span class="monospace">&lt;subst&gt;</span>
                        or <span class="monospace">&lt;app&gt;</span>/<span class="monospace">&lt;rdg&gt;</span>, and take into account the
                        chronological order implied by the order of the <span class="monospace">&lt;del&gt;</span> and
                        <span class="monospace">&lt;add&gt;</span> tags without a <span class="monospace">&lt;subst&gt;</span> or
                        <span class="monospace">&lt;app&gt;</span> parent.</div>
                     </div>
                  
                  <div id="section2-4" class="div div1">
                     
                     <h2 class="head">2.4. Current Approaches to Collating In-text Revisions</h2>
                     
                     <div class="counter"><a href="#p19">19</a></div>
                     <div class="ptext" id="p19">This section presents a concise discussion of the existing approaches to collating
                        in-text revisions. We leave aside the manual collation method of TEI Parallel
                        Segmentation and others and concentrate on the methods of automated
                        collation.<a class="noteRef" href="#d4e637">[9]</a> As mentioned above, current automated
                        collation tools are generally text-centered and do not handle TEI-XML well: they
                        ignore all tags and attributes, or collate the elements as plain text. The
                        nonlinear aspect of texts with revisions as described above, is ignored. If a
                        scholar would want to automatically compare XML files, they could opt for (1)
                        passing along information marked as relevant to the study of in-text variation
                        (with CollateX, collation software; see <a href="#section2-4-1">section
                           2.4.1</a>), or (2) creating plain text files for each level of in-text
                        variation (for instance with MVD, a storage format for text; see <a href="#section2-4-2">section 2.4.2</a>). As far as we know, both approaches
                        are implemented by at least one edition project.</div>
                     
                     <div id="section2-4-1" class="div div2">
                        
                        <h3 class="head">2.4.1. Passing Along Relevant Markup Elements</h3>
                        
                        <div class="counter"><a href="#p20">20</a></div>
                        <div class="ptext" id="p20">The JSON input format of the collation tool CollateX allows for extra
                           properties to be added to words [<a class="ref" href="#collatex">CollateX</a>]. A number of projects
                           make use of the JSON input format to “pass along” additional information about
                           relevant markup elements through the collation pipeline. In a pre-processing
                           step, the text is tokenized and transformed into JSON word tokens. Editors make
                           a selection of elements that they wish to attach to the JSON token as a <span class="hi italic">t</span> property (“t” for token). The collation is
                           executed on the value of the token’s <span class="hi italic">n</span> property
                           (“n” for normalized), but the <span class="hi italic">t</span> property with
                           the tag(s) is included in the JSON alignment table output and can be processed
                           in the table’s visualization. This approach is used, among others, by the
                           aforementioned BDMP; the online critical edition of the Primary Chronicles, or
                           <cite class="title italic">Povest’ vremennyx let</cite>, created by David J.
                           Birnbaum; and the work on the <cite class="title italic">Declamations</cite> of
                           Calpurnius Flaccus done by Elisa Nury [<a class="ref" href="#birnbaum2015">Birnbaum 2015</a>]
                           [<a class="ref" href="#nury2018">Nury 2018</a>, 7.1]. The advantages of this approach are,
                           first, that a witness with in-text variation can be collated as one text and,
                           secondly, that the method approximates the goal of having nonlinear revisions
                           marked as such in both in- and output. The main disadvantage is that the
                           collation algorithm still treats the input witness as linear text: the
                           witnesses are collated as such and any information about revision campaigns is
                           ignored during the collation process.</div>
                        </div>
                     
                     <div id="section2-4-2" class="div div2">
                        
                        <h3 class="head">2.4.2. Creating Separate Plain Text Files For Each Level of Variation</h3>
                        
                        <div class="counter"><a href="#p21">21</a></div>
                        <div class="ptext" id="p21">Another approach is to transcribe a manuscript with in-text revisions as two or
                           more separate plain text versions and then collate these temporary versions
                           against each other. The advantage of this method is that it succeeds in
                           aligning the two parts of a substitution vertically instead of horizontally
                           (which the previous approach is forced to do), but the drawback is that the
                           deletions and additions are spread over two or more (sub)versions. What is
                           more, the revisions on a manuscript do not always lend themselves to a clean
                           separation into different layers.</div>
                        
                        <div class="counter"><a href="#p22">22</a></div>
                        <div class="ptext" id="p22">The approach is presented by Desmond Schmidt’s Multi-Version Document system,
                           as integrated into Ecdosis, “A CMS for scholarly
                           editors.”<a class="noteRef" href="#d4e697">[10]</a> In a 2019 article, Schmidt describes
                           in detail how this layered approach also allows for the inclusion of in-text
                           variation [<a class="ref" href="#schmidt2019">Schmidt 2019</a>, §60]. At the transcription phase, a
                           manuscript text is divided into “levels” by the scholarly editor. All
                           changes to the “baseline text” of a document (level 1) are grouped as
                           being on level 2. Subsequent changes to level 2 are grouped as level 3. For
                           each of these levels a separate text is created, a “layer:”
                           “We do not claim that a layer is a text the author ever
                           completed; it is not a <span class="hi italic">version</span> as such,”
                           explains Schmidt, “It is simply a compact way to capture
                           local changes.”<a class="noteRef" href="#d4e720">[11]</a> Each of these artificial layers is
                           fed into Ecdosis as plain text, with a few additional features encoded in
                           stand-off markup. The Ecdosis approach is implemented in the Charles Harpur
                           Critical Archive. For example, the text of Harpur’s poem “To the Comet” is divided into three layers. The document identifier
                           “english/harpur/poems/h595f/layer-2” points to the second layer of the
                           poem’s text. Layer 2 is followed by “h595f/layer-final,” in which
                           corrections on the third level are carried out on the text of layer 2.<a class="noteRef" href="#d4e737">[12]</a> The scholarly
                           editors of the Charles Harpur Critical Archive see no issue in this
                           “mechanical” grouping of in-text variation: 
                           <blockquote>
                              <p>Assignment to levels is mechanical and describes a purely local
                                 succession of changes, which can almost always be determined. Authors
                                 leave many clues as to the succession of variants: position (above the
                                 line, then below, in the margin, on another page), the carrying over of
                                 changed text between levels, sense and crossing-out. Where the local
                                 temporal succession can’t be established this is usually because the
                                 corrections themselves can’t be read.
                                  (<a href="https://charles-harpur.org/View/Singleview/?docid=english/harpur/poems/h595&amp;version1=/h595f/layer-final" onclick="window.open('https://charles-harpur.org/View/Singleview/?docid=english/harpur/poems/h595&amp;version1=/h595f/layer-final'); return false" class="ref">(<span class="hi italic">Ibid</span>.)</a>)</p>
                           </blockquote> The
                           versions and layers in plain text are merged into one Multi-Version Document.
                           It stores the text shared by each version and layer only once. Note that the
                           comparison algorithm works at the character level, not at word level. In the
                           table visualization, therefore, words may be cut up (see <a href="#figure01">figure 1</a>).</div>
                        
                        <div id="figure01" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure01.png" rel="external"><img src="resources/images/figure01.png" style="" alt="" /></a></div>
                           
                           
                           <div class="caption">
                              <div class="label">Figure 1. </div>Table visualization of the collation output of the artificial layers of
                              <cite class="title italic">The Comet</cite> by Charles Harpur. Text characters
                              added with respect to the base layer (not shown in this figure) are in
                              blue.</div>
                        </div>
                        </div>
                     
                     <div class="div div2">
                        
                        <h3 class="head">2.4.3. Diff Algorithms to Compare XML Documents </h3>
                        
                        <div class="counter"><a href="#p23">23</a></div>
                        <div class="ptext" id="p23">Evidently, XML is a widely used standard for (online) publishing and
                           data-exchange, and there is a general need for comparing and versioning XML
                           documents. Accordingly, there exists a wide variety of <em class="term">diff</em>
                           algorithms or <em class="term">deltas</em> to find the differences between two XML
                           documents, each with its own strengths and focus [<a class="ref" href="#peters2005">Peters 2005</a>].
                           Because most XML documents are data-centric and contain record-based data,
                           deltas typically consider XML documents as hierarchically structured trees and
                           compare them as such. Considering our type of material – text-centric XML
                           documents in which the left-to-right order of the siblings is significant – we
                           specifically focused on tools that can compare ordered XML trees.</div>
                        
                        <div class="counter"><a href="#p24">24</a></div>
                        <div class="ptext" id="p24">We found a number of useful tools and algorithms, like the commercial tools
                           Microsoft’s XML Diff and Patch or the XML compare tool of DeltaXML, that can
                           compare both ordered and unordered XML trees.<a class="noteRef" href="#d4e792">[13]</a> Such tools can come in handy during
                           the making of a digital edition, for instance when scholarly editors wish to
                           compare and align TEI-XML transcriptions of the same text that were made by two
                           different scholars of the same project. Furthermore, there exist XML editors
                           with a built-in function to compare XML documents. Oxygen XML Editor, for
                           example, allows its users to compare two XML documents on the level of lines,
                           words, or characters, or to ignore attributes or namespaces.<a class="noteRef" href="#d4e801">[14]</a></div>
                        
                        <div class="counter"><a href="#p25">25</a></div>
                        <div class="ptext" id="p25">There is, however, an important difference between current XML comparison tools
                           and algorithms, and how we designed HyperCollate. Existing tools compare XML
                           documents and focus on the parent nodes, whereas HyperCollate <span class="hi italic">interprets</span> XML documents in order to better compare the versions of a
                           text. It does not ignore the structure of the XML tree, but – in line with the
                           research objectives of scholarly editors – it focuses on comparing text and is
                           only concerned with the TEI-XML tags that determine the flow of a text with
                           revisions. Given this fundamental difference in premise, an extensive analysis
                           of the quality and use of diff algorithms and tools is beyond the scope of this
                           article.<a class="noteRef" href="#d4e812">[15]</a>
                           </div>
                        </div>
                     </div>
                  </div>
               
               <div id="section3" class="div div0">
                  
                  <h1 class="head">3. Automated Collation of Nonlinear Text</h1>
                  
                  <div id="section3-1" class="div div1">
                     
                     <h2 class="head">3.1. Nonlinearity and Variant Graphs </h2>
                     
                     <div class="counter"><a href="#p26">26</a></div>
                     <div class="ptext" id="p26">As the previous section showed, automated collation software usually does not take
                        in-text revisions into account. Yet we find that texts with revisions have a
                        complex richness that deserves to be treated with attention to detail, in
                        transcription as well as in collation, so as to produce a more accurate and
                        detailed record of the textual variance. The collation result of HyperCollate
                        needed to correspond with the scholarly editor’s interpretation of the in-text
                        variance, which meant that the tool should be able to recognize and respect the
                        nonlinear nature of the input text as it was expressed in TEI-XML markup.</div>
                     
                     <div class="counter"><a href="#p27">27</a></div>
                     <div class="ptext" id="p27">The first step we took in enabling a collation tool to recognize in-text variation
                        in a witness was establishing formal (i.e., exhaustive and unambiguous) rules for
                        the way in which the program needed to process it. As described in <span class="error"><a href="#section2-2">section 2.2</a></span>, we regard a revision as a temporary
                        interruption in the linear text stream, so we wanted HyperCollate to be able to
                        treat it as such. In order for this to work, the collation tool would have to
                        recognize and interpret the markup elements indicating the start and end of
                        nonlinearity in the TEI-XML input transcription: <span class="monospace">&lt;app&gt;</span> and
                        <span class="monospace">&lt;subst&gt;</span>. Secondly, we regard the elements
                        <span class="monospace">&lt;del&gt;</span>, <span class="monospace">&lt;add&gt;</span>, or <span class="monospace">&lt;rdg&gt;</span>
                        as indicators of the start of a separate path through the text – one “branch”
                        of the text stream – and we would want the collation program to select the best
                        match from these branches. </div>
                     
                     <div class="counter"><a href="#p28">28</a></div>
                     <div class="ptext" id="p28"> A fitting model of nonlinear text is presented by the variant graph data
                        structure. The variant graph consists of a set of nodes that represent textual
                        objects, and edges that connect one node to another node in the graph. The graphs
                        are acyclic, which means that they are read from left to right without
                        “looping” back. As Tara Andrews and Caroline Macé write, a variant graph
                        is an elegant way to represent nonlinear text: “one may
                        imagine a text running from beginning to end with a number of points of
                        divergence, where each witness takes a single path through these
                        divergences”
                        [<a class="ref" href="#andrews2013">Andrews 2013</a>, 506]. Variant graphs are relatively well-known
                        in the field of automated collation and occur both as internal data model [<a class="ref" href="#schmidt2009">Schmidt and Colomb 2009</a>]
                        [<a class="ref" href="#collatex">CollateX</a>] and for visualization purposes (e.g., the stemma graph
                        or the variant graph, [<a class="ref" href="#andrews2013">Andrews 2013</a>, 507, 510–1]). As Elisa
                        Nury writes, the first use of a variant graph to express textual variation can be
                        traced to E.C. Colwell and E.W. Tune in 1964, although it was with the 2009
                        article of Desmond Schmidt and Robert Colomb that the variant graph gained a
                        foothold in the field of textual scholarship [<a class="ref" href="#schmidt2009">Schmidt and Colomb 2009</a>] (See
                        [<a class="ref" href="#nury2018">Nury 2018</a>, 73–7]). Their variant graph has the text and
                        sigla placed on the edges of the graph (<a href="#figure02">figure 2</a>).
                        Common text is merged, and variant text results in separate branches. </div>
                     
                     <div id="figure02" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure02.png" rel="external"><img src="resources/images/figure02.png" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 2. </div>Representation of the variant graph data model of Schmidt and Colomb
                           (source: CollateX documentation, section “The Data Model:
                           Variant Graphs,” on <span class="error"><a href="#https://collatex.net/doc/">https://collatex.net/doc/</a></span>).</div>
                     </div>
                     
                     <div class="counter"><a href="#p29">29</a></div>
                     <div class="ptext" id="p29">CollateX adopted the variant graph, but modified it to place the text in the nodes
                        of the graph, and the sigla on the edges (see <a href="#figure03">figure
                           3</a>). This ensures not only a better readability, but also improves
                        processing as the edges have only one label (one or more sigla). </div>
                     
                     <div class="counter"><a href="#p30">30</a></div>
                     <div class="ptext" id="p30"> There is another, more subtle yet important distinction between the variant graph
                        as proposed by Schmidt and Colomb, and the variant graph as implemented by
                        CollateX. The data structure of the variant graph in figure 3 appears simpler than
                        it is. At first glance, the textual content of the first node (“The”) appears
                        to be shared by witness 1 (W1) and witness 2 (W2). In fact, each node in the
                        CollateX variant graph represents <span class="hi italic">a set of text tokens</span> that
                        originate from one or more versions; the tokens in a set are considered equal by
                        the CollateX collation algorithm. The main point being that the tokens are not
                        modeled on textual content, as is the case with the variant graph of Schmidt and
                        Colomb. In CollateX’s variant graph model, arbitrary tokens can be compared and
                        their correspondences, differences, and order can be represented in a variant
                        graph structure [<a class="ref" href="#collatex">CollateX</a>]. This seemingly small feature paves the
                        way for HyperCollate’s approach to collation.</div>
                     
                     <div id="figure03" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure03.png" rel="external"><img src="resources/images/figure03.png" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 3. </div>Variant graph of CollateX: witness sigils on the edges and the text in the
                           nodes. Text that is considered as a match shares a node.</div>
                     </div>
                     
                     <div class="counter"><a href="#p31">31</a></div>
                     <div class="ptext" id="p31">HyperCollate uses a <span class="hi italic">hypergraph for textual variation</span>. This
                        data structure is more flexible than trees, and it differs from regular variant
                        graphs in that it has <span class="hi italic">hyperedges</span> which can connect multiple
                        nodes to one another. As a result, the nodes of a hypergraph can be traversed in
                        more than one order. Finally, the hypergraph data model of HyperCollate contains
                        text nodes as well as markup nodes. This means that the markup node of, say, a
                        <span class="monospace">&lt;del&gt;</span> element can be connected to multiple text nodes which
                        do not immediately have to follow one another. As a result, it is possible to
                        express multiple, overlapping or nonlinear dimensions of a text in
                        markup.<a class="noteRef" href="#d4e929">[16]</a>
                        Moreover, the hypergraph also enables the representation of individual witnesses
                        with in-text variance as a hypergraph (see <a href="#figure04">figure
                           4</a>).</div>
                     
                     <div class="counter"><a href="#p32">32</a></div>
                     <div class="ptext" id="p32">HyperCollate is trained on the two ways of encoding in-text revisions as proposed
                        by the TEI and discussed in section 2.2: it acts whenever it encounters either a
                        <span class="monospace">&lt;subst&gt;</span>, an <span class="monospace">&lt;app&gt;</span>, or their children
                        <span class="monospace">&lt;del&gt;</span>, <span class="monospace">&lt;add&gt;</span>, or
                        <span class="monospace">&lt;rdg&gt;</span>. These TEI-XML elements are interpreted as instances of
                        nonlinear text, with the opening tags marking a break in the linear sequence of
                        the text characters, and the closing tags identifying the return to linearity.
                        Let's take for Witness 1 the same example of a simple TEI-XML transcription we
                        used above: 
                        
                        <blockquote class="eg">
                           <pre><code class="xml">
&lt;s&gt;The
   &lt;subst&gt;
      &lt;del&gt;quick&lt;/del&gt;
      &lt;add&gt;brown&lt;/add&gt;
   &lt;/subst&gt; fox.
&lt;/s&gt;</code></pre>
                        </blockquote> Figure 4 shows the witness hypergraph of this example. Note that the
                        hypergraph contains not only information about the text of the witness, but also
                        its markup. In this visualization, the markup information is shown as an XPath. We
                        see, for instance, that the XPath of the text token “quick” is /s/subst/del. </div>
                     
                     <div id="figure04" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure04.png" rel="external"><img src="resources/images/figure04.png" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 4. </div>Visualization of the hypergraph of Witness 1 (W1) as stored in
                           HyperCollate.</div>
                     </div>
                     
                     <div class="counter"><a href="#p33">33</a></div>
                     <div class="ptext" id="p33">Another way to visualize the hypergraph of Witness 1 is shown in <a href="#figure05">figure 5</a>, below. Here, the tree of markup nodes is
                        projected onto the variant graph of the text. The text still reads from left to
                        right, with the stream of text temporarily separating into two concurrent
                        branches. The markup nodes that are associated with each text node in the XML tree
                        are visualized as colored nodes.</div>
                     
                     <div id="figure05" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure05.png" rel="external"><img src="resources/images/figure05.png" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 5. </div>Different visualization of the hypergraphs of Witness 1 as stored by
                           HyperCollate, with the markup information visualized in colors.</div>
                     </div>
                     </div>
                  
                  <div id="section3-2" class="div div1">
                     
                     <h2 class="head">3.2. HyperCollate</h2>
                     
                     <div class="counter"><a href="#p34">34</a></div>
                     <div class="ptext" id="p34">Having illustrated how HyperCollate stores the information in a TEI-XML
                        transcription, we can now move on to demonstrate how this information is processed
                        and collated. </div>
                     
                     <div id="figure06" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure06.png" rel="external"><img src="resources/images/figure06.png" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 6. </div>Schematic workflow of HyperCollate.</div>
                     </div>
                     
                     <div class="counter"><a href="#p35">35</a></div>
                     <div class="ptext" id="p35">Figure 6 represents the pipeline of HyperCollate. First, the TEI-XML transcribed
                        texts (here “XML witness 1” and “XML witness 2”) are transformed into
                        individual variant hypergraphs. These variant hypergraphs are subsequently
                        segmented and the resulting tokens are aligned. The alignment is carried out on
                        the level of the text; the markup elements <span class="monospace">&lt;app&gt;</span> and
                        <span class="monospace">&lt;subst&gt;</span> are recognized as occurrences of nonlinearity.
                        Subsequently, the resulting set of matches are merged with the two individual
                        hypergraph witnesses. The result of the collation is a collation hypergraph in
                        which all text nodes that are not aligned are unique to one of the two hypergraph
                        witnesses, and all the text nodes that are aligned are reduced to one node. There
                        are labels on the edges indicating which node is part of which hypergraph. For
                        every witness, then, there is always a fully connected path through the hypergraph
                        from the start text node to the end text node, following the sigils on the edges.
                        The collation hypergraph can be visualized or exported in alignment table format,
                        SVG, PNG, or dot format. If there are more than two witnesses, the result of that
                        first collation can be used as the basis of a new collation, following the method
                        of progressive alignment.<a class="noteRef" href="#d4e1008">[17]</a>
                        </div>
                     
                     <div class="counter"><a href="#p36">36</a></div>
                     <div class="ptext" id="p36">HyperCollate does not regard the input TEI-XML files as plain text files (which
                        would result in the aforementioned “flattening” of the input text): instead,
                        each input witness is transformed into a hypergraph and these individual witness
                        hypergraphs are subsequently collated against each other. In short, HyperCollate
                        can compare TEI-XML files with in-text revisions without having to convert them to
                        a plain text character string. During the alignment, HyperCollate looks at all
                        branches within each witness hypergraph. If the textual content of one branch (the
                        start of which is indicated by a <span class="monospace">&lt;del&gt;</span>,
                        <span class="monospace">&lt;add&gt;</span>, or an <span class="monospace">&lt;rdg&gt;</span> open tag) has a match
                        in the other witness, the text is aligned; if not, the text remains in a separate
                        branch in the hypergraph. </div>
                     
                     <div class="counter"><a href="#p37">37</a></div>
                     <div class="ptext" id="p37">Furthermore, the tag names (<span class="monospace">&lt;del&gt;</span>, <span class="monospace">&lt;add&gt;</span>,
                        <span class="monospace">&lt;rdg&gt;</span>, <span class="monospace">&lt;subst&gt;</span>, and
                        <span class="monospace">&lt;app&gt;</span>) are not only interpreted but preserved as well, in
                        order to enable further querying, transformation or visualization of the collation
                        result. The visualization of the information-rich collation hypergraph opens up
                        new possibilities and new questions. For example, if we visualize the collation
                        output as a variant graph, should we distinguish the paths that represent
                        variation within one witness from the paths constituted by variation between
                        different witnesses, and if so: how?</div>
                     
                     <div class="counter"><a href="#p38">38</a></div>
                     <div class="ptext" id="p38">As shown in section 3.3.3, <a href="#figure20">figure 20</a>, we have
                        currently opted for placing extra marks on the edges of the visualization of the
                        collation graph, right after the witness sigil: a minus [-] for an in-text
                        deletion and a plus [+] for an in-text addition. In case of an in-text
                        substitution within a substitution, this will lead to a sequence of multiple
                        [+][-] which may not lead to a clear visualization. Of course, we can say that at
                        this point the source manuscript text also presents a complex case of revision and
                        this complexity is merely reflected in the collation output. Nevertheless,
                        visualizing the collation produced by HyperCollate remains an interesting
                        challenge (see also [<a class="ref" href="#bleeker2019">Bleeker et al. 2019</a>]).</div>
                     
                     <div class="div div2">
                        
                        <h3 class="head">3.2.1 Deletions and Additions</h3>
                        
                        <div class="counter"><a href="#p39">39</a></div>
                        <div class="ptext" id="p39">Consider the example in <a href="#figure07">figure 7</a>, transcribed
                           first with the TEI <span class="monospace">&lt;del&gt;</span>/<span class="monospace">&lt;add&gt;</span> method,
                           and then with the TEI <span class="monospace">&lt;app&gt;</span>/<span class="monospace">&lt;rdg&gt;</span> method.
                           
                           <div id="figure07" class="figure">
                              
                              <a href="resources/images/figure07.png" rel="external"><img src="resources/images/figure07.png" style="" alt="" /></a>
                              
                              <div class="caption">
                                 <div class="label">Figure 7. </div>Reconstruction of a fragment from Samuel Beckett: Murphy, Draft
                                 notebook, University of Reading, Cat. Nr. 5517/3, page 20r.</div>
                           </div>
                           
                           <div class="example">
                              
                              <blockquote class="eg">
                                 <pre><code class="xml">
&lt;xml&gt;
   &lt;s&gt;&amp; &lt;add&gt;finally&lt;/add&gt; in what order he would eat the biscuits&lt;del&gt;, in the cockpit&lt;/del&gt; when the time came.
   &lt;/s&gt;
&lt;/xml&gt;</code></pre>
                              </blockquote>
                              <div class="caption">
                                 <div class="label">Example 1. </div>Transcription using the TEI del/add method.</div>
                           </div>
                           
                           <div class="example">
                              
                              <blockquote class="eg">
                                 <pre><code class="xml">
&lt;xml&gt;
   &lt;s&gt;&amp;
      &lt;app&gt;
         &lt;rdg varSeq="1"/&gt;
         &lt;rdg varSeq="2"&gt;finally&lt;/rdg&gt;
      &lt;/app&gt; in what order he would eat the biscuits
      &lt;app&gt;
         &lt;rdg varSeq="1"&gt;, in the cockpit&lt;/rdg&gt;
         &lt;rdg varSeq="2"/&gt;
      &lt;/app&gt; when the time came.
   &lt;/s&gt;
&lt;/xml&gt;</code></pre>
                              </blockquote>
                              <div class="caption">
                                 <div class="label">Example 2. </div>Transcription using the TEI app/rdg method.</div>
                           </div>
                           </div>
                        
                        <div class="div div3">
                           
                           <h4 class="head">Human expectations and algorithmic rules</h4>
                           
                           <div class="counter"><a href="#p40">40</a></div>
                           <div class="ptext" id="p40">With this TEI-XML transcription as one of the witnesses in the input for
                              HyperCollate, we expect that the collation output retains the information
                              about which words in a witness were in-text additions or deletions.
                              Additions or deletions demarcate the beginning of a split in HyperCollate’s
                              token stream. From that point on there are two substreams (the
                              “branches”): one with the <span class="monospace">&lt;del&gt;</span> or
                              <span class="monospace">&lt;add&gt;</span> and their textual content, and one without. The
                              substreams merge after the closing <span class="monospace">&lt;/del&gt;</span> or
                              <span class="monospace">/&lt;add&gt;</span> element.</div>
                           </div>
                        
                        <div class="div div3">
                           
                           <h4 class="head">Individual witness hypergraphs containing single addition(s) and
                              deletion(s)</h4>
                           
                           <div class="counter"><a href="#p41">41</a></div>
                           <div class="ptext" id="p41"><a href="#figure08">Figure 8</a> shows the individual variant graph of
                              the witness with the <span class="monospace">&lt;del&gt;</span>/<span class="monospace">&lt;add&gt;</span>
                              tagging, and <a href="#figure09">figure 9</a> using the app/rdg method
                              of transcribing.</div>
                           
                           <div id="figure08" class="figure">
                              
                              
                              <div class="ptext"><a href="resources/images/figure08.png" rel="external"><img src="resources/images/figure08.png" style="" alt="" /></a></div>
                              
                              <div class="caption">
                                 <div class="label">Figure 8. </div>Internal graph model of the del/add tagging of the example.</div>
                           </div>
                           
                           <div id="figure09" class="figure">
                              
                              
                              <div class="ptext"><a href="resources/images/figure09.png" rel="external"><img src="resources/images/figure09.png" style="" alt="" /></a></div>
                              
                              <div class="caption">
                                 <div class="label">Figure 9. </div>Internal graph model of the app/rdg tagging of the example.</div>
                           </div>
                           </div>
                        </div>
                     
                     <div class="div div2">
                        
                        <h3 class="head">3.2.2 Instant Revisions</h3>
                        
                        <div class="counter"><a href="#p42">42</a></div>
                        <div class="ptext" id="p42"><em class="term">Instant revisions</em> or <span class="foreign i">currente calamo</span> changes
                           are revisions made within the initial writing of a sentence, with the change
                           occurring on the same line, made in one and the same writing session. They pose
                           a particular challenge for transcription, because they cannot be encoded as a
                           substitution: the demarcation of the added text is problematic. Would all of
                           the text following an instant deletion be an addition? The TEI Guidelines
                           propose to add the attribute @instant with the value “true”’ to the
                           <span class="monospace">&lt;del&gt;</span> element, to distinguish between a regular
                           correction.</div>
                        
                        <div class="counter"><a href="#p43">43</a></div>
                        <div class="ptext" id="p43">In the following example, Beckett wrote “threw up
                           his” and then crossed the three words out to continue the sentence
                           with “gave such a jerk at Russell's arm that that poor
                           little man was nearly pulled off his feet.”</div>
                        
                        <div id="figure10" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure10.png" rel="external"><img src="resources/images/figure10.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 10. </div>Reconstruction of a fragment from Samuel Beckett: Murphy, Draft notebook,
                              University of Reading, Cat. Nr. 5517/2, page 16r</div>
                        </div>
                        
                        <div class="counter"><a href="#p44">44</a></div>
                        <div class="ptext" id="p44">In this case it not make sense to tag “gave such a jerk” as an addition,
                           not would it make sense to tag the rest of the sentence as such. </div>
                        
                        <div class="counter"><a href="#p45">45</a></div>
                        <div class="ptext" id="p45">Hence we argue that an instant revision does <em class="emph">not</em> constitute a case
                           of nonlinear text. In contrast to regular in-text corrections and
                           substitutions, there is no other way of reading the text: the instant revision
                           is part of the same writing campaign as the text surrounding it. 
                           <div class="example">
                              
                              
                              <blockquote class="eg">
                                 <pre><code class="xml">&lt;s&gt;&amp;amp; now &lt;del instant="true"&gt;threw up his&lt;/del&gt; gave such a jerk&lt;/s&gt;
                        </code></pre>
                              </blockquote>
                              
                              <div class="caption">
                                 <div class="label">Example 3. </div>Transcription using the TEI del/add method.</div>
                           </div>
                           </div>
                        
                        <div class="div div3">
                           
                           <h4 class="head">Human expectations and algorithmic rules</h4>
                           
                           <div class="counter"><a href="#p46">46</a></div>
                           <div class="ptext" id="p46">Following our interpretation of an instant revision, we would
                              <em class="emph">not</em> want HyperCollate to treat it as an instance of
                              nonlinear text. An instant deletion should be considered to be part of the
                              same path as the text surrounding it. We do want the information about the
                              instant revision to be present in the output, so that we can visualize the
                              deletion appropriately. </div>
                           </div>
                        
                        <div class="div div3">
                           
                           <h4 class="head">Individual witness hypergraphs containing an instant revision</h4>
                           
                           <div class="counter"><a href="#p47">47</a></div>
                           <div class="ptext" id="p47">As the instant revision, encoded with <span class="monospace">&lt;del
                                 instant="true"&gt;</span>, does not trigger HyperCollate in the same way
                              a regular <span class="monospace">&lt;del&gt;</span> does, the individual witness hypergraph
                              has only one path through the text. The information about the deletion is
                              retained (see <a href="#figure11">figure 11</a>).</div>
                           
                           <div id="figure11" class="figure">
                              
                              
                              <div class="ptext"><a href="resources/images/figure11.png" rel="external"><img src="resources/images/figure11.png" style="" alt="" /></a></div>
                              
                              <div class="caption">
                                 <div class="label">Figure 11. </div>Internal graph model of an instant revision.</div>
                           </div>
                           </div>
                        </div>
                     
                     <div class="div div2">
                        
                        <h3 class="head">3.2.3 Substitutions</h3>
                        
                        <div class="counter"><a href="#p48">48</a></div>
                        <div class="ptext" id="p48">Deletions followed by additions that are (semantically) related can be grouped
                           by means of a <span class="monospace">&lt;subst&gt;</span> (substitution) element, or as two
                           readings in an <span class="monospace">&lt;app&gt;</span> element. This can be illustrated with a
                           simple example from Beckett (see <a href="#figure12">figure 12</a>).
                           
                           <div id="figure12" class="figure">
                              
                              <a href="resources/images/figure12.png" rel="external"><img src="resources/images/figure12.png" style="" alt="" /></a>
                              
                              <div class="caption">
                                 <div class="label">Figure 12. </div>Reconstruction of a fragment from Samuel Beckett: Murphy, Draft
                                 notebook, University of Reading, Cat. Nr. 5517/2, page 20r.</div>
                           </div>
                           
                           <div class="example">
                              
                              <blockquote class="eg">
                                 <pre><code class="xml">
&lt;xml&gt;
   &lt;subst&gt;
      &lt;del&gt;Alice&lt;/del&gt;
      &lt;add&gt;Cathleen&lt;/add&gt;
   &lt;/subst&gt; came.&lt;/p&gt;
&lt;/xml&gt;
                        </code></pre>
                              </blockquote>
                              <div class="caption">
                                 <div class="label">Example 4. </div>Transcription using the TEI del/add method.</div>
                           </div>
                           
                           <div class="example">
                              
                              <blockquote class="eg">
                                 <pre><code class="xml">
&lt;xml&gt;
   &lt;app&gt;
      &lt;rdg varSeq="1"&gt;Alice&lt;/rdg&gt;
      &lt;rdg varSeq="2"&gt;Cathleen&lt;/rdg&gt;
   &lt;/app&gt; came.&lt;/p&gt;
&lt;/xml&gt;</code></pre>
                              </blockquote>
                              <div class="caption">
                                 <div class="label">Example 5. </div>Transcription using the TEI app/rdg method.</div>
                           </div>
                           </div>
                        
                        <div class="div div3">
                           
                           <h4 class="head">Human expectations and algorithmic rules</h4>
                           
                           <div class="counter"><a href="#p49">49</a></div>
                           <div class="ptext" id="p49">With this TEI encoded input, we expect HyperCollate to recognize the
                              substitution as a break in the linearity of the text and to treat the two
                              parts in a nonlinear way. Moreover, since not all text encoders group
                              <span class="monospace">&lt;del&gt;</span> and <span class="monospace">&lt;add&gt;</span> elements within a
                              <span class="monospace">&lt;subst&gt;</span> tag (see <span class="error"><a href="#section2-3">section
                                    2.3.</a></span>, HyperCollate should differentiate between a substitution and
                              an unconnected deletion and addition by providing clear rules on how to
                              trigger its special treatment of substitutions for transcriptions that don’t
                              include <span class="monospace">&lt;subst&gt;</span> elements. For now, HyperCollate
                              implements a heuristic: if a <span class="monospace">&lt;del&gt;</span> element is directly
                              followed by an <span class="monospace">&lt;add&gt;</span> element, unspaced, we take them as
                              belonging together, so the heuristic places a <span class="monospace">&lt;subst&gt;</span>
                              around the two. If the <span class="monospace">&lt;del&gt;</span> and <span class="monospace">&lt;add&gt;</span>
                              elements are separated by a white space, they are not grouped together, and
                              treated in a linear way. Of course, as with all heuristics, this is not an
                              optimal solution, as some scholarly editors do use a white space between a
                              <span class="monospace">&lt;del&gt;</span> and an <span class="monospace">&lt;add&gt;</span> element, even if
                              they consider them to belong to the same substitution.</div>
                           
                           <div class="counter"><a href="#p50">50</a></div>
                           <div class="ptext" id="p50">The <span class="monospace">&lt;subst&gt;</span> or <span class="monospace">&lt;app&gt;</span> element
                              demarcates the beginning of a split in HyperCollate’s token stream. From
                              that point on there are two substreams: one substream with the
                              <span class="monospace">&lt;del&gt;</span> or first <span class="monospace">&lt;rdg&gt;</span> element and
                              its textual content, and one substream with the <span class="monospace">&lt;add&gt;</span> or
                              second <span class="monospace">&lt;rdg&gt;</span> element and its textual content. The
                              <span class="monospace">&lt;del&gt;</span>, <span class="monospace">&lt;add&gt;</span>, and
                              <span class="monospace">&lt;rdg&gt;</span> elements are unordered: they are at the same
                              distance gromfthe root node <span class="monospace">&lt;xml&gt;</span>.</div>
                           
                           <div class="counter"><a href="#p51">51</a></div>
                           <div class="ptext" id="p51">A <span class="monospace">&lt;subst&gt;</span> element can contain more than one
                              <span class="monospace">&lt;del&gt;</span> and more than one <span class="monospace">&lt;add&gt;</span>
                              element. In principle each <span class="monospace">&lt;del&gt;</span> and
                              <span class="monospace">&lt;add&gt;</span> represents a new branch. A
                              <span class="monospace">&lt;subst&gt;</span> can occur within another
                              <span class="monospace">&lt;subst&gt;</span>, the result is simply that the stream of text
                              within that branch splits up again. </div>
                           </div>
                        
                        <div class="div div3">
                           
                           <h4 class="head">Hypergraph of a substitution</h4>
                           
                           <div class="counter"><a href="#p52">52</a></div>
                           <div class="ptext" id="p52"><a href="#figure13">Figure 13</a> shows the internal graph model for
                              the substitution in the example encoded with the
                              <span class="monospace">&lt;del&gt;</span>/<span class="monospace">&lt;add&gt;</span> method.</div>
                           
                           <div id="figure13" class="figure">
                              
                              
                              <div class="ptext"><a href="resources/images/figure13.png" rel="external"><img src="resources/images/figure13.png" style="" alt="" /></a></div>
                              
                              <div class="caption">
                                 <div class="label">Figure 13. </div>Internal hypergraph model of the <span class="monospace">&lt;add&gt;</span>/
                                 <span class="monospace">&lt;del&gt;</span> tagging of the example. </div>
                           </div>
                           
                           <div class="counter"><a href="#p53">53</a></div>
                           <div class="ptext" id="p53">The <span class="monospace">&lt;app&gt;</span>/<span class="monospace">&lt;rdg&gt;</span> method equally divides
                              the token stream up into two paths (see <a href="#figure14">figure
                                 14</a>).</div>
                           
                           <div id="figure14" class="figure">
                              
                              
                              <div class="ptext"><a href="resources/images/figure14.png" rel="external"><img src="resources/images/figure14.png" style="" alt="" /></a></div>
                              
                              <div class="caption">
                                 <div class="label">Figure 14. </div>Internal hypergraph model of the app/rdg tagging of the
                                 example.</div>
                           </div>
                           </div>
                        </div>
                     
                     <div id="section3-2-4" class="div div2">
                        
                        <h3 class="head">3.2.4 Multiple Alignment Options in Longer Substitutions</h3>
                        
                        <div class="counter"><a href="#p54">54</a></div>
                        <div class="ptext" id="p54">In the case of the substitution of a group of words, there will usually be more
                           than one way to align the witnesses. The differences in alignment stem from a
                           difference in focus: does the scholarly editor want to give priority to the
                           unit of the substitution, or should the alignment of matching words receive
                           priority? The traditional approach in collation of starting from exact string
                           matches and grouping the variants in columns between the matches has the
                           advantage of accentuating the similarities between witnesses, but the unit of
                           the substitution can become obscured as it is spread over multiple columns.
                           Holding the substitution together in the alignment, on the other hand, keeps
                           the focus on the nonlinear nature of manuscripts as witnesses. It marks the
                           spot where “something happens” on the manuscript and the totality of a
                           textual operation is presented as one block. The drawback is a potential loss
                           of information if the occurrence of a matching word across witnesses is not
                           indicated in the collation output. </div>
                        
                        <div class="counter"><a href="#p55">55</a></div>
                        <div class="ptext" id="p55">Consider the examples below. 
                           <div id="figure15" class="figure">
                              
                              <a href="resources/images/figure15.png" rel="external"><img src="resources/images/figure15.png" style="" alt="" /></a>
                              
                              <div class="caption">
                                 <div class="label">Figure 15. </div>Reconstruction of a fragment from Samuel Beckett: Murphy, Draft
                                 notebook, University of Reading, Cat. Nr. 5517/6, page 26r.</div>
                           </div>
                           
                           <div class="example">
                              
                              
                              <blockquote class="eg">
                                 <pre><code class="xml">
&lt;xml&gt;Murphy
   &lt;subst&gt;
      &lt;del&gt;seized him by the arm.&lt;/del&gt;
      &lt;add&gt;stayed his hand.&lt;/add&gt;
   &lt;/subst&gt;
&lt;/xml&gt;
                        </code></pre>
                              </blockquote>
                              <div class="caption">
                                 <div class="label">Example 6. </div>Transcription using the TEI del/add method.</div>
                           </div>
                           
                           <div class="example">
                              
                              
                              <blockquote class="eg">
                                 <pre><code class="xml">
&lt;xml&gt;Murphy
   &lt;app&gt;
      &lt;rdg varSeq="1"&gt;seized him by the arm.&lt;/rdg&gt;
      &lt;rdg varSeq="2"&gt;stayed his hand.&lt;/rdg&gt;
   &lt;/app&gt;
&lt;/xml&gt;</code></pre>
                              </blockquote>
                              <div class="caption">
                                 <div class="label">Example 7. </div>Transcription using the TEI app/rdg method.</div>
                           </div>
                        </div>
                        
                        <div class="counter"><a href="#p56">56</a></div>
                        <div class="ptext" id="p56">Given a collation with two slightly different witnesses (B: “Murphy stayed
                           his hand.”, C: “Murphy stayed the arm.”), different scholarly
                           editors might arrive at different alignment tables, but they will largely fall
                           into one of two categories: alignment on matching tokens or on the unit of the
                           substitution. Currently, HyperCollate aligns the witnesses on the unit of
                           substitution and will produce the following alignment table:</div>
                        
                        <div id="figure16" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure16.png" rel="external"><img src="resources/images/figure16.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 16. </div>Collation output expressed in an ascii table with the alignment favouring
                              the unit of the substitution.</div>
                        </div>
                        
                        <div class="counter"><a href="#p57">57</a></div>
                        <div class="ptext" id="p57">In the future, HyperCollate aims to offer users two options in its output
                           alignment: to give dominance to the matching of tokens, or to preserve the unit
                           of the substitution as much as possible. Users will be then able to indicate
                           their preference by way of a parameter in the collation command. The collation
                           hypergraph and the two possible alignment options are discussed further in <a href="#section3-3-4">section 3.3.4</a>.</div>
                        </div>
                     </div>
                  
                  
                  <div id="section3-3" class="div div1">
                     
                     <h2 class="head">3.3. Collation Output Visualization</h2>
                     
                     <div class="counter"><a href="#p58">58</a></div>
                     <div class="ptext" id="p58">Now that we have established the types of instances of nonlinearity and made our
                        expectations explicit of how HyperCollate should handle such instances, it is time
                        to discuss the current visualizations of the output of HyperCollate. </div>
                     
                     <div class="div div2">
                        
                        <h3 class="head">3.3.1 Deletions and Additions</h3>
                        
                        <div class="counter"><a href="#p59">59</a></div>
                        <div class="ptext" id="p59">The collation hypergraph can be visualized, among other formats, as an
                           alignment table (see <a href="#figure17">figure 17</a>). </div>
                        
                        
                        <div id="figure17" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure17.png" rel="external"><img src="resources/images/figure17.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 17. </div>ASCII alignment table of the collation output. In the TEI-XML
                              transcription, the in-text revisions in witness “A” were tagged with
                              <span class="monospace">&lt;add&gt;</span> and <span class="monospace">&lt;del&gt;</span>.</div>
                        </div>
                        
                        <div class="counter"><a href="#p60">60</a></div>
                        <div class="ptext" id="p60">In figure 16 the “[+]” and “[-]” in the “A” version correspond
                           to the <span class="monospace">&lt;add&gt;</span> and <span class="monospace">&lt;del&gt;</span> elements in the
                           input XML. In the case of the <span class="monospace">&lt;app&gt;</span>/<span class="monospace">&lt;rdg&gt;</span>
                           method, the value of the <span class="monospace">@varSeq</span> attribute is included in the
                           output, as shown in <a href="#figure18">figure 18</a>.</div>
                        
                        <div id="figure18" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure18.png" rel="external"><img src="resources/images/figure18.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 18. </div>ASCII alignment table of the collation output, with the in-text revisions
                              in witness “A” coded with <span class="monospace">&lt;app&gt;</span> and
                              <span class="monospace">&lt;rdg&gt;</span>. </div>
                        </div>
                        
                        </div>
                     
                     <div class="div div2">
                        
                        <h3 class="head">3.3.2 Instant Revisions</h3>
                        
                        <div class="counter"><a href="#p61">61</a></div>
                        <div class="ptext" id="p61">Collated against a fictional second witness B, the instant revision produces
                           the following ASCII alignment table (<a href="#figure19">figure 19</a>).
                           Note that the visualization options of the ASCII alignment table are limited,
                           which is why the instant deletion is visualized as a regular deletion and the
                           text that follows, “gave such a,” is placed in the same cell and directly
                           above the instant deletion.</div>
                        
                        <div id="figure19" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure19.png" rel="external"><img src="resources/images/figure19.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 19. </div>ASCII alignment tables of the collation output of an instant
                              revision.</div>
                        </div>
                        
                        <div class="counter"><a href="#p62">62</a></div>
                        <div class="ptext" id="p62">The HTML alignment table is more expressive and produces a more accurate
                           visualization of the collation result (see <a href="#figure20">figure
                              20</a>).</div>
                        
                        <div id="figure20" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure20.png" rel="external"><img src="resources/images/figure20.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 20. </div>HTML alignment tables of the collation output of an instant
                              revision.</div>
                        </div>
                        
                        <div class="counter"><a href="#p63">63</a></div>
                        <div class="ptext" id="p63">The collation hypergraph visualization (<a href="#figure21">figure
                              21</a>), finally, demonstrates once more that the instant deletion does not
                           produce an alternative path through the text of witness A. The graph also shows
                           that even though the text tokens “&amp;” and “and” as well as
                           “jerk” and “pull” are aligned in the alignment table
                           visualization, they are not considered a match by the collation algorithm.</div>
                        
                        <div id="figure21" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure21.png" rel="external"><img src="resources/images/figure21.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 21. </div>Collation hypergraph of the collation output of an instant
                              revision.</div>
                        </div>
                        </div>
                     
                     <div class="div div2">
                        
                        <h3 class="head">3.3.3 Substitutions</h3>
                        
                        <div class="counter"><a href="#p64">64</a></div>
                        <div class="ptext" id="p64"><a href="#figure22">Figure 22</a> shows the ASCII alignment tables for a
                           collation of Beckett’s substitution of “Alice” with “Cathleen”
                           against another version stating “Cathleen came.” When the substitution is
                           encoded with the <span class="monospace">&lt;del&gt;</span>/<span class="monospace">&lt;add&gt;</span> method, the
                           word in the <span class="monospace">&lt;del&gt;</span> element is preceded by “[-]”, and the
                           word in the <span class="monospace">&lt;add&gt;</span> element with “[+]”. In the case of a
                           transcription that uses the <span class="monospace">&lt;app&gt;</span>/<span class="monospace">&lt;rdg&gt;</span>
                           method, HyperCollate reproduces the values of the <span class="monospace">@varSeq</span>
                           attributes in the <span class="monospace">&lt;rdg&gt;</span> elements.</div>
                        
                        <div id="figure22" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure22.png" rel="external"><img src="resources/images/figure22.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 22. </div>ASCII alignment tables of the collation output, del/add method on the
                              left, app/rdg on the right.</div>
                        </div>
                        
                        <div class="counter"><a href="#p65">65</a></div>
                        <div class="ptext" id="p65">The collation hypergraph (see <a href="#figure23">figure 23</a>), from
                           which the ASCII alignment tables are derived, holds the most contextual
                           information: each node contains a full XPath expression. In a case where two
                           witnesses match on a word, but are not on the same level of the XML tree, two
                           different XPath expressions are listed in the node, bringing both the
                           similarities and the differences to the user’s attention.</div>
                        
                        <div id="figure23" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure23.png" rel="external"><img src="resources/images/figure23.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 23. </div>The collation hypergraph of the substitution example.</div>
                        </div>
                        
                        <div class="counter"><a href="#p66">66</a></div>
                        <div class="ptext" id="p66">The instance of nonlinear text is visualized by two separate edges and nodes
                           labeled with the same siglum, “A”. In order to make it easier to follow
                           the path of a certain revision campaign, the edges contain not only information
                           about the witness sigil, but also whether the text is part of a deleted or
                           added branch. This information is visualized on the edges with [-] and [+]
                           signs for deletions and additions respectively. Furthermore, information that
                           is shared by more than one witness is given a thicker edge and node border (see
                           e.g., <a href="#janicke2015">Jänicke et al. [2015]</a>). In this example,
                           the words “Cathleen” and “came” are considered matches between A and
                           B and thus share text nodes with a thicker border. Finally, the information
                           about the location of the tag in the XML tree is added to the node as an XPath
                           expression.</div>
                        </div>
                     
                     <div id="section3-3-4" class="div div2">
                        
                        <h3 class="head">3.3.4 Longer Substitutions</h3>
                        
                        <div class="counter"><a href="#p67">67</a></div>
                        <div class="ptext" id="p67">In the case of a collation of the Beckett example shown in <a href="#figure15">figure15</a> with two other witnesses (B: “Murphy
                           stayed his hand.”, C: “Murphy stayed the arm.”), the collation
                           hypergraph identifies two variant groups across the witnesses (<a href="#figure24">figure 24</a>).</div>
                        
                        <div id="figure24" class="figure">
                           
                           
                           <div class="ptext"><a href="resources/images/figure24.png" rel="external"><img src="resources/images/figure24.png" style="" alt="" /></a></div>
                           
                           <div class="caption">
                              <div class="label">Figure 24. </div>Collation hypergraph of an example with three witnesses, one of which
                              contains a long substitution. </div>
                        </div>
                        
                        <div class="counter"><a href="#p68">68</a></div>
                        <div class="ptext" id="p68">HyperCollate can express this graph in two possible alignment tables.</div>
                        
                        <div class="div div3">
                           
                           <h4 class="head">Alignment on matching tokens</h4>
                           
                           <div class="counter"><a href="#p69">69</a></div>
                           <div class="ptext" id="p69">The first option presents an alignment of each of the matching tokens in a
                              separate column (<a href="#figure25">figure 25</a>). It splits the
                              substitution up into token-per-token units in which a deleted and added
                              token are placed together in a column based solely on their position in the
                              token stream. 
                              <div id="figure25" class="figure">
                                 
                                 <a href="resources/images/figure25.png" rel="external"><img src="resources/images/figure25.png" style="" alt="" /></a>
                                 
                                 <div class="caption">
                                    <div class="label">Figure 25. </div>Collation output expressed in an ascii table with the alignment
                                    favouring matching tokens.</div>
                              </div> This alignment maximally emphasizes the matching words across
                              witnesses. </div>
                           </div>
                        
                        <div class="div div3">
                           
                           <h4 class="head">Alignment on the unit of the substitution</h4>
                           
                           <div class="counter"><a href="#p70">70</a></div>
                           <div class="ptext" id="p70">Alternatively, HyperCollate can take its lead from the unit of the
                              substitution to group words together in its output options, as in <a href="#figure26">figure 26</a>. 
                              <div id="figure26" class="figure">
                                 
                                 <a href="resources/images/figure26.png" rel="external"><img src="resources/images/figure26.png" style="" alt="" /></a>
                                 
                                 <div class="caption">
                                    <div class="label">Figure 26. </div>Collation output expressed in an ascii table with the alignment
                                    favouring the unit of the substitution.</div>
                              </div> In this particular example the two variant groups from the
                              collation graph are presented as separate columns without further
                              subdivision. A variant of the output in an HTML table draws attention to the
                              matching words in these columns (“stayed,”
                              “his hand” and “the arm”) by way of a corresponding background
                              color (see <a href="#figure27">figure 27</a>).</div>
                           </div>
                        </div>
                     </div>
                  
                  <div id="figure27" class="figure">
                     
                     
                     <div class="ptext"><a href="resources/images/figure27.png" rel="external"><img src="resources/images/figure27.png" style="" alt="" /></a></div>
                     
                     <div class="caption">
                        <div class="label">Figure 27. </div>Collation output expressed in an alignment table in HTML. </div>
                  </div>
                  
                  <div id="section3-4" class="div div1">
                     
                     <h2 class="head">3.4. Evaluation</h2>
                     
                     <div class="counter"><a href="#p71">71</a></div>
                     <div class="ptext" id="p71">In its genetic modules, the BDMP offers users the option of collating all the
                        prepublication versions of one particular sentence in a work by incorporating
                        on-the-fly collation with CollateX 1.7.1. By using CollateX’s pre-tokenized JSON
                        input feature and attaching the extra properties “del” and “add” to
                        tokens (<a href="#section2-4-1">section 2.4.1</a>), the BDMP can visualize
                        additions and deletions in the generated alignment tables in the same way as it
                        does in the transcription visualizations: deletions struck through and additions
                        in superscript. A comparison of the alignment tables from CollateX and
                        HyperCollate can illustrate the improvement of HyperCollate’s treatment of
                        witnesses in the collation process (see <a href="#figure28">figure
                           28</a>).</div>
                     
                     <div id="figure28" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure28.png" rel="external"><img src="resources/images/figure28.png" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 28. </div>CollateX alignment (left) versus HyperCollate alignment (right) of the
                           example from section 3.2.3. </div>
                     </div>
                     
                     <div class="counter"><a href="#p72">72</a></div>
                     <div class="ptext" id="p72">Although the CollateX table adequately intuits the in-text revision on the
                        manuscript through the formatting convention, the alignment that CollateX outputs
                        is still conceptually less correct than a visualization that places “Alice”
                        and “Cathleen” on the same level. HyperCollate combines the advantages of the
                        two current approaches described in sections <a href="#section2-4-1">2.4.1</a> and 2.4.2 and does not
                        have the drawbacks. A witness with in-text variation is treated as one witness
                        both in input and output, and the collation algorithm is able to align the two
                        parts of the substitution vertically instead of horizontally in its output by
                        treating them as unordered during alignment, which is a considerable step forward.
                        </div>
                     
                     <div id="figure29" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure29.png" rel="external"><img src="resources/images/figure29.png" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 29. </div>CollateX alignment (left) versus HyperCollate alignment (right) of the
                           example from section 3.2.4.</div>
                     </div>
                     
                     <div class="counter"><a href="#p73">73</a></div>
                     <div class="ptext" id="p73">In the case of the example discussed in sections <a href="#section3-2-4">3.2.4</a> and <a href="#section3-3-4">3.3.4</a>, the method of
                        collating as one linear witness with markup “passed along” (<a href="#section2-4-1">section 2.4.1</a>), the CollateX output is inadequate,
                        as the alignment table in <a href="#figure29">figure 28</a> shows. Treating
                        the two parts of the substitution in a linear way is detrimental to the alignment.
                        The words “the arm” and “stayed” are transposed between the first and
                        third witness, and as “the arm” occurs first in the first witness, CollateX
                        marks “the arm” as invariant between those two witnesses in favor of aligning
                        “stayed” which occurs in all three witnesses. The HyperCollate output
                        succeeds quite well in conveying the nonlinearity in the first witness and
                        grouping and aligning the differences with the subsequent witnesses.</div>
                     
                     <div class="counter"><a href="#p74">74</a></div>
                     <div class="ptext" id="p74"> Splitting the first version up into two (sub)versions as discussed in <a href="#section2-4-2">section 2.4.2</a> produces the desired alignment (<a href="#figure30">figure 30</a>), but misrepresents the manuscript by
                        including the word “Murphy” in version “A-layer1” as well as in
                        “A-layer2,” as the word “Murphy” only occurs once on the
                        document.</div>
                     
                     <div id="figure30" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure30.png" rel="external"><img src="resources/images/figure30.png" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 30. </div>CollateX alignment table output with the substitution in version “A”
                           split up into two (sub)versions.</div>
                     </div>
                     </div>
                  </div>
               
               <div id="section4" class="div div0">
                  
                  <h1 class="head">4. Future Work</h1>
                  
                  <div class="counter"><a href="#p75">75</a></div>
                  <div class="ptext" id="p75">At the moment of writing, HyperCollate can already be used via Github or in a Kotlin
                     notebook.<a class="noteRef" href="#d4e1810">[18]</a> The collation tool is still in a prototype
                     state and we can identify several areas of further development. On the one hand,
                     these developments regard the tool’s functionalities, such as generating different
                     output formats and collating witnesses regardless of the order in which they are
                     inputted (“order independent collation”). At the moment, we use the progressive
                     alignment method, which means that the order in which the witnesses are fed to the
                     collation program influences the outcome. Evidently, we do not want the order in
                     which the witnesses are inputted to affect the collation output, but this is a
                     computationally highly complex issue for which as of yet no clear-cut solution has
                     been found. </div>
                  
                  <div class="counter"><a href="#p76">76</a></div>
                  <div class="ptext" id="p76">Another area of future work is more philological, concerning questions such as “How
                     should HyperCollate handle open variants?” and “Can we include other types of
                     markup in the collation?” In the following paragraphs, we will briefly expand
                     on these and other questions. </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">4.1. Output Formats</h2>
                     
                     <div class="counter"><a href="#p77">77</a></div>
                     <div class="ptext" id="p77">The output of collation software is often used as the basis for further processing
                        or editorial correction. It is therefore important to offer a myriad of options
                        that can be edited afterwards. HyperCollate can currently output collations either
                        as a hypergraph (expressed in SVG, dot, PNG formats) or as an alignment table in
                        ASCII. An HTML implementation of a comparable table format is in development. </div>
                     
                     <div class="counter"><a href="#p78">78</a></div>
                     <div class="ptext" id="p78"> We are also working on output expressed in XML. With the encoding schema we hope
                        to stay as close to the TEI parallel segmentation method as possible. As a
                        starting point we envisage the following: 
                        
                        <blockquote class="eg">
                           <pre><code class="xml">
   &lt;app&gt;
		&lt;rdg wit="#A-" type="deletion" varSeq="1"&gt;
			&lt;del&gt;Alice&lt;/del&gt;
		&lt;/rdg&gt;
		&lt;rdgGrp type="tag_variation_only"&gt;
			&lt;rdg wit="#A+" type="addition" varSeq="2"&gt;
				&lt;add&gt;Cathleen&lt;/add&gt;&lt;/rdg&gt;
			&lt;rdg wit="#B"&gt;Cathleen&lt;/rdg&gt;
		&lt;/rdgGrp&gt;
	&lt;/app&gt; came.</code></pre>
                        </blockquote>
                     </div>
                     
                     <div class="counter"><a href="#p79">79</a></div>
                     <div class="ptext" id="p79">This encoding complies with the TEI guidelines except that, like in the collation
                        hypergraphs, a “+” or a “-” is added to the siglum “A” when that
                        version splits up into two branches which are placed in two
                        <span class="monospace">&lt;rdg&gt;</span> elements. As the XML counterpart of a node in the
                        graph where the witnesses have the same text but a different XML context, they are
                        placed as separate readings in a reading group (<span class="monospace">&lt;rdgGrp&gt;</span>). The
                        element has a @type attribute with the value “tag_variantion_only” to
                        indicate that the readings only differ in the level of the XML elements. The
                        schema is feasible when it concerns simple substitutions, but we will need to
                        determine how well it handles long substitutions or substitutions within
                        substitutions.</div>
                     </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">4.2. Substitutions Within a Word</h2>
                     
                     <div class="counter"><a href="#p80">80</a></div>
                     <div class="ptext" id="p80">Substitutions on the character-level within a word constitute a particular
                        challenge to the automatic collation process. HyperCollate works at the
                        granularity level of the word as a token, and revisions within a word produce
                        isolated characters as tokens.</div>
                     
                     
                     <div id="figure31" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure31.jpg" rel="external"><img src="resources/images/figure31.jpg" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 31. </div>Samuel Beckett: Murphy, Typescript, Harry Ransom Center, Cat. Nr. SB 5/2,
                           page 11r.</div>
                     </div>
                     
                     <div class="counter"><a href="#p81">81</a></div>
                     <div class="ptext" id="p81">In TEI-XML, Beckett’s typo in “Scratch” (<a href="#figure31">figure
                           31</a>) could be transcribed as:
                        Scratc<span class="monospace">&lt;del&gt;</span>g<span class="monospace">&lt;/del&gt;</span><span class="monospace">&lt;add&gt;</span>h<span class="monospace">&lt;/add&gt;</span>.
                        Currently this encoding produces three separate tokens: “Scratc,”
                        “g” and “h,” none of which will be aligned with the occurrence of
                        “Scratch” in another version. This is a very challenging problem for any
                        collation algorithm, because it creates the need for an alignment within an
                        alignment: aligning words in a first step and characters subsequently.</div>
                     
                     <div class="counter"><a href="#p82">82</a></div>
                     <div class="ptext" id="p82">There are a few avenues of development to consider. An approach of
                        “near-matching” might produce adequate results. Another option would be to
                        encode the entire word within a <span class="monospace">&lt;mod&gt;</span> element:
                        &lt;mod&gt;Scratc&lt;del&gt;g&lt;/del&gt;&lt;add&gt;h&lt;/add&gt;&lt;/mod&gt;,<a class="noteRef" href="#d4e1900">[19]</a> which could trigger HyperCollate to
                        translate this into
                        <span class="monospace">&lt;subst&gt;</span><span class="monospace">&lt;del&gt;</span>Scratcg<span class="monospace">&lt;/del&gt;</span><span class="monospace">&lt;add&gt;</span>Scratch<span class="monospace">&lt;/add&gt;</span><span class="monospace">&lt;/subst&gt;</span>.
                        Finally, using the <span class="monospace">&lt;app&gt;</span>/<span class="monospace">&lt;rdg&gt;</span> transcription
                        method, a construction with an extra reading, <span class="monospace">&lt;rdg
                           type="lit"&gt;</span>,<a class="noteRef" href="#d4e1919">[20]</a> might be considered: </div>
                     
                     
                     <blockquote class="eg">
                        <pre><code class="xml">
       &lt;app&gt;
          &lt;rdg wit="A" varSeq="1"&gt;Scratcg&lt;/rdg&gt;
          &lt;rdg wit="B" varSeq="2"&gt;Scratch&lt;/rdg&gt;
          &lt;rdg type="lit"&gt;Scratc&lt;del&gt;g&lt;/del&gt;&lt;add&gt;h&lt;/add&gt;&lt;/rdg&gt;
       &lt;/app&gt;.
</code></pre>
                     </blockquote>
                     
                     </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">4.3. Open Variants</h2>
                     
                     <div class="counter"><a href="#p83">83</a></div>
                     <div class="ptext" id="p83">Open variants are also an example of nonlinearity in text. The TEI guidelines
                        suggest that open variants should be encoded with a <span class="monospace">&lt;seg&gt;</span>
                        element around the inline part of the open variant, followed by one or more
                        <span class="monospace">&lt;add&gt;</span> elements. For HyperCollate to apply the same treatment
                        to open variants as to substitutions, it will need to recognize a
                        <span class="monospace">&lt;seg&gt;</span> element and treat it in a similar way to
                        <span class="monospace">&lt;del&gt;</span> or <span class="monospace">&lt;add&gt;</span>. Because the
                        <span class="monospace">&lt;seg&gt;</span> is a general element with several uses, HyperCollate
                        will have to look for a <span class="monospace">&lt;seg&gt;</span> element with a @type attribute
                        with the value “alternative.”
                        </div>
                     </div>
                  
                  <div class="div div1">
                     
                     <h2 class="head">4.4. Transpositions</h2>
                     
                     <div class="counter"><a href="#p84">84</a></div>
                     <div class="ptext" id="p84">A transposition “occurs when metamarks are found in a document
                        indicating that passages should be moved to a different position.”<a class="noteRef" href="#d4e1968">[21]</a>
                        </div>
                     
                     <div id="figure32" class="figure">
                        
                        
                        <div class="ptext"><a href="resources/images/figure32.png" rel="external"><img src="resources/images/figure32.png" style="" alt="" /></a></div>
                        
                        <div class="caption">
                           <div class="label">Figure 32. </div>Samuel Beckett: Malone Dies, Typescript, Washington University, Cat. Nr.
                           MSS008/2/47, page 49r.</div>
                     </div>
                     
                     <div class="counter"><a href="#p85">85</a></div>
                     <div class="ptext" id="p85">To tag transpositions, the TEI proposes that both parts be tagged in an element
                        with a @xml:id attribute (the element most commonly used is
                        <span class="monospace">&lt;seg&gt;</span>), and that the two tags be declared as a transposition
                        inside the teiHeader, in a <span class="monospace">&lt;transpose&gt;</span> element within a
                        <span class="monospace">&lt;listTranspose&gt;</span>. The use of
                        <span class="monospace">@type="transposition"</span> inside the <span class="monospace">&lt;seg&gt;</span> is not
                        required.</div>
                     
                     <div class="counter"><a href="#p86">86</a></div>
                     <div class="ptext" id="p86">A transposition can be said to be a nonlinear textual feature; it signals two
                        possible readings of a fragment with a difference in word order. Transposition
                        metamarks, however, do not violate the linearity of the text, as the text fragment
                        does not have two alternatives for one word or phrase, but merely suggests a
                        reordering of two or more words. A special treatment by HyperCollate of this
                        textual feature is not needed to provide a meaningful result. Currently, the
                        source XML is handled by HyperCollate linearly like all other material. The actual
                        word order is collated, and the second, implied order can still be deduced from
                        the markup in the transcription. The same applies to transpositions of letters
                        within words.</div>
                     
                     <div class="counter"><a href="#p87">87</a></div>
                     <div class="ptext" id="p87">Making the two word orders explicit in the
                        <span class="monospace">&lt;app&gt;</span>/<span class="monospace">&lt;rdg&gt;</span> method of transcription,
                        however, will allow for the two versions to be collated: 
                        
                        <blockquote class="eg">
                           <pre><code class="xml">
&lt;s&gt;and saw it could &lt;app type="transposition"&gt;&lt;rdg varSeq="1"&gt;be still&lt;/rdg&gt;&lt;rdg varSeq="2"&gt;still be&lt;/rdg&gt;&lt;/app&gt; made to serve.&lt;/s&gt;</code></pre>
                        </blockquote>
                        
                        </div>
                     </div>
                  </div>
               
               <div id="section5" class="div div0">
                  
                  <h1 class="head">5. Conclusion</h1>
                  
                  <div class="counter"><a href="#p88">88</a></div>
                  <div class="ptext" id="p88">In-text variation is essential for the study of textual variance and the TEI
                     Guidelines offer several ways to encode this kind of information. Consequently, the
                     need to include the information in the automatic collation of manuscript texts is
                     apparent. Up to now, including in-text variation was only possible through
                     workarounds that either require significant coding skills from the users – passing
                     along markup tags as shadow-tokens on the JSON input of CollateX – or by manually
                     creating pseudo-versions from the layers of in-text variation and treating them as
                     regular versions. These approaches do ensure that information about the in-text
                     variation is present in the collation output so that the nonlinear features of the
                     individual witnesses can be visually reconstructed. However, the information is not
                     part of the alignment process itself: the collation tools treat the input texts as
                     a
                     linear, ordered stream of characters and thus ignore the multilayered character of
                     manuscript text.</div>
                  
                  <div class="counter"><a href="#p89">89</a></div>
                  <div class="ptext" id="p89">In this paper, we argued that in-text variation provides meaningful information about
                     the temporality of the writing process. We demonstrated that this type of variation
                     constitutes nonlinear, partially ordered data and we argued that it should be treated
                     as such by collation software. We therefore set out to develop a collation program,
                     HyperCollate, that understands each witness as a stream of text tokens that splits
                     into two or more “branches” at the point where the internal variation occurs and
                     converges at the end of the variation. The occurrences of variation are marked by
                     the
                     scholarly editor with designated TEI-XML tags. HyperCollate thus produces a collation
                     output that represents the multidimensional nature of the source text more adequately
                     and thus corresponds with how the in-text variation was conceptualized and encoded.
                     </div>
                  
                  <div class="counter"><a href="#p90">90</a></div>
                  <div class="ptext" id="p90">The paper began with a description of our understanding of different types of in-text
                     variation, and subsequently illustrated how that understanding translates logically.
                     We then illustrated how the input of HyperCollate, TEI-XML transcriptions, are
                     transformed into individual witness hypergraphs with partially ordered textual data.
                     HyperCollate compares two witness hypergraphs and finds the best match between the
                     branches of text. In case of more witnesses, HyperCollate compares them
                     progressively. Accordingly, the TEI-XML transcriptions that hold so much scholarly
                     information can be used as direct input without any need for pre-processing or
                     flattening. We concluded that including the in-text variation produces a more refined
                     output that more accurately represents the textual variation as interpreted by the
                     scholarly editor during the transcription phase.</div>
                  
                  <div class="counter"><a href="#p91">91</a></div>
                  <div class="ptext" id="p91">One interesting finding is that in case of a longer substitution, the best way to
                     collate versions with in-text variation depends on the preference of the scholarly
                     editor. They can either prefer to have the collation program align on the unit of
                     substitution, or to align on the individual words within the substitution. Future
                     users of HyperCollate will be able to indicate their preference in the collation
                     command. We also found that the visualization of HyperCollate’s in- and output may
                     depend on the user’s preference. Both the input (a witness hypergraph) and the output
                     (a collation hypergraph) of HyperCollate can be visualized as variant hypergraphs
                     with or without markup nodes as colored hyperedges.</div>
                  
                  <div class="counter"><a href="#p92">92</a></div>
                  <div class="ptext" id="p92">The visualizations are an attempt to provide more insight into the text and its
                     revisions, but visualizing such a complex data structure is quite challenging. The
                     output of HyperCollate simply contains a lot of information, and it is difficult to
                     visualize all that information in a clear and insightful way. This becomes evident
                     with the alignment table visualization: the alignment table allows scholarly editors
                     to see at a glance which words are added and deleted, but at the same time using the
                     [-] and [+] signs for in-text deletions and additions simplify the revision process.
                     Still, an alignment table is generally easier to read than a collation hypergraph,
                     and so far user-testing has shown that the alignment table does feel intuitive to
                     scholarly editors. We will continue to experiment with the visualizations of the
                     collation hypergraph, e.g., by adding [-] and [+] signs on the edges of the collation
                     hypergraph or by using thicker edges if a token is present in many versions. </div>
                  
                  <div class="counter"><a href="#p93">93</a></div>
                  <div class="ptext" id="p93">In conclusion, this article aimed to show how formalizing our understanding of
                     in-text variation as nonlinear, partially ordered text can help to communicate our
                     human understanding to a collation tool. We trained HyperCollate on two TEI encoding
                     suggestions for in-text variation, app/rdg and subst/del/add, in order to illustrate
                     that the formalization can work for different encoding styles. The larger argument
                     made in this article concerns the benefits of reflecting upon our textual models and
                     to what extent they impact our encoding models and subsequently the in- and output
                     of
                     text analysis tools. </div>
                  
                  <div class="counter"><a href="#p94">94</a></div>
                  <div class="ptext" id="p94">The development of HyperCollate was propelled by a knowledge exchange between textual
                     scholars and research software engineers. This exchange took the form of long
                     discussions, much prototyping, experimenting, and testing. Realizing the value of
                     our
                     collaboration and ongoing knowledge exchange, we have tried to be transparent about
                     our methodology and detailed our textual theories and expectations of the software
                     as
                     well as the decision making process of HyperCollate. Indeed, we found collaborating
                     on the development of a collation program an insightful, iterative learning process
                     that emphasizes the benefits of including computational methods in manuscript
                     research. </div>
                  </div>
               
               
               
               
               </div>
            
            <div id="notes">
               <h2>Notes</h2>
               <div class="endnote" id="d4e241"><span class="noteRef lang en">[1] The examples selected for
                     this article are small for illustrative purposes, but HyperCollate is developed to
                     deal with larger texts.</span></div>
               <div class="endnote" id="d4e321"><span class="noteRef lang en">[2] “Témoin: document écrit qui témoigne de la genèse du texte”
                     [<a class="ref" href="#gresillon1994">Grésillon 1994</a>, 246]. In medieval studies, the term witness
                     is usually reserved for copies that are not an autograph [<a class="ref" href="#plachta1997">Plachta 1997</a>, 139] and serve as a witness to an archetype
                     [<a class="ref" href="#kline1998">Kline 1998</a>, 274]. See the Lexicon of Scholarly Editing,
                     <a href="https://lexiconse.uantwerpen.be/lexicon/witness.html" onclick="window.open('https://lexiconse.uantwerpen.be/lexicon/witness.html'); return false" class="ref">https://lexiconse.uantwerpen.be/lexicon/witness.html</a> (last accessed
                     October 22, 2021).</span></div>
               <div class="endnote" id="d4e398"><span class="noteRef lang en">[3]  See <a href="https://www.beckettarchive.org/" onclick="window.open('https://www.beckettarchive.org/'); return false" class="ref">https://www.beckettarchive.org/</a>. (last accessed October 22,
                     2021)</span></div>
               <div class="endnote" id="d4e438"><span class="noteRef lang en">[4] We recognize that a TEI-XML
                     transcription is not synonymous with an embedded markup file; there exist
                     non-TEI and standoff approaches to transcribing manuscripts with revisions as
                     well. Still, TEI-XML files with embedded markup are considered to be the <span class="hi italic">de facto</span> standard for text encoding [<a class="ref" href="#andrews2013">Andrews 2013</a>]
                     [<a class="ref" href="#pierazzo2015">Pierazzo 2015</a>, 130], so in this contribution we focus on
                     this kind of digital text transcriptions. </span></div>
               <div class="endnote" id="d4e454"><span class="noteRef lang en">[5] TEI
                     Guidelines chapter 11.3.1.5. “Substitutions.” See
                     <a href="https://www.tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#PHSU" onclick="window.open('https://www.tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#PHSU'); return false" class="ref">https://www.tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#PHSU</a>.
                     (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e468"><span class="noteRef lang en">[6]  TEI Guidelines chapter 12. “Critical Apparatus.” See <a href="https://tei-c.org/release/doc/tei-p5-doc/en/html/TC.html" onclick="window.open('https://tei-c.org/release/doc/tei-p5-doc/en/html/TC.html'); return false" class="ref">https://tei-c.org/release/doc/tei-p5-doc/en/html/TC.html</a> (last
                     accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e514"><span class="noteRef lang en">[7]  TEI Guidelines chapter 11.3.1.5, “Substitutions.” See <a href="https://www.tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#PHSU" onclick="window.open('https://www.tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#PHSU'); return false" class="ref">https://www.tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#PHSU</a>.
                     (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e594"><span class="noteRef lang en">[8]  If the encoder wishes to indicate
                     the order in which they think the intervention took place, the TEI Guidelines
                     suggest to use the <span class="monospace">@seq</span> attribute. See TEI Guidelines, chapter
                     11.3.1.4. “Additions and Deletions” (<a href="https://www.tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#PHAD" onclick="window.open('https://www.tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#PHAD'); return false" class="ref">https://www.tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#PHAD</a>).
                     (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e637"><span class="noteRef lang en">[9]  TEI Guidelines, chapter 12.2.3. “The
                     Parallel Segmentation Method.” See <a href="https://www.tei-c.org/release/doc/tei-p5-doc/en/html/TC.html#TCAPPS" onclick="window.open('https://www.tei-c.org/release/doc/tei-p5-doc/en/html/TC.html#TCAPPS'); return false" class="ref">https://www.tei-c.org/release/doc/tei-p5-doc/en/html/TC.html#TCAPPS</a>.
                     (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e697"><span class="noteRef lang en">[10] 
                     <a href="http://charles-harpur.org/About/Technical%20design/Ecdosis%20CMS/" onclick="window.open('http://charles-harpur.org/About/Technical%20design/Ecdosis%20CMS/'); return false" class="ref">http://charles-harpur.org/About/Technical%20design/Ecdosis%20CMS/</a>.
                     (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e720"><span class="noteRef lang en">[11]  Desmond Schmidt in the “Technical Design” section of the online Charles Harpur Critical
                     Archive. See: <a href="https://charles-harpur.org/About/Technical%20design/Versions%20and%20layers/" onclick="window.open('https://charles-harpur.org/About/Technical%20design/Versions%20and%20layers/'); return false" class="ref">https://charles-harpur.org/About/Technical%20design/Versions%20and%20layers/</a>.
                     (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e737"><span class="noteRef lang en">[12] 
                     See <a href="https://charles-harpur.org/View/Singleview/?docid=english/harpur/poems/h595&amp;version1=/h595f/layer-final" onclick="window.open('https://charles-harpur.org/View/Singleview/?docid=english/harpur/poems/h595&amp;version1=/h595f/layer-final'); return false" class="ref">https://charles-harpur.org/View/Singleview/?docid=english/harpur/poems/h595&amp;version1=/h595f/layer-final</a>
                     for an overview of all versions of the text of <cite class="title italic">The
                        Comet</cite>. (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e792"><span class="noteRef lang en">[13] Microsoft XML Diff 1.0 and
                     XML Patch 1.0 (see the documentation on <a href="https://documentation.help/Microsoft-XML-Diff/xmldiffpatch_namespace_intro_conc_0t0v.htm" onclick="window.open('https://documentation.help/Microsoft-XML-Diff/xmldiffpatch_namespace_intro_conc_0t0v.htm'); return false" class="ref">https://documentation.help/Microsoft-XML-Diff/xmldiffpatch_namespace_intro_conc_0t0v.htm</a>);
                     Delta XML Compare 11.0 (see the documentation on <a href="https://docs.deltaxml.com/xml-compare/latest/xml-compare-45122014.html" onclick="window.open('https://docs.deltaxml.com/xml-compare/latest/xml-compare-45122014.html'); return false" class="ref">https://docs.deltaxml.com/xml-compare/latest/xml-compare-45122014.html</a>).
                     (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e801"><span class="noteRef lang en">[14]  Oxygen XML
                     Editor 24.0 (see <a href="https://www.oxygenxml.com/" onclick="window.open('https://www.oxygenxml.com/'); return false" class="ref">https://www.oxygenxml.com/</a>). (last accessed October 22,
                     2021)</span></div>
               <div class="endnote" id="d4e812"><span class="noteRef lang en">[15]  We recommend the research by Gioele Barabucci on the topic
                     (see <span class="error"><a href="#barabucci2016">Barabucci et al. [2016]</a></span>; <a href="#barabucci2018">Barabucci [2018]</a>, <a href="#barabucci2020">[2020]</a>).</span></div>
               <div class="endnote" id="d4e929"><span class="noteRef lang en">[16] For a more exhaustive discussion of the hypergraph model for
                     textual variation, see [<a class="ref" href="#bleeker2018">Bleeker et al. 2018</a>] and [<a class="ref" href="#bleeker2020">Bleeker 2020</a>]; for a discussion of the hypergraph for text see
                     [<a class="ref" href="#haentjens2017">Haentjens Dekker and Birnbaum 2017</a>] and [<a class="ref" href="#haentjens2018">Haentjens et al. 2018</a>].</span></div>
               <div class="endnote" id="d4e1008"><span class="noteRef lang en">[17]  In short, the progressive alignment method of
                     collation means that two versions are compared, the result of which is stored
                     in a graph, against which a third version is collated. The result of that
                     comparison is merged into the graph, against which a fourth version is
                     collated, etc.</span></div>
               <div class="endnote" id="d4e1810"><span class="noteRef lang en">[18]  See the GitHub of the project here: <a href="https://github.com/HuygensING/hyper-collate" onclick="window.open('https://github.com/HuygensING/hyper-collate'); return false" class="ref">https://github.com/HuygensING/hyper-collate</a>. HyperCollate can be tested
                     with small XML-TEI samples in this binder: <a href="https://mybinder.org/v2/gh/HuygensING/hyper-collate/master?filepath=notebooks%2Fhyper-collate-readme.ipynb" onclick="window.open('https://mybinder.org/v2/gh/HuygensING/hyper-collate/master?filepath=notebooks%2Fhyper-collate-readme.ipynb'); return false" class="ref">https://mybinder.org/v2/gh/HuygensING/hyper-collate/master?filepath=notebooks%2Fhyper-collate-readme.ipynb</a>.
                     (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e1900"><span class="noteRef lang en">[19] 
                     Here we choose &lt;mod&gt; instead of &lt;subst&gt; because a &lt;subst&gt;
                     element cannot contain text.</span></div>
               <div class="endnote" id="d4e1919"><span class="noteRef lang en">[20] Cf. Barbara Bordalejo: “The
                     Commedia Project Encoding System”
                     <a href="http://sd-editions.com/AnaServer?commedia+6215691+viewarticle.anv+printdoc=1" onclick="window.open('http://sd-editions.com/AnaServer?commedia+6215691+viewarticle.anv+printdoc=1'); return false" class="ref">http://sd-editions.com/AnaServer?commedia+6215691+viewarticle.anv+printdoc=1</a>.
                     (last accessed October 22, 2021)</span></div>
               <div class="endnote" id="d4e1968"><span class="noteRef lang en">[21] 
                     <a href="https://tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#transpo" onclick="window.open('https://tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#transpo'); return false" class="ref">https://tei-c.org/release/doc/tei-p5-doc/en/html/PH.html#transpo</a>.
                     (last accessed October 22, 2021)</span></div>
            </div>
            <div id="worksCited">
               <h2>Works Cited</h2>
               <div class="bibl"><span class="ref" id="andrews2013"><!-- close -->Andrews 2013</span> Andrews, Tara. 2013. “The third way: philology and critical edition in the digital
                  age.”
                  <cite class="title italic">Variants</cite>, vol. 10, pp. 61–76.</div>
               <div class="bibl"><span class="ref" id="andrewsmace2013"><!-- close -->Andrews and Macé 2013</span> Andrews, Tara L. and Macé,
                  Caroline, 2013. “Beyond the tree of texts: Building an empirical
                  model of scribal variation through graph analysis of texts and stemmata.”
                  <cite class="title italic">Literary and Linguistic Computing</cite>, vol. 28, issue 4, pp.
                  504-521.</div>
               <div class="bibl"><span class="ref" id="barabucci2018"><!-- close -->Barabucci 2018</span> Barabucci, Gioele. 2018. “Diffi: diff improved; a preview.” Presented at the 2018 ACM
                  Symposium on Document Engineering (DocEng 2018), August 28-31, 2018, Halifax, Canada.
                  <cite class="title italic">Proceedings of the ACM Symposium on Document Engineering
                     2018</cite>, pp. 1-4.</div>
               <div class="bibl"><span class="ref" id="barabucci2020"><!-- close -->Barabucci 2020</span> Barabucci, Gioele. 2020. “The CMV+ P Document Model, Linear Version.”
                  <cite class="title italic">Versioning Cultural Objects: Digital Approaches</cite>, vol.
                  13, pp. 153-170.</div>
               <div class="bibl"><span class="ref" id="barabucci2013"><!-- close -->Barabucci et al. 2013</span> Barabucci, Gioele, Borghoff,
                  Uwe, Di Iorio, Angelo and Schimmler, Sonja. 2013. “Document
                  Changes: Modeling; Detection; Storing and Visualization (DChanges).”
                  Presented at the 2013 ACM Symposium on Document Engineering (DocEng 2013) in
                  September 10-13, 2013, Florence, Italy. DOI: <a href="http://dx.doi.org/10.1145/2494266.2494322" onclick="window.open('http://dx.doi.org/10.1145/2494266.2494322'); return false" class="ref">http://dx.doi.org/10.1145/2494266.2494322</a>. </div>
               <div class="bibl"><span class="ref" id="birnbaum2015"><!-- close -->Birnbaum 2015</span> Birnbaum, David. 2015. “Using CollateX with XML: Recognizing and Tracking Markup Information
                  During Collation.” Computer-supported collation with CollateX. Online: <a href="http://collatex.obdurodon.org/xml-json-conversion.xhtml" onclick="window.open('http://collatex.obdurodon.org/xml-json-conversion.xhtml'); return false" class="ref">http://collatex.obdurodon.org/xml-json-conversion.xhtml</a> (last accessed
                  October 22, 2021).]</div>
               <div class="bibl"><span class="ref" id="bleeker2020"><!-- close -->Bleeker 2020</span> Bleeker, Elli, Bram Buitendijk and
                  Ronald Haentjens Dekker. “Marking up microrevisions with major
                  implications: Non-linear text in TAG.” 2020. Presented at Balisage: The
                  Markup Conference 2020, Washington, DC, July 27 - 31, 2020. <cite class="title italic">Proceedings of Balisage: The Markup Conference 2020. Balisage Series on Markup
                     Technologies</cite>, vol. 25. <a href="https://doi.org/10.4242/BalisageVol25.Bleeker01" onclick="window.open('https://doi.org/10.4242/BalisageVol25.Bleeker01'); return false" class="ref">https://doi.org/10.4242/BalisageVol25.Bleeker01</a>. </div>
               <div class="bibl"><span class="ref" id="bleeker2018"><!-- close -->Bleeker et al. 2018</span> Bleeker, Elli, Bram Buitendijk,
                  Ronald Haentjens Dekker, and Astrid Kulsdom. “Including XML
                  markup in the automated collation of literary text.” Presented at the XML
                  Prague conference 2018, February 8-10, 2018. <cite class="title italic">XML Prague
                     Conference Proceedings</cite>, pp. 77-96. Available at <a href="http://archive.xmlprague.cz/2018/files/xmlprague-2018-proceedings.pdf#page=89" onclick="window.open('http://archive.xmlprague.cz/2018/files/xmlprague-2018-proceedings.pdf#page=89'); return false" class="ref">http://archive.xmlprague.cz/2018/files/xmlprague-2018-proceedings.pdf#page=89</a>
                  (last accessed October 22, 2021).</div>
               <div class="bibl"><span class="ref" id="bleeker2019"><!-- close -->Bleeker et al. 2019</span> Bleeker, Elli, Bram Buitendijk,
                  and Ronald Haentjens Dekker. 2019. “From Graveyard to Graph:
                  Visualisation of Textual Collation in a Digital Paradigm.”
                  <cite class="title italic">International Journal of Digital Humanities / Special Issue on
                     Digital Scholarly Editing</cite>, vol. 1, issue 2, pp. 141-163.</div>
               <div class="bibl"><span class="ref" id="bordalejo2013"><!-- close -->Bordalejo 2013</span> Bordalejo, Barbara. 2013. “The Texts We See and the Works We Imagine: The Shift of Focus of
                  Textual Scholarship in the Digital Age.”
                  <cite class="title italic">Ecdotica </cite>10: 64-76.</div>
               <div class="bibl"><span class="ref" id="ciula2014"><!-- close -->Ciula and Eide 2014</span> Ciula, Arianna, And Øyvind Eide.
                  2014. “Reflections on Cultural Heritage and Digital Humanities:
                  Modelling in Practice and Theory.”
                  <cite class="title italic">Proceedings of the First International Conference on Digital
                     Access to Textual Cultural Heritage</cite>. New York: ACM.</div>
               <div class="bibl"><span class="ref" id="collatex"><!-- close -->CollateX</span> Haentjens Dekker, Ronald and Gregor Middell.
                  2015. The Interedition Development Group <cite class="title italic">CollateX</cite>
                  (version 1.7.1). [Computer program]. Available at: <a href="https://collatex.net/" onclick="window.open('https://collatex.net/'); return false" class="ref">https://collatex.net/</a> and <a href="https://mvnrepository.com/artifact/eu.interedition/collatex/1.7.1" onclick="window.open('https://mvnrepository.com/artifact/eu.interedition/collatex/1.7.1'); return false" class="ref">https://mvnrepository.com/artifact/eu.interedition/collatex/1.7.1</a>.</div>
               <div class="bibl"><span class="ref" id="colwell1964"><!-- close -->Colwell and Tune 1964</span> Colwell, Ernest C., and Ernest
                  W. Tune. 1964. “Variant Readings: Classification and Use.”
                  <cite class="title italic">Journal of Biblical Literature</cite> 83.3, pp. 253-261.</div>
               <div class="bibl"><span class="ref" id="derose2004"><!-- close -->DeRose 2004</span> DeRose, Steve. 2004. “Markup Overlap: a review and a horse.” Presented at <cite class="title italic">Extreme Markup Languages 2004</cite>. Montréal, Québec, August 2-6, 2004. <a href="http://xml.coverpages.org/DeRoseEML2004.pdf" onclick="window.open('http://xml.coverpages.org/DeRoseEML2004.pdf'); return false" class="ref">http://xml.coverpages.org/DeRoseEML2004.pdf</a> (last accessed October 22,
                  2021).</div>
               <div class="bibl"><span class="ref" id="ferrer2014"><!-- close -->Ferrer 2014</span> Ferrer, Daniel. 2014. <cite class="title italic">James Joyce: Brouillons d’un baiser. Premiers pas vers Finnegans Wake</cite>.
                  Paris: Editions Gallimard.</div>
               <div class="bibl"><span class="ref" id="gresillon1994"><!-- close -->Grésillon 1994</span> Grésillon, Almuth. 1994. <cite class="title italic">Eléments de critique génétique lire les manuscrits modernes.</cite>
                  Paris: Presses universitaires de France.</div>
               <div class="bibl"><span class="ref" id="haentjens2017"><!-- close -->Haentjens Dekker and Birnbaum 2017</span> Haentjens
                  Dekker, Ronald, and David J. Birnbaum. 2017. “It's more than just
                  overlap: Text As Graph.” Presented at Balisage: The Markup Conference 2017,
                  Washington, DC, August 1 - 4, 2017. <cite class="title italic">Proceedings of Balisage: The
                     Markup Conference 2017. Balisage Series on Markup Technologies</cite>, vol. 19.
                  <a href="https://doi.org/10.4242/BalisageVol19.Dekker01" onclick="window.open('https://doi.org/10.4242/BalisageVol19.Dekker01'); return false" class="ref">https://doi.org/10.4242/BalisageVol19.Dekker01</a>. </div>
               <div class="bibl"><span class="ref" id="haentjens2018"><!-- close -->Haentjens et al. 2018</span> Haentjens Dekker, Ronald,
                  Elli Bleeker, Bram Buitendijk, Astrid Kulsdom and David J. Birnbaum. 2018. “TAGML: A markup language of many dimensions.” Presented at
                  Balisage: The Markup Conference 2018, Washington, DC, July 31 - August 3, 2018.
                  <cite class="title italic">Proceedings of Balisage: The Markup Conference 2018. Balisage
                     Series on Markup Technologies</cite>, vol. 21. <a href="https://doi.org/10.4242/BalisageVol21.HaentjensDekker01" onclick="window.open('https://doi.org/10.4242/BalisageVol21.HaentjensDekker01'); return false" class="ref">https://doi.org/10.4242/BalisageVol21.HaentjensDekker01</a>.</div>
               <div class="bibl"><span class="ref" id="janicke2015"><!-- close -->Janicke et al. 2015</span> Jänicke, Stefan, Annette Geßner,
                  Greta Franzini, Melissa Terras, Simon Mahony, and Gerik Scheuermann. 2015. “TRAViz: A visualization for variant graphs.”
                  <cite class="title italic">Digital Scholarship in the Humanities</cite> vol. 30, issue
                  suppl. 1, pp. i83-99.</div>
               <div class="bibl"><span class="ref" id="kline1998"><!-- close -->Kline 1998</span> Kline, Mary-Jo. 1998. <cite class="title italic">A
                     Guide to Documentary Editing.</cite> Baltimore: John Hopkin's University
                  Press.</div>
               <div class="bibl"><span class="ref" id="lebrave1992"><!-- close -->Lebrave 1992</span> Lebrave, Jean-Louis. 1992. “La critique génétique: une discipline nouvelle ou un avatar de la
                  philologie?”
                  <cite class="title italic">Genesis</cite> 1, pp. 33-72. </div>
               <div class="bibl"><span class="ref" id="nury2018"><!-- close -->Nury 2018</span> Nury, Elisa. 2018. <cite class="title italic">Automated Collation and Digital Editions: From Theory to Practice</cite>. PhD
                  thesis, London: King's College London. Available at: <a href="https://kclpure.kcl.ac.uk/portal/en/theses/automated-collation-and-digital-editions(1ffc4aa0-5ad5-4ca1-869a-ab3d528eed4a).html" onclick="window.open('https://kclpure.kcl.ac.uk/portal/en/theses/automated-collation-and-digital-editions(1ffc4aa0-5ad5-4ca1-869a-ab3d528eed4a).html'); return false" class="ref">https://kclpure.kcl.ac.uk/portal/en/theses/automated-collation-and-digital-editions(1ffc4aa0-5ad5-4ca1-869a-ab3d528eed4a).html</a>
                  (last accessed October 22, 2021).</div>
               <div class="bibl"><span class="ref" id="peters2005"><!-- close -->Peters 2005</span> Peters, Luuk. 2005. “Change detection in XML trees: a survey.”
                  <cite class="title italic">3rd Twente Student Conference on IT</cite>. Available at <a href="http://www-poleia.lip6.fr/~gancarsk/grbd09/2005_03_B_Peters,L.J.-Change_detection_in_XML_trees_a_survey.pdf" onclick="window.open('http://www-poleia.lip6.fr/~gancarsk/grbd09/2005_03_B_Peters,L.J.-Change_detection_in_XML_trees_a_survey.pdf'); return false" class="ref">http://www-poleia.lip6.fr/~gancarsk/grbd09/2005_03_B_Peters,L.J.-Change_detection_in_XML_trees_a_survey.pdf</a>
                  (last accessed October 22, 2021). </div>
               <div class="bibl"><span class="ref" id="pierazzo2015"><!-- close -->Pierazzo 2015</span> Pierazzo, Elena. 2015. <cite class="title italic">Digital Scholarly Editing: Theories, Models and Methods</cite>.
                  Surrey: Ashgate Publishing, Ltd.</div>
               <div class="bibl"><span class="ref" id="plachta1997"><!-- close -->Plachta 1997</span> Plachta, Bodo. 1997. <cite class="title italic">Editionswissenschaft: eine Einführung in Methode und Praxis der
                     Edition neuerer Texte</cite>. Stuttgart: Reclam.</div>
               <div class="bibl"><span class="ref" id="scheibe1995"><!-- close -->Scheibe 1995</span> Scheibe, Siegfried. 1995. “On the Editorial Problem of the Text.”
                  <cite class="title italic">Contemporary German Editorial Theory</cite>. eds. Hans Walter
                  Gabler, George Bornstein and Gillian Borland Pierce. Ann Arbor: The University of
                  Michigan Press.</div>
               <div class="bibl"><span class="ref" id="schmidt2019"><!-- close -->Schmidt 2019</span> Schmidt, Desmond. 2019. “A Model of Versions and Layers.” In <cite class="title italic">Digital Humanities Quarterly</cite>, vol. 13, no. 3, available from <a href="http://digitalhumanities.org/dhq/vol/13/3/000430/000430.html" onclick="window.open('http://digitalhumanities.org/dhq/vol/13/3/000430/000430.html'); return false" class="ref">http://digitalhumanities.org/dhq/vol/13/3/000430/000430.html</a>. </div>
               <div class="bibl"><span class="ref" id="schmidt2009"><!-- close -->Schmidt and Colomb 2009</span> Schmidt, Desmond and Robert
                  Colomb. 2009. “A data structure for representing multi-version
                  texts online.”
                  <cite class="title italic">International Journal of Human-Computer Studies</cite>, vol.
                  67, issue 6, pp. 497-514. <a href="http://dx.doi.org/10.1016/j.ijhcs.2009.02.001" onclick="window.open('http://dx.doi.org/10.1016/j.ijhcs.2009.02.001'); return false" class="ref">http://dx.doi.org/10.1016/j.ijhcs.2009.02.001</a>
                  </div>
               <div class="bibl"><span class="ref" id="shillingsburg1996"><!-- close -->Shillingsburg 1996</span> Shillingsburg, Peter. 1996.
                  <cite class="title italic">Scholarly Editing in the Computer Age: Theory and
                     Practice</cite> (3rd Edition). Ann Arbor, Mich.: University of Michigan
                  Press.</div>
               <div class="bibl"><span class="ref" id="sperberg-mcqueen1989"><!-- close -->Sperberg-McQueen 1989</span> Sperberg-McQueen, C.
                  1989. “A directed-graph data structure for text
                  manipulation”. Paper presented at the <cite class="title italic">The 9th
                     International Conference on Computers and the Humanities (ICCH) and 16th
                     International Association for Literary and Linguistic Computing (ALLC)
                     Conference</cite>, University of Toronto, June 1989. Available from <a href="http://www.w3.org/People/cmsmcq/1989/rhine-delta-abstract.html" onclick="window.open('http://www.w3.org/People/cmsmcq/1989/rhine-delta-abstract.html'); return false" class="ref">http://www.w3.org/People/cmsmcq/1989/rhine-delta-abstract.html</a>.</div>
               <div class="bibl"><span class="ref" id="vanhulle1999"><!-- close -->Van Hulle 1999</span> Van Hulle, Dirk. 1999. “Authenticity or hyperreality in hypertext editions: notes towards a
                  searcheable recherche.”
                  <cite class="title ital">Human IT: journal for information technology studies as a human
                     science</cite>, vol. 1, pp. 227-244.</div>
               <div class="bibl"><span class="ref" id="vanhulle2004"><!-- close -->Van Hulle 2004</span> Van Hulle, Dirk. 2004. “Compositional Variants in Modern Manuscripts.”
                  <cite class="title ital">Digital Technology and Philological Disciplines</cite>, pp.
                  513-527.</div>
               <div class="bibl"><span class="ref" id="zeller1975"><!-- close -->Zeller 1975</span> Zeller, Hans. 1975. “A
                  New Approach to the Critical Constitution of Literary Texts”. <cite class="title italics">Studies in Bibliography</cite>, vol. 28, pp. 231-264.</div>
            </div>
            <div class="toolbar"><a href="#">Preview</a>  |  <span style="color: grey">XML</span> |  <a href="#" onclick="javascript:window.print();" title="Click for print friendly version">Print Article</a></div>
            <div class="license"><a rel="license" href="http://creativecommons.org/licenses/by-nd/4.0/"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-nd/4.0/88x31.png" /></a><br />This work is licensed under a <a rel="license" href="http://creativecommons.org/licenses/by-nd/4.0/">Creative Commons Attribution-NoDerivatives 4.0 International License</a>.
               </div>
         </div>
      </div>
   </body>
</html>