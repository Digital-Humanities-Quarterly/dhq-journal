<?xml version="1.0" encoding="UTF-8"?><?oxygen RNGSchema="../../common/schema/DHQauthor-TEI.rng" type="xml"?><?oxygen SCHSchema="../../common/schema/dhqTEI-ready.sch"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:cc="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dhq="http://www.digitalhumanities.org/ns/dhq">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title type="article">Crafting the User-Centered Document Interface: The Hypertext
               Editing System (HES) and the File Retrieval and Editing System (FRESS)</title>
            <dhq:authorInfo>
               <dhq:author_name>Belinda <dhq:family>Barnet</dhq:family>
               </dhq:author_name>
               <dhq:affiliation>Lecturer in Media at Swinburne University Melbourne, in association
                  with Smart Services CRC.</dhq:affiliation>
               <email>BBarnet@groupwise.swin.edu.au</email>
               <dhq:bio>
                  <p>Belinda Barnet is Lecturer in Media and Communications at Swinburne University,
                     Melbourne. Prior to her appointment at Swinburne, she worked at Ericsson
                     Australia, where she managed the development of 3G mobile content services.
                     Belinda did her PhD on the history of hypertext at the University of New South
                     Wales, and has research interests in digital media, the philosophy of
                     technology, the history of technology and the mobile internet. She is currently
                     looking for a publisher for her book on the history of hypertext and
                     hypermedia.</p>
               </dhq:bio>
            </dhq:authorInfo>
         </titleStmt>
         <publicationStmt>
            <publisher>Alliance of Digital Humanities Organizations</publisher>
            <publisher>Association of Computers and the Humanities</publisher>
            <idno type="DHQarticle-id">000081</idno>
            <idno type="volume">004</idno>
            <idno type="issue">1</idno>
            <date when="2010-07-20">20 July 2010</date>
            <dhq:articleType>article</dhq:articleType>
            <availability>
               <cc:License rdf:about="https://creativecommons.org/licenses/by-nd/2.5/"/>
            </availability>
         </publicationStmt>
         <sourceDesc>
            <p>This is the source</p>
         </sourceDesc>
      </fileDesc>
      <encodingDesc>
         <classDecl>
            <taxonomy xml:id="dhq_keywords">
               <bibl>DHQ classification scheme; full list available at <ref target="http://www.digitalhumanities.org/dhq/taxonomy.xml">http://www.digitalhumanities.org/dhq/taxonomy.xml</ref>
               </bibl>
            </taxonomy>
            <taxonomy xml:id="authorial_keywords">
               <bibl>Keywords supplied by author; no controlled vocabulary</bibl>
            </taxonomy>
         </classDecl>
      </encodingDesc>
      <profileDesc>
         <langUsage>
            <language ident="en"/>
         </langUsage>
         <textClass>
            <keywords scheme="#dhq_keywords">
               <list type="simple">
                  <item/>
               </list>
            </keywords>
            <keywords scheme="#authorial_keywords">
               <list type="simple">
                  <item/>
               </list>
            </keywords>
         </textClass>
      </profileDesc>
      <revisionDesc>
         <change when="2010-04-26" who="Alyssa"> encoded</change>
         <change when="2013-06-20" who="Tassie Gniady">Changed "dhq:caption" to "head."</change>
      </revisionDesc>
   </teiHeader>

   <text xml:lang="en">
      <front>
         <dhq:abstract>
            <p>This article traces the development of two important hypertext systems in the history
               of computing, and the new paradigms they created: the Hypertext Editing System (HES)
               and the File Retrieval and Editing System (FRESS). HES was the world's first word
               processor to run on commercial equipment. It was also the first hypertext system that
               beginners could use, and pioneered many modern hypertext concepts for personal use.
               Although the idea of hypertext predates HES and FRESS, this article argues that these
               two systems were successful because they demonstrated hypertext to a sceptical
               public; they were both working prototypes.</p>
         </dhq:abstract>
         <dhq:teaser>
            <p>Two of the earliest hypertext systems: HES and FRESS.</p>
         </dhq:teaser>
      </front>
      <body>
         <head>Crafting the User-Centered Document Interface: The Hypertext Editing System (HES) and
            the File Retrieval and Editing System (FRESS)</head>
         <div>
            <head>Introduction: Demo or Die</head>
            <p>How does one tell the story of a computer system? As Larry Owens observes in his
               essay on U.S. engineer Vannevar Bush, <cit>
                  <quote rend="inline" source="#owens1991">However the historian chooses to answer [this question],
                     utility must certainly play a role</quote>
                  <ptr target="#owens1991" loc="23"/>
               </cit>. In computer science and engineering, there is an emphasis on prototypes,
               software, things that are concrete.<note>To paraphrase Andries Van Dam, in an
                  interview with the author, 1999.</note> This applies to engineering discourse as
               well; one of the main criteria applied to engineered technological solutions is that
               they work <ptr target="#childress1998"/>, or more precisely, that they are
                  <emph>seen</emph> to work. A good working prototype can send shockwaves throughout
               a research community, and it can inspire a host of new machines in quick succession.
               This <q>witnessing</q> is fundamental to the evolution of technical artefacts; when
               people see a machine in use, they can visualise the future of the object, connect it
               with what they are doing in their own work, and connect it with other machines or
               families of machines. An inventor is always and also a <q>combinatory</q> genius,
               selecting the best technical forms from a number of possibilities, and combining
               these into a new artefact. What has been witnessed, evaluated and shown to work
               constitutes the material for transfer.</p>
            <p>This emphasis on prototypes and demonstrations is not just historically specific to
               mid-twentieth century engineering discourse; it is also evident in contemporary new
               media. <cit>
                  <quote rend="block" source="#wardrip2003">Demonstrations have had an important, perhaps even central,
                     place in new media innovation. In some centres of new media, the traditional
                     knowledge-work dictum of <q>publish or perish</q> is replaced by <q>demo or
                        die.</q>
                  </quote>
                  <ptr target="#wardrip2003" loc="231"/>
               </cit> To put it simply: there is a difference between technical vision and technical
               artefact. As I have argued elsewhere <ptr target="#barnet2008"/>, we can dream of
               time machines and of warp speed — but the reason an engineering prototype has a rapid
               and often <q>brutal</q> productive effect on its milieu is that it displaces
               technical and financial limits and demonstrates what is possible. Sometimes, it
               creates new paradigms.</p>
            <p>In this article I will be tracing the development of two important prototype systems
               in the history of hypertext, and the new paradigms they created: the Hypertext
               Editing System (HES) and the File Retrieval and Editing System (FRESS). HES was the
               world's first word processor to run on commercial equipment. It was also the first
               hypertext system that beginners could use, and pioneered many modern hypertext
               concepts for personal use. FRESS was Van Dam’s second attempt at a hypertext system,
               and incorporated some ideas from another pioneering hypertext system from the 1960s,
               Douglas Engelbart’s oN-Line System or NLS. HES and FRESS were developed at Brown
               University in the late 1960s under the leadership of Andries Van Dam, Professor of
               Computing Science at Brown. They were built at a time when computers, in large part,
               were still seen primarily as tools for mathematical calculations, and computer
               engineers had no business talking about text editing or interactivity. In an
               interview with the author, Van Dam recalls that in the 1960s <cit>
                  <quote rend="inline" source="#vandam1999">the whole idea of a user in an interactive computer loop was
                     still foreign to most people</quote>
                  <ptr target="#vandam1999"/>
               </cit>. The story of HES and FRESS is a remarkable one as much for its audacity as
               its historical influence, and the lack of detailed literature on its development is
               surprising given this influence. As working prototype systems, they had technical
               chutzpah.</p>
            <p>The <emph>idea</emph> of hypertext predates HES and FRESS. The term was coined in
               1962 by computer visionary Theodor Holm (Ted) Nelson to describe <q>nonlinear</q>
               text, although the concept of a technical system designed to facilitate nonlinear
               text can be traced back as far as 1910.<note>The concept can be traced back to at
                  least to 1910, with William Ostwald and Paul Otlet, while the history of the
                  paper-based hypertext dates back to Talmudic commentaries. Most extant computing
                  histories trace the idea back to a machine called Memex, proposed by Vannevar Bush
                  in a 1945 essay entitled <title rend="quotes">As We May Think.</title> In this
                  essay, Bush proposes a machine which utilises microfilm to store and deliver
                  information structured in an associative network. Bush was well ahead of his time,
                  writing in an era before the digital computer. For more information, see my
                  article <ref target="#barnet2008">
                     <title rend="quotes">The Evolution of Vannevar Bush’s Memex</title>
                  </ref> in <title rend="italic">Digital Humanities Quarterly</title>.</note> Nelson
               was a co-designer of HES, but was most famous for imagining a hypertext system in the
               mid-sixties called Xanadu. Xanadu, like its fictional namesake by Samuel Taylor
               Coleridge, was a vision in a dream, a computer filing system which would store and
               deliver the great body of human literature, in all its historical versions and with
               all its messy interconnections, acknowledging authorship, ownership, quotation and
               linkage. Nelson began writing about this idea in the sixties, and it has been
                  <q>under development</q> for fifty years hence; he has not produced a working
               prototype or demo of Xanadu, although he did release some shells of code in 1999. To
               Nelson’s dismay, and unfairly, it has consequently been hailed as <cit>
                  <quote rend="inline" source="#wolf1995">the longest-running vaporware project in the history of
                     computing</quote>
                  <ptr target="#wolf1995"/>
               </cit>. Due in part to this lack of a real-world prototype, Nelson has had difficulty
               attracting funding or having his work taken seriously. This vision of hypertext did,
               however, inspire Van Dam.</p>
            <p>Although Nelson was a co-designer of HES, there was a falling-out with the team
               during its design and implementation, and Nelson stated in an interview with the
               author that he was unhappy with the result <ptr target="#nelson1999"/>. As we will
               explore in this article, Van Dam and his team were concerned less with grand visions
               and more with getting the system built and funded in the real world. HES was
               effectively the first hypertext system available on commercial equipment that novices
               could use. It introduced interactive reading and authoring to the humanities and the
               text link to lay users; it established a technical precedent for systems to
               follow.</p>
            <p>In this article I will argue that HES and FRESS, like Doug Engelbart’s landmark
               system NLS, were influential on the history of hypertext and modern computing in
               large part because they <emph>demonstrated</emph> the concept of hypertext; they were
               both working systems. Where Ted Nelson, with his prescient ideas and presentations,
               had been campaigning for <q>nonlinear writing</q> housed on a computer for years
               without commercial success<note>Van Dam said in an interview that this is <cit>
                     <quote rend="inline" source="#vandam1999">because Ted packages ideas in so much ... P.T. Barnum
                        salesmanship that people distrust it</quote>
                     <ptr target="#vandam1999"/>
                  </cit>.</note>, Van Dam and his team of mostly undergraduate students actually
               built it. It was a difficult project precisely because the HES team had first to
               convince the world that manipulating text interactively on computers was not a crazy
               idea; convincing them that hypertext was useful was an even harder sell.</p>
         </div>
         <div>
            <head>Computing in the 1960s</head>
            <p>There was a lot going on in the computing industry in the late 1960s. Time-sharing
               had hit the industry<note>Time-sharing is sharing a computing resource among many
                  users by means of allowing simultaneous access.</note>, and the minicomputer had
               begun to establish its markets. Computing had begun to move into the wider arena of
                  <q>data processing.</q> Noting such changes, IBM began marketing to a full circle
               of customers instead of the traditional military and industrial customers.
               System/360, the mainframe on which HES was eventually built, was the first computer
               built by IBM aimed at businesses and corporations — a wider and more <q>domestic</q>
               market. There was a computing paradigm-shift going on.</p>
            <p>But although businesses were adopting <q>data processing</q> for the first time, the
               world still saw computers as hardwired mathematics. <quote rend="inline" source="#vandam1999">Text was not
                     <q>data</q>; it was something academics and journalists manipulated with pens
                  or typewriters,</quote> Van Dam recalls <ptr target="#vandam1999"/>. Processing
               power was limited, and universities meted it out like gold to the places it was
               needed most — in their opinion, physics and engineering departments. Computers were
                  <quote rend="inline" source="#vandam1999">for scientists and engineers to solve serious
                  problems,</quote> Van Dam recalls his then-VP for Finance saying, and he was told <cit>
                  <quote rend="inline" source="#vandam1999">if you want to crank out papers you can damn well use a
                     typewriter</quote>
                  <ptr target="#vandam1999"/>
               </cit>. This vision of a human sitting at a computer screen and writing or navigating
               linked text was not obvious to the university. As Dr Douglas Engelbart, the inventor
               of the computer mouse, observed in an interview with the author, <cit>
                  <quote rend="inline" source="#engelbart1999">The idea was wacky even in the seventies, when we had it
                     working — real hypermedia, real groupware working</quote>
                  <ptr target="#engelbart1999"/>
               </cit>.</p>
            <p>There was, however, an existing technology used for editing text on a computer; it
               was called a <q>line</q> or <q>context</q> editor <ptr target="#vandam1999"/>. This
               was designed for writing or editing computer programs, but it was often used covertly
               to create documents. Like Doug Engelbart, who unbeknownst to Van Dam was working on
               the NLS/Augment system at the same time<note>For more information please see my
                  article on Engelbart, <ptr target="#barnet2006"/>.</note>, Van Dam saw the need to
               tailor computing technology to the humans that used it. In particular, he saw that an
               editing system which sufficed for computer programmers would not fulfil the needs of
               writers. Then he encountered Ted Nelson.</p>
         </div>
         <div>
            <head>The Design of HES and FRESS</head>
            <p>Van Dam bumped into Nelson at the 1967 Spring Joint Computer Conference.<note>They
                  had actually met before when they were both undergraduates at Swarthmore.</note>
               Passionate and eloquent, Nelson started telling him about hypertext. Nelson had been
               thinking about hypertext for several years and had tried to design a system at Vassar
               College in 1965 <ptr target="#nelson1999"/>, but unfortunately like most of Nelson’s
               ideas, it had not eventuated in a product of any kind. When Van Dam met Nelson, <cit>
                  <quote rend="inline" source="#vandam1999">He had nothing to show for this idea, no prototypes or work
                     in the sense that computer scientists talk about work — i.e., software,
                     algorithms</quote>
                  <ptr target="#vandam1999"/>
               </cit>. What Nelson did have was a vision of what hypertext might one day look like,
               and an infectious enthusiasm for the idea. Nelson envisioned a computer-based
               hypertext system where the user could take different trajectories through a network
               of information, reading and writing <q>non-sequentially</q>
               <ptr target="#nelson1999"/>. <cit>
                  <quote rend="block" source="#vandam1999">Nelson's vision seduced me. I really loved his way of thinking
                     about writing, editing and annotating as a scholarly activity, and putting
                     tools together to support that. I hadn't heard of Engelbart. I hadn't heard of
                     Bush and Memex. So after meeting quite by accident at this computer conference,
                     and talking about what we each were doing, we somehow got onto the topic. I had
                     this wonderful graphics display...and I was working on various graphics
                     applications at the time. He talked me into working on the world’s first
                     hypertext system and that sounded cool.</quote>
                  <ptr target="#vandam1999"/>
               </cit> Van Dam didn't need much convincing. He had been thinking about computers and
               writing for some time now. So he gathered a team together at Brown and began work
               later that year, with the objective of trying out this hypertext concept.</p>
            <p>Nelson went up there <cit>
                  <quote rend="inline" source="#vandam1988">at his own expense</quote>
                  <ptr target="#vandam1988" loc="87"/>
               </cit> to consult in its development, but found the experience quite frustrating. Van
               Dam and his team set out to design a dual-purpose system for authoring, editing and
               printing text documents such as papers, proposals and course notes, which could also
               be used to browse and query written materials nonsequentially. From Nelson’s
               perspective, this sidelined the concept of hypertext in favour of print text editing.
               In an interview with the author, Nelson claimed what the HES team built was
               essentially a word processor with linking facilities; it was directed at the printed
               page <ptr target="#nelson1999"/>. Nelson was not happy with this
                  <q>trivialisation</q> of his hypertext vision<note>For more information on
                  Nelson’s original vision of hypertext, see my paper <title rend="quotes">The
                     Magical Place of Literary Memory: Xanadu</title> in <title rend="italic">Screening the Past</title>, 2005.</note>, and spent much time arguing for the
               elaboration of HES’s hypertext facilities. For Nelson, paper was the enemy.</p>
            <p>But the HES team was trying to convince the world that the whole concept of handling
               text on computers was not a waste of time and processing power. And the world knew
               text handling as a paper-based thing. <quote rend="inline" source="#vandam1999">So not only were we
                  selling hypertext, but at the same time document processing, interaction. Many
                  people were still computing with cards,</quote> recalls Van Dam <ptr target="#vandam1999"/>. As stated previously, even Doug Engelbart was having
               trouble convincing the world that humans and machines might work together
               interactively. There was not a funding body in the country that would support the
               idea of a completely non-sequential, online <q>web.</q> Perhaps more importantly, Van
               Dam already had a vision of what his writing system should do, a vision based on
               improving an existing human activity: creating and editing text for printed
               documents.</p>
            <p>The HES team designed a system for the composition and manipulation of manuscripts,
               which could also be used as a reading machine to browse and query complex written
               materials online. They did not wish to inflict line numbers on the user, or to <quote rend="inline" source="#carmody1967">make him program little changes in his data</quote>
               <ptr target="#carmody1967" loc="8"/> as line editors for computer programs did.
               Reading, writing and editing documents should be simple, and the tools should be
               suited to the task. Because they wished to emphasise the place of <q>ordinary</q>
               text editing as well as the more radical concept of non-sequential, online reading
               and writing, they called the project the Hypertext <emph>Editing</emph> System — a
               name meant to embrace this dual purpose.</p>
            <p>It was a hard sell. Van Dam recalls his chairman at the time saying, <quote rend="inline" source="#vandam1988">Why don't you stop with all this hypertext nonsense, and do
                  something serious?</quote> to which Van Dam replied, <cit>
                  <quote rend="inline" source="#vandam1999">Walter, I am doing something serious</quote>
                  <ptr target="#vandam1999"/>
               </cit>. At his own university, Van Dam <cit>
                  <quote rend="inline" source="#vandam1999">had multiple reactions, from <q>cute</q> to <q>I don’t get it</q> to my being in
                     a pissing contest to be allowed to use the university’s only mainframe computer
                     for this research with the then-VP for Finance</quote>
                  <ptr target="#vandam1999"/>
               </cit>. After being shown a first version of the system, IBM, however, thought the
               project serious enough to provide funding through a research contract. This, recalls
               Van Dam, put the project on much more legitimate ground and ensured that the
               undergraduates who had been programming HES as a bootleg graphics project were then
               paid for their efforts <ptr target="#vandam1988" loc="889"/>.</p>
            <p>HES was set up on an IBM 360/50 with a 2250 display, and ran in a 128k partition of
               the operating system that controlled the 512k of main memory available (there was a
               complete timesharing system operating in another partition). The user sat facing a
               12" by 12" screen, browsing through portions of arbitrarily sized texts. Original
               text was entered directly via a keyboard, and the system itself was controlled by
               pressing function keys, by pointing at the text with a light pen or via the keyboard
                  <ptr target="#carmody1967" loc="4"/>. The activities of the user were corresponded
               directly to the operations normally performed upon text by writers and editors. The
               user was able to manipulate pieces of text as though they were physical items:
               correcting, moving, cutting, pasting, filing previous drafts and copying. <cit>
                  <quote rend="block" source="#carmody1967">Our philosophical position [was] essentially that the writer
                     is engaged in very complicated pursuits, and that this work legitimately has a
                     freewheeling character... therefore it became our intent to provide the user
                     with unrestricted <q>spatial</q> options, and not to bother him with arbitrary
                     concerns that have no meaning in terms of the work being performed.</quote>
                  <ptr target="#carmody1967" loc="8"/>
               </cit> The HES team also did not wish to store text in numerical pages or divisions
               known to the user, except as she might deliberately divide her text, create links or
               number her headings. Rather than filing by page number or formal code name, HES
               stored text as arbitrary-length fragments or <q>strings</q> and allowed for edits
               with arbitrary-length scope (for example, insert, delete, move, copy). This is in
               contrast to NLS, which imposed a hierarchical tree structure of fixed-length lines or
               statements upon all content; Engelbart used 4,000 character limits on his statements
               to create a tighter, more controlled environment. These limitations meant that
               Engelbart could implement more efficiently <ptr target="#vandam1999"/>. HES was
               deliberately made to embody a freewheeling character, as non-structured as
               possible.</p>
            <p>The system itself was composed of text <q>areas</q> which were of any length,
               expanding and contracting automatically to accommodate material. These areas were
               connected in two ways: by links and by branches. A link went from a point of
               departure in one area (signified by an asterisk) to an entrance point in another, or
               the same, area. Although the HES team used Ted Nelson's conception of a text link,
               Doug Engelbart was incorporating the same idea into NLS independently, unbeknownst to
               Van Dam, who wishes he had known about this work. <quote rend="inline" source="#vandam1999">I hadn’t heard
                  of Engelbart. I hadn’t heard of Bush and Memex. That came quite a bit
                  later,</quote> Van Dam recalls.<note>
                  <cit>
                     <quote rend="inline" source="#vandam1999">In fact, one of the things I was always pissed about is
                        that Ted never told me about Engelbart, even though he claimed he knew of
                        his work</quote>
                     <ptr target="#vandam1999"/>
                  </cit>.</note> Links were intended to be optional paths within a body of text —
               from one place to another. A link was intended to express a relationship between two
               ideas or points: an intuitive concept.</p>
            <p>The HES team employed <q>human factors</q> techniques to design a system which guided
               and explained the user's every move without loss of effectiveness <ptr target="#carmody1967" loc="14"/>. The system was much easier to use than NLS,
               perhaps due to the fact that it was created as much for writers as it was for
               engineers. Speaking from the year 2009, the editing features of HES seem quite
               obvious, almost trivial. At the time, however, it was difficult to convince people in
               a commercial environment that it was not an excessively complicated typewriter.
               Nobody could conceive of writing or editing text on a screen. As Van Dam recalled in
               an interview with the author, <cit>
                  <quote rend="block" source="#vandam1999">Remember, we were doing hypertext at a time when there were no
                     word-processing systems either. The HES is one of the very first word
                     processors… I believe HES was the first document editor, specifically designed
                     for documents, to run on commercial equipment, and NLS was the first document
                     editor to run on a proprietary system, predating HES.</quote>
                  <ptr target="#vandam1999"/>
               </cit>
            </p>
            <p>One of Van Dam’s tasks was to convince humanities scholars and writers that this was
               a more efficient way of writing than using a pen or a typewriter. HES used a standard
               32-key IBM function keyboard, but when they gave demos to writers in the late 1960s
               whose business was words, not engineering, they would <q>freak out</q> over all the
               buttons <ptr target="#vandam1999"/>. So Van Dam learned to use progressive
               disclosure, not frightening humanities people with too many buttons. <cit>
                  <quote rend="block" source="#vandam1988">I made a plastic overlay which I essentially used to cover up
                     all but five of the editing buttons: insert, delete, move, copy and jump. Then
                     we would do an entire demo for half an hour or so with that … and then we would
                     play peek-a-boo, strip off the first overlay, and lo and behold, there was
                     another row of function keys.</quote>
                  <ptr target="#vandam1988" loc="890"/>
               </cit>
            </p>
            <p>In early 1968 HES did the rounds of a number of large customers for IBM equipment,
               for example, <title rend="italic">Time/Life</title> and the <title rend="italic">New
                  York Times</title>. All these customers based their business on the printed word.
               But HES was too far out for them. Writing was not something you did at a computer
               screen. They had seen programs that set type, and maybe some programs for managing
               advertisements, but the concept of sitting in front of a computer and writing or
               navigating text was foreign to them. <cit>
                  <quote rend="block" source="#vandam1999">The best I ever got was from people like Time and Time-Life
                     and the New York Times who said this is terrific technology, but we’re not
                     going to get journalists typing on computer keyboards for the foreseeable
                     future.</quote>
                  <ptr target="#vandam1999"/>
               </cit> As we now know, however, in less than a decade journalists (and executives)
               would be typing on computer keyboards.</p>
            <p>In late 1968, Van Dam finally met Doug Engelbart and attended a demonstration of NLS
               at the Fall Joint Computer Conference. This was a landmark presentation in the
               history of computing, and the audience, comprised of several thousand engineers and
               scientists, witnessed such innovations as the use of hypertext, the computer
                  <q>mouse</q> and screen, and and telecollaboration on shared files via video
               conferencing for the first time. The unveiling of NLS is now known affectionately and
               with great respect as the Mother of All Demos, and was celebrated in December of 2008
               at its 40th anniversary with almost all of the original team led by Doug Engelbart on
               stage, and Andries Van Dam as the outsider commentator. For Van Dam, this system set
               another, and entirely different, technical precedent. The line- or context-editor was
               old technology — NLS was the prototype for creating, navigating and storing
               information behind a tube and for having a multi-user, multi-terminal cost-effective
               system. He went on to design the File Retrieval and Editing System (FRESS) at Brown
               with his team of hotshot undergraduates and one masters student. As Van Dam observed
               in the Hypertext 1987 conference keynote address, <cit>
                  <quote rend="block" source="#vandam1988">...my design goal was to steal or improve on the best ideas
                     from Doug's NLS and put in some things we really liked from the Hypertext
                     Editing System - a more freeform editing style, no limits to statement size,
                     for example.</quote>
                  <ptr target="#vandam1988"/>
               </cit>
            </p>
            <p>The HES project was frozen as the team started work on the next-generation system.
               Meanwhile, IBM sold HES to the Apollo Mission Team at the Houston Manned Spacecraft
               Centre (unbeknownst to Nelson and Van Dam and others who had worked on it at the
               time). Van Dam now proudly recalls that it was used in NASA's Houston Manned
               Spacecraft Center for documentation on the Apollo space program <ptr target="#vandam1988"/>. As with most computing projects in the late 60s,
               government (and the military) had a keener eye for innovation than business. For what
               it was designed to achieve, HES performed perfectly.</p>
            <figure xml:id="figure01">
               <head>The Hypertext Editing System (HES) console at Brown University. Original photo
                  by Greg Lloyd, 1969.</head>
               <figDesc>Photograph of the HES console with lightpen and keyboard.</figDesc>
               <graphic url="...000081/resources/figure01.jpg"/>
            </figure>
            <p>HES, as a first prototype, naturally had its shortcomings. Part of the goal behind
               FRESS was to improve on these shortcomings. Firstly, HES was programmed specifically
               for the IBM /360 and the /2250 display; there was no device-independence. Van Dam had
               seen the benefits of device-independence in Engelbart’s demonstration; in NLS <cit>
                  <quote rend="inline" source="#vandam1999">the command line…worked on basically any device. So they had
                     really engineered in good device independence from the beginning</quote>
                  <ptr target="#vandam1999"/>
               </cit>. FRESS was the first hypertext system to run on readily-available commercial
               hardware and OS: it was built for the IBM VM/370, an off-the-shelf time-sharing
               system, and could even run on terminals incapable of multi-window views.</p>
            <p>Secondly, HES wasn't multi-user; it was specifically targeted towards the 2250, a
               machine for individual use <ptr target="#vandam1999"/>. The benefits of having a
               multi-user system were also obvious from Engelbart's demonstration of NLS <ptr target="#ceruzzi1998"/>. Primarily, a multi-user system allowed teams of people to
               work together more easily. In NLS, the tendency towards knowledge-exchange and
               collaborative work were more than just a system side-effect — they were a goal. Van
               Dam decided to make FRESS multi-user. Although FRESS <quote rend="inline" source="#vandam1999">didn't have
                  the kinds of chalk-passing protocols that NLS had</quote>
               <ptr target="#vandam1999"/> — in NLS, for instance, multiple users could work with a
               shared view of a single document-in-progress — it was designed from the outset to run
               on a timesharing system and to accommodate multiple displays of different types and
               capabilities from teletypewriters to glass teletypes (simple CRT screens) to
               multi-windowed powerful displays with pointing devices.</p>
            <p>But the most popular new development for novice users in FRESS was not its capacity
               to accommodate multiple displays and users; it was the <q>undo</q> feature. FRESS
               pioneered undo for both word processing and hypertext, and arguably influenced the
               future design of word processing systems. Every edit to a file was saved in a shadow
               version of the data structure, and that allowed for both an <q>autosave</q> and an
               undo. Brown staff and students understood immediately the importance and usefulness
               of this feature <ptr target="#vandam1999"/>. As Van Dam saw it, the ultimate system
               would have indefinite undo and redo.<note>Nelson’s Xanadu system was also to have
                  infinite undo.</note>
            </p>
            <p>Importantly, FRESS supported arbitrary-length strings; it had no size limitations.
               According to Van Dam, an important philosophical distinction between NLS and FRESS
               was that <cit>
                  <quote rend="inline" source="#vandam1999">Doug had these 4,000-character limits on his statements, and
                     that was an anathema to us. It was an anathema to Ted, when he started out, to
                     have limits on anything</quote>
                  <ptr target="#vandam1999"/>
               </cit>. The FRESS team believed that the system should not force you into an
               unnatural usage pattern, so software paging allowed for essentially unlimited
               document sizes while maintaining performance. Working in the FRESS environment, the
               user could not tell the difference between a two-page and a two-hundred page printed
               file, and could actually specify how all this would be viewed in the first place.
               FRESS borrowed many of the viewing specification ideas from NLS.</p>
            <p>At the same time, hyperlinks in these files were addressable down to the character.
               The granularity was as fine as sand. As Van Dam put it in our interview, <quote rend="inline" source="#vandam1999">I don't want to go to a book, I don't want to go to a chapter, I
                  want to go to the actual quote!</quote> One of the reasons why the web does not
               have the same functionality as earlier hypertext systems such as FRESS or NLS is that
               a URL points to a document: unless the author pre-specifies anchors in the target
               page, there is no finer granularity than that. In NLS, a link took you to a
               statement. In FRESS it could take you to a character. So in this sense, Van Dam
               points out, <quote rend="inline" source="#vandam1999">I think we had a <q>creamier</q> hypertext than NLS
                  did,</quote> and they certainly had a creamier hypertext than the modern web.</p>
            <p>Another aspect of FRESS which the web has not implemented is bidirectional linking.
               HES had unidirectional links, and the FRESS team decided that this needed to be
               changed. FRESS was the first hypertext system to provide bidirectional linking. It
               was also groundbreaking in that it provided different options to
                  <emph>visualise</emph> this field of links and references, to see the global
               context for work: a map.</p>
            <p>The outline functionality in FRESS was inspired by NLS (or as Van Dam puts it, <cit>
                  <quote rend="inline" source="#vandam1999">was a straight rip-off</quote>
                  <ptr target="#vandam1999"/>
               </cit>). For readers who are not familiar with this terminology, an outline processor
               is a specialised word processing program for handling and displaying outlines. One of
               its most powerful features is the ability to suppress lower levels of detail and see
               the global context for work <ptr target="#conklin1987" loc="25"/>. The user can view
               just the top <hi rend="italic">n</hi> levels of the structure — a map whose level of
               detail is defined by the user. This facilitates rapid movement between sections and
               makes editing and global navigation easier. But most importantly, this meant that in
               FRESS <cit>
                  <quote rend="block" source="#vandam1988">[We] had an ability to see the structure space, a
                     visualisation of all the structure in the text, the outline structure and the
                     cross-referencing structure. You could do structural rearrangements in that
                     structure space in a quick overview mode and you would thereby induce those
                     same edits in the text itself.</quote>
                  <ptr target="#vandam1988" loc="891"/>
               </cit>
            </p>
            <p>In sum, unlike in contemporary hypertext systems like the web, FRESS provided a
               variety of coordinated views and conditional structure and view-specification
               mechanisms. The user had final control over how and how much of the document was
               being displayed — unlike with embedded markup like HTML. It also afforded separation
               of structure from formatting and hypertext semantics — also unlike HTML. And all of
               these features were designed to be easy to learn for novice users, based as they were
               on a multi-window function key and lightpen interface in addition to a command-line
               interface (in contrast to NLS, which had a more complex, and correspondingly more
               powerful, command language). FRESS actually displayed and handled complex documents
               better than non-hypertext <q>word processing</q> systems of the time. It was so
               intuitive and efficient that it <cit>
                  <quote rend="inline" source="#derose1999">was used as a publishing system as well as a collaborative
                     hypertext environment for teaching, research and development</quote>
                  <ptr target="#derose1999" loc="7"/>
               </cit>. It was also used at Nijmegen University and Philips Eindhoven in the
               Netherlands <ptr target="#derose1999" loc="19"/>.</p>
            <p>But this is not to say that FRESS was a run-away success at Brown, or that the
               project received financial support. In fact, quite the reverse; <cit>
                  <quote rend="inline" source="#vandam1999">computer scientists didn’t think it was computer science, and
                     humanists weren’t paying for technologies</quote>
                  <ptr target="#vandam1999"/>
               </cit>. The most difficult group to deal with were the staff in charge of computing.
               In those days, computing time on the university mainframe was allocated via a virtual
               accounting system. You got n-thousands of dollars in your account (this was called
               virtual money or <q>funny money</q>), and when you ran out, your time was up. Van Dam
               and the FRESS team, of course, were always arguing for more. One year the VP for
               Finance told the FRESS team that there would be no more money for this FRESS
               hypertext nonsense, as the computer was for serious physics and engineering work. Van
               Dam had to use blackmail to keep the project alive. <cit>
                  <quote rend="block" source="#vandam1999">Under the Brown system, the computer is just as much a public
                     utility as the library, and you can no more cut off people based on their field
                     from the computer than you can cut them off from the library... only by
                     threatening to go public and let the campus know that the engineers and
                     physicists were treating the computer as their private fiefdom [did I] get the
                     money.</quote>
                  <ptr target="#vandam1999"/>
               </cit> Luckily, the FRESS team kept going. Engelbart kept going. Ted Nelson kept
               writing and publishing and inspiring audiences of young hackers and bright-eyed
               alums. And slowly, very slowly, the computing community began to realise that text
               and hyperlinks on a computer might just work.</p>
            <p>In 1976, the National Endowment for the Humanities supported a FRESS application for
               teaching English poetry. The FRESS team, and particularly Van Dam, had wanted to use
               the system explicitly for teaching since its inception. In the NEH-sponsored course,
               students did all of their critical course reading and writing in the online FRESS
               docuverse. A poetry textbook was created in FRESS, to go along with a large
               collection of poems by Spenser, Tennyson, Blake and others <ptr target="#derose1999" loc="19"/>. Students' and teachers' comments were integrated into the web as the
               course proceeded, prompting further response and debate in the manner of contemporary
               teaching webs. And, incidentally, the term <term>web</term> was actually used in
               accordance with Vannevar Bush's understanding of the term as a cluster of trails <ptr target="#bush1945"/>. It was the first time hypertext had been used as a central
               teaching tool in the humanities, and arguably the first online scholarly
               community.</p>
            <p>Intermedia, a distributed hypermedia system developed at Brown's Institute for
               Research in Information and Scholarship (IRIS) from 1985-1990, grew directly out of
               the work done by Van Dam's group. This was intended to be a networked, multiuser
               teaching tool.</p>
         </div>
         <div>
            <head>Hypertext and the Early Internet</head>
            <p>FRESS occurred on the cusp of the network era — 1969. HES had been neither networked
               nor multi-user. It was intended to be a personal device, for the use of writers and
               editors. But NLS and FRESS were pioneering networked multi-user hypertext systems.
               Although FRESS wasn’t ideal in this sense, <cit>
                  <quote rend="inline" source="#vandam1999">You could still work together. It was multi-user</quote>
                  <ptr target="#vandam1999"/>
               </cit>. NLS and FRESS were both shifting across to a different technical phylum
               — from the personal tool to the public network. From 1968 on, research into hypertext
               systems focussed not on the creation of personal webs, but on shared and distributed
               systems. In fact, Doug Engelbart's NLS was one of the first nodes in the fabled
               ARPANET, which eventually spread its wires around the globe to become the Internet.
               However, as Van Dam observed in an interview with the author, <cit><quote rend="block" source="#vandam1999">I
                  don't think...that any of us truly envisioned that you could have what we have
                  today, because the issues of interoperability just seemed far more insurmountable
                  in those days. We didn't have networks with the kind of bandwidth that you do
                  today. So, I certainly never foresaw the world-wide web. It surprised me. The fact
                  that I can reach out and touch stuff in Ethiopia, as it were, is still a surprise
                  to me.</quote><ptr target="#vandam1999"/></cit>
            </p>
            <p>Van Dam claims he didn't foresee the web; neither he nor Doug Engelbart could have
               imagined where their technologies would lead. But it is undeniable HES became the
               first working example of hypertext on commercial equipment, and in that sense a
               vision of potentiality for all future hypertext technologies. According to Ted
               Nelson, HES was actually the precedent to today's web browser <ptr target="#nelson1999"/>.</p>
            <p>So although there was much resistance to Van Dam's original project, it spawned and
               legitimised a new field of research: hypertext. There is still much work to be done
               in this arena, work which Van Dam continued to do at Brown, and Engelbart at the
               Bootstrap Institute (now called The Doug Engelbart Institute) — the organisation he
               founded to continue evolving the relationship between humans and computers. Because <cit>
                  <quote rend="inline" source="#vandam1999">the things we decide now will continue to haunt us for
                     decades. Decades</quote>
                  <ptr target="#vandam1999"/>
               </cit>.</p>
         </div>
         <div>
            <head>Acknowledgments</head>
            <p>My thanks to Professor Andries Van Dam, Dr Douglas Engelbart and Dr Ted Nelson for
               their time and interviews. Thanks also to Professor Van Dam and Rosemary Michelle
               Simpson for their corrections and comments on this article.</p>
         </div>
      </body>


      <back>
         <listBibl>
            <bibl xml:id="barnet2008" label="Barnet 2008" key="barnet2008">Barnet, Belinda. <title rend="quotes">The Technical Evolution of Vannevar Bush’s Memex</title> in <title rend="italic">Digital Humanities Quarterly</title>, Summer 2008. <ref target="http://www.digitalhumanities.org/dhq/vol/002/1/000015.html">http://www.digitalhumanities.org/dhq/vol/002/1/000015.html</ref>.</bibl>
            <bibl label="Barnet 2006" xml:id="barnet2006" key="barnet2006">Barnet, Belinda. <title rend="quotes">Engelbart's Theory of Technical Evolution.</title>
               <title rend="italic">Continuum: Journal of Media and Cultural Studies</title>, Vol.
               20, no. 4 (2006), pp. 509-521. <ref target="http://www.informaworld.com/smpp/content~content=a767889432~db=all~order=page">http://www.informaworld.com/smpp/content~content=a767889432~db=all~order=page</ref>.</bibl>
            <bibl xml:id="barnet2005" label="Barnet 2005" key="barnet2005">Barnet, Belinda. <title rend="quotes">The Magical Place of Literary Memory: Xanadu</title> in <title rend="italic">Screening the Past</title> 18. <ref target="http://www.latrobe.edu.au/screeningthepast/firstrelease/fr_18/BBfr18a.html">http://www.latrobe.edu.au/screeningthepast/firstrelease/fr_18/BBfr18a.html</ref>.</bibl>
            <bibl xml:id="bush1945" label="Bush 1945" key="bush1945">Bush, Vannevar. <title rend="quotes">As We May Think,</title> reprinted in Nyce &amp; Kahn (eds) 1991,
               pp. 85-112.</bibl>
            <bibl xml:id="carmody1967" label="Carmody et al. 1967" key="carmody1967">Carmody,
               Steven, Gross, Walter, Nelson, Theodor H., Rice, David &amp; Van Dam, Andries. <title rend="quotes">A Hypertext Editing System for the /360</title> in M. Faiman &amp;
               J. Nievergelt (eds.), <title rend="italic">Pertinent Concepts in Computer
                  Graphics</title>, University of Illinois, Urbana, 291–330. </bibl>
            <bibl xml:id="ceruzzi1998" label="Ceruzzi 1998" key="ceruzzi1998">Ceruzzi, Paul E.
                  <title rend="italic">A History of Modern Computing</title>, MIT Press, Cambridge
               MA.</bibl>
            <bibl xml:id="childress1998" label="Childress 1998" key="childress1998">Childress,
               Vincent. <title rend="quotes">Book Review: Engineering problem solving for
                  mathematics, science, and technology education,</title>
               <title rend="italic">Journal of Technology Education</title>, Vol. 10 No. 1 Fall.
                  <ref target="http://scholar.lib.vt.edu/ejournals/JTE/v10n1/childress.html">http://scholar.lib.vt.edu/ejournals/JTE/v10n1/childress.html</ref>.</bibl>
            <bibl xml:id="conklin1987" label="Conklin 1987" key="conklin1987">Conklin, Jeff. <title rend="quotes">Hypertext: An Introduction and Survey,</title>
               <title rend="italic">IEEE Computer</title>, September, pp. 17–41.</bibl>
            <bibl xml:id="derose1999" label="DeRose &amp; Van Dam 1999" key="derose1999">DeRose,
               Steven &amp; Van Dam, Andries. <title rend="quotes">Document Structure and Markup in
                  the FRESS Hypertext System,</title>
               <title rend="italic">Markup Languages: Theory and Practice</title>, Vol. 1.1,
               7–32.</bibl>
            <bibl xml:id="engelbart1999" label="Engelbart 1999" key="[unlisted]">Engelbart,
               Douglas 1999, Interview with the author.</bibl>
            <bibl xml:id="nelson1999" label="Nelson 1999" key="[unlisted]">Nelson, Ted. Interview
               with the author.</bibl>
            <bibl xml:id="nyce1991" label="Nyce &amp; Kahn 1991" key="nyce1991">Nyce, James &amp;
               Kahn, Paul (eds). <title rend="italic">From Memex to Hypertext: Vannevar Bush and the
                  Mind's Machine</title>, Academic Press, London.</bibl>
            <bibl xml:id="owens1991" label="Owens 1991" key="owens1991">Owens, Larry. <title rend="quotes">Vannevar Bush and the Differential Analyzer: The Text and Context of
                  an Early Computer,</title> in Nyce &amp; Kahn (eds.) 1991, 3–38.</bibl>
            <bibl xml:id="vandam1988" label="Van Dam 1988" key="vandam1988">Van Dam, Andries. <title rend="quotes">Hypertext ’87 Keynote Address.</title>
               <title rend="italic">Communications of the ACM</title>, Vol. 31 No. 7, July 1988,
               887–895.</bibl>
            <bibl xml:id="vandam1999" label="Van Dam 1999" key="[unlisted]">Van Dam, Andries.
               Interview with the author.</bibl>
            <bibl xml:id="wardrip2003" label="Wardrip-Fruin &amp; Montfort 2003" key="wardrip2003">Wardrip-Fruin, Noah &amp; Montfort, Nick (eds). <title rend="italic">The New Media
                  Reader</title>, The MIT Press, Cambridge MA.</bibl>
            <bibl xml:id="wolf1995" label="Wolf 1995" key="wolf1995">Wolf, Gary. <title rend="quotes">The Curse of Xanadu,</title>
               <title rend="italic">Wired</title>, Vol. 3 No. 6, June 1995. <ref target="http://www.wired.com/wired/archive/3.06/xanadu.html">http://www.wired.com/wired/archive/3.06/xanadu.html</ref>.</bibl>


         </listBibl>
      </back>
   </text>
</TEI>